{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newResolver",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is721",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lenderAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "maxRentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "dailyRentPrice",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "lendAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "paymentToken",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "willAutoRenew",
          "type": "bool"
        }
      ],
      "name": "Lend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renterAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "rentAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "rentedAt",
          "type": "uint32"
        }
      ],
      "name": "Rent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "collectedAt",
          "type": "uint32"
        }
      ],
      "name": "RentClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "amount",
          "type": "uint16"
        }
      ],
      "name": "StopLend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        }
      ],
      "name": "StopRent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "claimRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lendingID",
          "type": "uint256"
        }
      ],
      "name": "getLending",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rentingID",
          "type": "uint256"
        }
      ],
      "name": "getRenting",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "lendAmount",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "maxRentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "dailyRentPrice",
          "type": "bytes4[]"
        },
        {
          "internalType": "uint8[]",
          "name": "paymentToken",
          "type": "uint8[]"
        },
        {
          "internalType": "bool[]",
          "name": "willAutoRenew",
          "type": "bool[]"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "rentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rentAmount",
          "type": "uint256[]"
        }
      ],
      "name": "rent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        }
      ],
      "name": "setBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newPaused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRentFee",
          "type": "uint256"
        }
      ],
      "name": "setRentFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopLend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
    "1": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "10": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "11": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "12": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "13": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/ERC165.sol",
    "14": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "15": "contracts/Registry.sol",
    "17": "contracts/interfaces/IRegistry.sol",
    "18": "contracts/interfaces/IResolver.sol",
    "2": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "3": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
    "4": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "6": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "8": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
    "9": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry.sol",
    "exportedSymbols": {
      "Address": [
        4684
      ],
      "Context": [
        4387
      ],
      "ERC1155Holder": [
        3238
      ],
      "ERC1155Receiver": [
        3272
      ],
      "ERC165": [
        4340
      ],
      "ERC20": [
        3818
      ],
      "ERC721Holder": [
        4263
      ],
      "IERC1155": [
        3187
      ],
      "IERC1155Receiver": [
        4316
      ],
      "IERC165": [
        4275
      ],
      "IERC20": [
        3896
      ],
      "IERC20Metadata": [
        4365
      ],
      "IERC721": [
        4236
      ],
      "IERC721Receiver": [
        4702
      ],
      "IRegistry": [
        2970
      ],
      "IResolver": [
        2987
      ],
      "Registry": [
        2657
      ],
      "SafeERC20": [
        4120
      ]
    },
    "id": 2658,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:15"
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 3819,
        "src": "57:83:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 3897,
        "src": "141:84:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 4121,
        "src": "226:93:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 4237,
        "src": "320:86:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 4264,
        "src": "407:97:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 3188,
        "src": "505:88:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 3239,
        "src": "594:99:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 3273,
        "src": "694:101:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IRegistry.sol",
        "file": "./interfaces/IRegistry.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2658,
        "sourceUnit": 2971,
        "src": "797:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2970,
              "src": "2134:9:15"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:9:15"
          },
          {
            "baseName": {
              "id": 13,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4263,
              "src": "2145:12:15"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "2145:12:15"
          },
          {
            "baseName": {
              "id": 15,
              "name": "ERC1155Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3272,
              "src": "2159:15:15"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "2159:15:15"
          },
          {
            "baseName": {
              "id": 17,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3238,
              "src": "2176:13:15"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "2176:13:15"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2657,
        "linearizedBaseContracts": [
          2657,
          3238,
          3272,
          4316,
          4340,
          4275,
          4263,
          4702,
          2970
        ],
        "name": "Registry",
        "nameLocation": "2122:8:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 19,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4120,
              "src": "2202:9:15"
            },
            "nodeType": "UsingForDirective",
            "src": "2196:26:15",
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3818,
                "src": "2216:5:15"
              },
              "referencedDeclaration": 3818,
              "src": "2216:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3818",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "resolver",
            "nameLocation": "2246:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2228:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IResolver_$2987",
              "typeString": "contract IResolver"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "IResolver",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2987,
                "src": "2228:9:15"
              },
              "referencedDeclaration": 2987,
              "src": "2228:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IResolver_$2987",
                "typeString": "contract IResolver"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "2276:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2260:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2260:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "beneficiary",
            "nameLocation": "2311:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2287:35:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2287:15:15",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "lendingID",
            "nameLocation": "2344:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2328:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2328:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2356:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "rentingID",
            "nameLocation": "2379:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2363:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2363:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2391:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 38,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "2410:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2398:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2398:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2419:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf2b23ea",
            "id": 41,
            "mutability": "mutable",
            "name": "rentFee",
            "nameLocation": "2445:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2430:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2430:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2455:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 44,
            "mutability": "constant",
            "name": "SECONDS_IN_DAY",
            "nameLocation": "2487:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2462:47:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2462:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2504:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 49,
            "mutability": "mutable",
            "name": "lendings",
            "nameLocation": "2551:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2515:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 45,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2523:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2515:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
              },
              "valueType": {
                "id": 47,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 46,
                  "name": "Lending",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2856,
                  "src": "2534:7:15"
                },
                "referencedDeclaration": 2856,
                "src": "2534:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                  "typeString": "struct IRegistry.Lending"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "rentings",
            "nameLocation": "2601:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2657,
            "src": "2565:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 50,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2573:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2565:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
              },
              "valueType": {
                "id": 52,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 51,
                  "name": "Renting",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2865,
                  "src": "2584:7:15"
                },
                "referencedDeclaration": 2865,
                "src": "2584:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                  "typeString": "struct IRegistry.Renting"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "2637:76:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2655:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2655:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2669:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2655:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061646d696e",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2676:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        },
                        "value": "ReNFT::not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2647:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2647:48:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "2647:48:15"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "2705:1:15"
                }
              ]
            },
            "id": 66,
            "name": "onlyAdmin",
            "nameLocation": "2625:9:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:2:15"
            },
            "src": "2616:97:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "2740:61:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2758:7:15",
                        "subExpression": {
                          "id": 69,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2759:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706175736564",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2767:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        },
                        "value": "ReNFT::paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2750:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:33:15"
                },
                {
                  "id": 74,
                  "nodeType": "PlaceholderStatement",
                  "src": "2793:1:15"
                }
              ]
            },
            "id": 76,
            "name": "notPaused",
            "nameLocation": "2728:9:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:2:15"
            },
            "src": "2719:82:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "2890:240:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "newResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2920:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2205,
                      "src": "2900:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2900:32:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90,
                        "name": "newBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2962:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 89,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2205,
                      "src": "2942:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2942:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "2942:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3007:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2205,
                      "src": "2987:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2987:29:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "2987:29:15"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3026:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$2987",
                        "typeString": "contract IResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99,
                          "name": "newResolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3047:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 98,
                        "name": "IResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2987,
                        "src": "3037:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IResolver_$2987_$",
                          "typeString": "type(contract IResolver)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3037:22:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$2987",
                        "typeString": "contract IResolver"
                      }
                    },
                    "src": "3026:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IResolver_$2987",
                      "typeString": "contract IResolver"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "3026:33:15"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3069:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3083:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3069:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:28:15"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3107:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3115:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3107:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "3107:16:15"
                }
              ]
            },
            "id": 112,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "newResolver",
                  "nameLocation": "2827:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2819:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "2856:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2840:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2840:15:15",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "2880:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2872:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2872:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:71:15"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2890:0:15"
            },
            "scope": 2657,
            "src": "2807:323:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2893
            ],
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "3498:343:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 144,
                        "name": "handleLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "3532:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 146,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "3592:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 147,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "3621:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 148,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "3649:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 149,
                            "name": "lendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "3674:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 150,
                            "name": "maxRentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3702:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 151,
                            "name": "dailyRentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "3735:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            }
                          },
                          {
                            "id": 152,
                            "name": "paymentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3767:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 153,
                            "name": "willAutoRenew",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "3797:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[] memory"
                            }
                          ],
                          "id": 145,
                          "name": "createLendCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1919,
                          "src": "3556:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes4_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2838_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,bytes4[] memory,uint8[] memory,bool[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3556:268:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 143,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "3508:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$_$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3508:326:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:326:15"
                }
              ]
            },
            "functionSelector": "dc68a142",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 140,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3488:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "3488:9:15"
              }
            ],
            "name": "lend",
            "nameLocation": "3145:4:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 139,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3479:8:15"
            },
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3190:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3159:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 114,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 113,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "3159:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "3159:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 115,
                    "nodeType": "ArrayTypeName",
                    "src": "3159:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3228:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3211:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3211:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 118,
                    "nodeType": "ArrayTypeName",
                    "src": "3211:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3265:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3248:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 120,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3248:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 121,
                    "nodeType": "ArrayTypeName",
                    "src": "3248:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "3299:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3282:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3282:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 124,
                    "nodeType": "ArrayTypeName",
                    "src": "3282:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "3334:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3319:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 126,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3319:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 127,
                    "nodeType": "ArrayTypeName",
                    "src": "3319:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "3375:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3359:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 129,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "3359:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 130,
                    "nodeType": "ArrayTypeName",
                    "src": "3359:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "3414:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3399:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3399:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 133,
                    "nodeType": "ArrayTypeName",
                    "src": "3399:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "willAutoRenew",
                  "nameLocation": "3450:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3436:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "3436:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 136,
                    "nodeType": "ArrayTypeName",
                    "src": "3436:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3149:320:15"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3498:0:15"
            },
            "scope": 2657,
            "src": "3136:705:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2909
            ],
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "4059:129:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "handleStopLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "4080:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 180,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "4117:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 181,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "4130:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 182,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "4142:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 183,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "4151:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4177:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4163:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 184,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4167:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 185,
                                "nodeType": "ArrayTypeName",
                                "src": "4167:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4163:16:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 179,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2058,
                          "src": "4096:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2838_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4096:84:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 177,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "4069:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$_$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4069:112:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "4069:112:15"
                }
              ]
            },
            "functionSelector": "c9c40183",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 174,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4049:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4049:9:15"
              }
            ],
            "name": "stopLend",
            "nameLocation": "3856:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4040:8:15"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3905:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "3874:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 160,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 159,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "3874:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "3874:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 161,
                    "nodeType": "ArrayTypeName",
                    "src": "3874:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3943:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "3926:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 163,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3926:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 164,
                    "nodeType": "ArrayTypeName",
                    "src": "3926:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3980:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "3963:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 166,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3963:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 167,
                    "nodeType": "ArrayTypeName",
                    "src": "3963:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "4014:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "3997:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 169,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3997:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 170,
                    "nodeType": "ArrayTypeName",
                    "src": "3997:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3864:166:15"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4059:0:15"
            },
            "scope": 2657,
            "src": "3847:341:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2931
            ],
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "4484:153:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "handleRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "4518:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 221,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "4549:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 222,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4562:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 223,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "4574:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 224,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "4583:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 225,
                            "name": "rentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 209,
                            "src": "4595:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 226,
                            "name": "rentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "4609:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 220,
                          "name": "createRentCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1988,
                          "src": "4530:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2838_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4530:90:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 218,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "4494:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$_$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4494:136:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "4494:136:15"
                }
              ]
            },
            "functionSelector": "cbe55e54",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4474:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4474:9:15"
              }
            ],
            "name": "rent",
            "nameLocation": "4203:4:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 214,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4465:8:15"
            },
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4248:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "4217:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 195,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 194,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "4217:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "4217:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 196,
                    "nodeType": "ArrayTypeName",
                    "src": "4217:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4286:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "4269:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 198,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4269:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 199,
                    "nodeType": "ArrayTypeName",
                    "src": "4269:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "4323:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "4306:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 201,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4306:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 202,
                    "nodeType": "ArrayTypeName",
                    "src": "4306:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "4357:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "4340:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4340:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "4340:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "4392:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "4377:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 207,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "4377:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 208,
                    "nodeType": "ArrayTypeName",
                    "src": "4377:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "4431:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "4414:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 210,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4414:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 211,
                    "nodeType": "ArrayTypeName",
                    "src": "4414:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4207:240:15"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4484:0:15"
            },
            "scope": 2657,
            "src": "4194:443:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2950
            ],
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "4892:123:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "handleStopRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "4913:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 256,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "4950:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 257,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "4963:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 258,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "4975:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 259,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "4984:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 260,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "4996:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 255,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2058,
                          "src": "4929:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2838_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4929:78:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 253,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "4902:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$_$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4902:106:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:106:15"
                }
              ]
            },
            "functionSelector": "14b5685c",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 251,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 250,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4882:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4882:9:15"
              }
            ],
            "name": "stopRent",
            "nameLocation": "4652:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 249,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4873:8:15"
            },
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4701:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4670:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 233,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 232,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "4670:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "4670:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 234,
                    "nodeType": "ArrayTypeName",
                    "src": "4670:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4739:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4722:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 236,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4722:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 237,
                    "nodeType": "ArrayTypeName",
                    "src": "4722:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "4776:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4759:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 239,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4759:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 240,
                    "nodeType": "ArrayTypeName",
                    "src": "4759:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "4810:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4793:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 242,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4793:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 243,
                    "nodeType": "ArrayTypeName",
                    "src": "4793:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "4847:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4830:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 245,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4830:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 246,
                    "nodeType": "ArrayTypeName",
                    "src": "4830:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4660:203:15"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4892:0:15"
            },
            "scope": 2657,
            "src": "4643:372:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2969
            ],
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "5271:124:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 288,
                        "name": "handleClaimRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "5292:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 290,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "5330:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 291,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "5343:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 292,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5355:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 293,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "5364:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 294,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "5376:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 289,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2058,
                          "src": "5309:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2838_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5309:78:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 287,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1439,
                      "src": "5281:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$_$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:107:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:107:15"
                }
              ]
            },
            "functionSelector": "937821a1",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 285,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 284,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5261:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5261:9:15"
              }
            ],
            "name": "claimRent",
            "nameLocation": "5030:9:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5252:8:15"
            },
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "5080:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "5049:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 267,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 266,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "5049:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "5049:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 268,
                    "nodeType": "ArrayTypeName",
                    "src": "5049:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "5118:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "5101:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 270,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5101:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 271,
                    "nodeType": "ArrayTypeName",
                    "src": "5101:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "5155:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "5138:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 273,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5138:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 274,
                    "nodeType": "ArrayTypeName",
                    "src": "5138:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "5189:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "5172:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 276,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5172:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 277,
                    "nodeType": "ArrayTypeName",
                    "src": "5172:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "5226:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "5209:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5209:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 280,
                    "nodeType": "ArrayTypeName",
                    "src": "5209:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5039:203:15"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5271:0:15"
            },
            "scope": 2657,
            "src": "5021:374:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "5641:1701:15",
              "statements": [
                {
                  "body": {
                    "id": 466,
                    "nodeType": "Block",
                    "src": "5696:1426:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 318,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "5727:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 319,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "5731:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 317,
                            "name": "ensureIsLendable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2403,
                            "src": "5710:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_CallData_$2838_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.CallData memory,uint256) pure"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5710:23:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "5710:23:15"
                      },
                      {
                        "assignments": [
                          323
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 323,
                            "mutability": "mutable",
                            "name": "identifier",
                            "nameLocation": "5755:10:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 466,
                            "src": "5747:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 322,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5747:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 339,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 327,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 302,
                                      "src": "5795:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 328,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "5795:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 331,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 329,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 302,
                                      "src": "5809:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "5809:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5795:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 332,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 302,
                                      "src": "5819:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 333,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "5819:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 335,
                                  "indexExpression": {
                                    "id": 334,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 306,
                                    "src": "5830:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5819:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 336,
                                  "name": "lendingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "5834:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 325,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5778:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5778:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5778:66:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 324,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5768:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5768:77:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5747:98:15"
                      },
                      {
                        "assignments": [
                          344
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 344,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "5885:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 466,
                            "src": "5859:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 343,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 342,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2856,
                                "src": "5859:17:15"
                              },
                              "referencedDeclaration": 2856,
                              "src": "5859:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 348,
                        "initialValue": {
                          "baseExpression": {
                            "id": 345,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "5895:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 347,
                          "indexExpression": {
                            "id": 346,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "5904:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5895:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5859:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 350,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 344,
                              "src": "5942:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 349,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2249,
                              2305
                            ],
                            "referencedDeclaration": 2249,
                            "src": "5929:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2856_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5929:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 352,
                        "nodeType": "ExpressionStatement",
                        "src": "5929:21:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 356,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 302,
                                      "src": "5993:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 357,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "paymentToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2834,
                                    "src": "5993:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                      "typeString": "uint8[] memory"
                                    }
                                  },
                                  "id": 359,
                                  "indexExpression": {
                                    "id": 358,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 306,
                                    "src": "6009:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5993:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5987:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 354,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5987:5:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5987:25:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 353,
                            "name": "ensureTokenNotSentinel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2567,
                            "src": "5964:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$__$",
                              "typeString": "function (uint8) pure"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5964:49:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 362,
                        "nodeType": "ExpressionStatement",
                        "src": "5964:49:15"
                      },
                      {
                        "assignments": [
                          364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 364,
                            "mutability": "mutable",
                            "name": "is721",
                            "nameLocation": "6032:5:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 466,
                            "src": "6027:10:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6027:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 373,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_NFTStandard_$2796",
                            "typeString": "enum IRegistry.NFTStandard"
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 365,
                                "name": "cd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "6040:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                  "typeString": "struct IRegistry.CallData memory"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2804,
                              "src": "6040:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                "typeString": "enum IRegistry.NFTStandard[] memory"
                              }
                            },
                            "id": 368,
                            "indexExpression": {
                              "id": 367,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "6055:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6040:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2796",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 369,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2970,
                                "src": "6061:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2796,
                              "src": "6061:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2796_$",
                                "typeString": "type(enum IRegistry.NFTStandard)"
                              }
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "E721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2794,
                            "src": "6061:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2796",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "src": "6040:47:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6027:60:15"
                      },
                      {
                        "assignments": [
                          375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 375,
                            "mutability": "mutable",
                            "name": "_lendAmount",
                            "nameLocation": "6108:11:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 466,
                            "src": "6101:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 374,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "6101:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 383,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 378,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "6129:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 379,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2813,
                                "src": "6129:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 381,
                              "indexExpression": {
                                "id": 380,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "6143:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6129:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6122:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 376,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "6122:6:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6122:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6101:45:15"
                      },
                      {
                        "condition": {
                          "id": 384,
                          "name": "is721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "6164:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 392,
                        "nodeType": "IfStatement",
                        "src": "6160:78:15",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 386,
                                  "name": "_lendAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 375,
                                  "src": "6179:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6194:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6179:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "52654e46543a3a6c656e64416d6f756e742073686f756c6420626520657175616c20746f2031",
                                "id": 389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6197:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a4109f784e16c3d5be88b06f2bc36659ef06d70b4ffd0375e6baf818b9523812",
                                  "typeString": "literal_string \"ReNFT::lendAmount should be equal to 1\""
                                },
                                "value": "ReNFT::lendAmount should be equal to 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a4109f784e16c3d5be88b06f2bc36659ef06d70b4ffd0375e6baf818b9523812",
                                  "typeString": "literal_string \"ReNFT::lendAmount should be equal to 1\""
                                }
                              ],
                              "id": 385,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "6171:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6171:67:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 391,
                          "nodeType": "ExpressionStatement",
                          "src": "6171:67:15"
                        }
                      },
                      {
                        "expression": {
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 393,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "6252:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 395,
                            "indexExpression": {
                              "id": 394,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "6261:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6252:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 398,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 302,
                                    "src": "6324:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 399,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2804,
                                  "src": "6324:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 401,
                                "indexExpression": {
                                  "id": 400,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 306,
                                  "src": "6339:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6324:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 404,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6382:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6382:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6374:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 402,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6374:8:15",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6374:19:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 407,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 302,
                                    "src": "6428:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 408,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "maxRentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2816,
                                  "src": "6428:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 410,
                                "indexExpression": {
                                  "id": 409,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 306,
                                  "src": "6447:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6428:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 411,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 302,
                                    "src": "6483:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 412,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dailyRentPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2819,
                                  "src": "6483:17:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                    "typeString": "bytes4[] memory"
                                  }
                                },
                                "id": 414,
                                "indexExpression": {
                                  "id": 413,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 306,
                                  "src": "6501:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6483:20:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 415,
                                "name": "_lendAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "6533:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "id": 416,
                                "name": "_lendAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "6579:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 417,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 302,
                                    "src": "6622:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "paymentToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2834,
                                  "src": "6622:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 420,
                                "indexExpression": {
                                  "id": 419,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 306,
                                  "src": "6638:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6622:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 421,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 302,
                                    "src": "6673:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 422,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "willAutoRenew",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2837,
                                  "src": "6673:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                    "typeString": "bool[] memory"
                                  }
                                },
                                "id": 424,
                                "indexExpression": {
                                  "id": 423,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 306,
                                  "src": "6690:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6673:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "expression": {
                                "id": 396,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2970,
                                "src": "6275:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Lending",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2856,
                              "src": "6275:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Lending_$2856_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Lending storage pointer)"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "nftStandard",
                              "lenderAddress",
                              "maxRentDuration",
                              "dailyRentPrice",
                              "lendAmount",
                              "availableAmount",
                              "paymentToken",
                              "willAutoRenew"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6275:432:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "src": "6252:455:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "6252:455:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 431,
                              "name": "is721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "6758:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 432,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6781:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6781:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 434,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "6809:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 435,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2807,
                                "src": "6809:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 438,
                              "indexExpression": {
                                "expression": {
                                  "id": 436,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "6823:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2798,
                                "src": "6823:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6809:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 439,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "6849:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 440,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2810,
                                "src": "6849:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 442,
                              "indexExpression": {
                                "id": 441,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "6860:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6849:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 443,
                              "name": "lendingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "6880:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 444,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "6907:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maxRentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2816,
                                "src": "6907:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 447,
                              "indexExpression": {
                                "id": 446,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "6926:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6907:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 448,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "6946:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 449,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2819,
                                "src": "6946:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 451,
                              "indexExpression": {
                                "id": 450,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "6964:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6946:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 452,
                              "name": "_lendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "6984:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 453,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "7013:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 454,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "paymentToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2834,
                                "src": "7013:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 456,
                              "indexExpression": {
                                "id": 455,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "7029:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7013:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 457,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "7049:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "willAutoRenew",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2837,
                                "src": "7049:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                  "typeString": "bool[] memory"
                                }
                              },
                              "id": 460,
                              "indexExpression": {
                                "id": 459,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "7066:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7049:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 428,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2970,
                              "src": "6726:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Lend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2759,
                            "src": "6726:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_uint8_$_t_bool_$returns$__$",
                              "typeString": "function (bool,address,address,uint256,uint256,uint8,bytes4,uint16,uint8,bool)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6726:360:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 462,
                        "nodeType": "EmitStatement",
                        "src": "6721:365:15"
                      },
                      {
                        "expression": {
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7100:11:15",
                          "subExpression": {
                            "id": 463,
                            "name": "lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "7100:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 465,
                        "nodeType": "ExpressionStatement",
                        "src": "7100:11:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 310,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "5677:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 311,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "5681:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "5681:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5677:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 467,
                  "initializationExpression": {
                    "assignments": [
                      306
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5664:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "5656:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5656:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 309,
                    "initialValue": {
                      "expression": {
                        "id": 307,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "5668:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2798,
                      "src": "5668:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5656:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5691:3:15",
                      "subExpression": {
                        "id": 314,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "5691:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 316,
                    "nodeType": "ExpressionStatement",
                    "src": "5691:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "5651:1471:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 469,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "7157:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 470,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7173:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7173:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7205:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2657",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2657",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7197:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7197:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7197:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 477,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7233:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2810,
                            "src": "7233:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 479,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7245:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2798,
                            "src": "7245:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 481,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7254:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "7254:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7264:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 476,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2189,
                          "src": "7224:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7224:42:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 486,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7289:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 487,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2813,
                            "src": "7289:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 488,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7304:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2798,
                            "src": "7304:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 490,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "7313:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "7313:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7323:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 485,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2189,
                          "src": "7280:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7280:45:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 468,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "7131:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7131:204:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "7131:204:15"
                }
              ]
            },
            "id": 497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleLend",
            "nameLocation": "5592:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "5629:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "5603:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 301,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 300,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "5603:18:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "5603:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5602:30:15"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5641:0:15"
            },
            "scope": 2657,
            "src": "5583:1759:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "7410:1056:15",
              "statements": [
                {
                  "assignments": [
                    507
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 507,
                      "mutability": "mutable",
                      "name": "lentAmounts",
                      "nameLocation": "7437:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "7420:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7420:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 506,
                        "nodeType": "ArrayTypeName",
                        "src": "7420:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 517,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 511,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 500,
                            "src": "7465:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "right",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2800,
                          "src": "7465:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 513,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 500,
                            "src": "7476:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "left",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2798,
                          "src": "7476:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7465:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7451:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 508,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7455:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 509,
                        "nodeType": "ArrayTypeName",
                        "src": "7455:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7451:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7420:64:15"
                },
                {
                  "body": {
                    "id": 619,
                    "nodeType": "Block",
                    "src": "7539:703:15",
                    "statements": [
                      {
                        "assignments": [
                          531
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 531,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "7561:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 619,
                            "src": "7553:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 530,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7553:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 550,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 535,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 500,
                                      "src": "7624:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 536,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "7624:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 539,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 537,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 500,
                                      "src": "7638:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 538,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "7638:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7624:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 540,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 500,
                                      "src": "7648:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 541,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "7648:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 543,
                                  "indexExpression": {
                                    "id": 542,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 519,
                                    "src": "7659:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7648:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 544,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 500,
                                      "src": "7663:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 545,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2822,
                                    "src": "7663:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 547,
                                  "indexExpression": {
                                    "id": 546,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 519,
                                    "src": "7676:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7663:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 533,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7607:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "7607:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7607:72:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 532,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "7597:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7597:83:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7553:127:15"
                      },
                      {
                        "assignments": [
                          553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 553,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "7710:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 619,
                            "src": "7694:23:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 552,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 551,
                                "name": "Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2856,
                                "src": "7694:7:15"
                              },
                              "referencedDeclaration": 2856,
                              "src": "7694:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 557,
                        "initialValue": {
                          "baseExpression": {
                            "id": 554,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7720:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 556,
                          "indexExpression": {
                            "id": 555,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "7729:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7720:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7694:53:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 559,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "7777:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 558,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2277,
                              2333
                            ],
                            "referencedDeclaration": 2277,
                            "src": "7761:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2856_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7761:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "7761:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 563,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "7817:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 564,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7826:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7826:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 562,
                            "name": "ensureIsStoppable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2529,
                            "src": "7799:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2856_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,address) pure"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7799:38:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 567,
                        "nodeType": "ExpressionStatement",
                        "src": "7799:38:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 569,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 500,
                                    "src": "7859:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 570,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2804,
                                  "src": "7859:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 572,
                                "indexExpression": {
                                  "id": 571,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 519,
                                  "src": "7874:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7859:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 573,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 553,
                                  "src": "7880:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 574,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2841,
                                "src": "7880:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "7859:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7901:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 568,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7851:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7851:80:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 578,
                        "nodeType": "ExpressionStatement",
                        "src": "7851:80:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 580,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 553,
                                  "src": "7953:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 581,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2849,
                                "src": "7953:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 582,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 553,
                                  "src": "7975:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2851,
                                "src": "7975:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "7953:45:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a6163746976656c792072656e746564",
                              "id": 585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8000:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              },
                              "value": "ReNFT::actively rented"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              }
                            ],
                            "id": 579,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7945:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7945:80:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 587,
                        "nodeType": "ExpressionStatement",
                        "src": "7945:80:15"
                      },
                      {
                        "expression": {
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 588,
                              "name": "lentAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "8039:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 593,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 589,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 519,
                                "src": "8051:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 590,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "8055:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 591,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2798,
                                "src": "8055:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8051:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8039:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 594,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "8066:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 595,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2849,
                            "src": "8066:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8039:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 597,
                        "nodeType": "ExpressionStatement",
                        "src": "8039:45:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 601,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "8122:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 602,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2822,
                                "src": "8122:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 604,
                              "indexExpression": {
                                "id": 603,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 519,
                                "src": "8135:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8122:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 607,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8146:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 608,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8146:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8139:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 605,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8139:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8139:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "id": 610,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 553,
                                "src": "8164:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lendAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2849,
                              "src": "8164:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "expression": {
                              "id": 598,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2970,
                              "src": "8103:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopLend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2781,
                            "src": "8103:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_uint16_$returns$__$",
                              "typeString": "function (uint256,uint32,uint16)"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8103:80:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 613,
                        "nodeType": "EmitStatement",
                        "src": "8098:85:15"
                      },
                      {
                        "expression": {
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8197:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 614,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "8204:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 616,
                            "indexExpression": {
                              "id": 615,
                              "name": "lendingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "8213:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8204:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 618,
                        "nodeType": "ExpressionStatement",
                        "src": "8197:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 523,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "7520:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 524,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "7524:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "7524:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7520:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 620,
                  "initializationExpression": {
                    "assignments": [
                      519
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7507:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "7499:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7499:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 522,
                    "initialValue": {
                      "expression": {
                        "id": 520,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "7511:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2798,
                      "src": "7511:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7499:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7534:3:15",
                      "subExpression": {
                        "id": 527,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "7534:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 529,
                    "nodeType": "ExpressionStatement",
                    "src": "7534:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "7494:748:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 622,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "8277:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 625,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8301:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2657",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2657",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8293:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8293:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8293:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 627,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8320:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8320:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 630,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "8353:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2810,
                            "src": "8353:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 632,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "8365:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2798,
                            "src": "8365:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 634,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "8374:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 635,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "8374:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8384:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 629,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2189,
                          "src": "8344:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8344:42:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 639,
                            "name": "lentAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "8409:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 640,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "8422:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2798,
                            "src": "8422:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 642,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "8431:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "8431:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 644,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "8441:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2798,
                            "src": "8441:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 638,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2189,
                          "src": "8400:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8400:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 621,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "8251:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8251:208:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "8251:208:15"
                }
              ]
            },
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopLend",
            "nameLocation": "7357:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "7398:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "7372:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 499,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 498,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "7372:18:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "7372:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7371:30:15"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7410:0:15"
            },
            "scope": 2657,
            "src": "7348:1118:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 903,
              "nodeType": "Block",
              "src": "8530:1924:15",
              "statements": [
                {
                  "body": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "8585:1863:15",
                    "statements": [
                      {
                        "assignments": [
                          669
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 669,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "8607:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 901,
                            "src": "8599:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 668,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8599:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 688,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 673,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "8670:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 674,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "8670:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 677,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 675,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "8684:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 676,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "8684:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8670:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 678,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "8694:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 679,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "8694:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 681,
                                  "indexExpression": {
                                    "id": 680,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "8705:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8694:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 682,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "8709:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 683,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2822,
                                    "src": "8709:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 685,
                                  "indexExpression": {
                                    "id": 684,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "8722:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8709:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 671,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8653:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8653:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8653:72:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 670,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8643:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8643:83:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8599:127:15"
                      },
                      {
                        "assignments": [
                          690
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 690,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "8748:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 901,
                            "src": "8740:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 689,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8740:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 706,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 694,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "8795:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 695,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "8795:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 698,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 696,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "8809:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 697,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "8809:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8795:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 699,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "8819:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 700,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "8819:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 702,
                                  "indexExpression": {
                                    "id": 701,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "8830:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8819:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 703,
                                  "name": "rentingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "8834:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 692,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8778:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8778:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8778:66:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 691,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8768:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8768:77:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8740:105:15"
                      },
                      {
                        "assignments": [
                          711
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 711,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "8885:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 901,
                            "src": "8859:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 710,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 709,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2856,
                                "src": "8859:17:15"
                              },
                              "referencedDeclaration": 2856,
                              "src": "8859:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 715,
                        "initialValue": {
                          "baseExpression": {
                            "id": 712,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "8895:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 714,
                          "indexExpression": {
                            "id": 713,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "8904:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8895:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8859:63:15"
                      },
                      {
                        "assignments": [
                          720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 720,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "8962:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 901,
                            "src": "8936:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 719,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 718,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2865,
                                "src": "8936:17:15"
                              },
                              "referencedDeclaration": 2865,
                              "src": "8936:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 724,
                        "initialValue": {
                          "baseExpression": {
                            "id": 721,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "8972:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 723,
                          "indexExpression": {
                            "id": 722,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "8981:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8972:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8936:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 726,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "9029:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 725,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2277,
                              2333
                            ],
                            "referencedDeclaration": 2277,
                            "src": "9013:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2856_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9013:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 728,
                        "nodeType": "ExpressionStatement",
                        "src": "9013:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 730,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "9064:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 729,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2249,
                              2305
                            ],
                            "referencedDeclaration": 2305,
                            "src": "9051:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2865_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9051:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 732,
                        "nodeType": "ExpressionStatement",
                        "src": "9051:21:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 734,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "9103:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 735,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 653,
                              "src": "9112:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 736,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "9116:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 737,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9119:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9119:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 733,
                            "name": "ensureIsRentable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2484,
                            "src": "9086:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2856_memory_ptr_$_t_struct$_CallData_$2838_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.CallData memory,uint256,address) pure"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9086:44:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "9086:44:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 742,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 653,
                                    "src": "9152:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 743,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2804,
                                  "src": "9152:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 745,
                                "indexExpression": {
                                  "id": 744,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "9167:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9152:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 746,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "9173:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 747,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2841,
                                "src": "9173:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "9152:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9194:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 741,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9144:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9144:80:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 751,
                        "nodeType": "ExpressionStatement",
                        "src": "9144:80:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 753,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 653,
                                    "src": "9246:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 754,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2831,
                                  "src": "9246:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 756,
                                "indexExpression": {
                                  "id": 755,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "9260:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9246:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 757,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 711,
                                  "src": "9266:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 758,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2851,
                                "src": "9266:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "9246:43:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c69642072656e7420616d6f756e74",
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9291:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              },
                              "value": "ReNFT::invalid rent amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              }
                            ],
                            "id": 752,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9238:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9238:82:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "9238:82:15"
                      },
                      {
                        "assignments": [
                          764
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 764,
                            "mutability": "mutable",
                            "name": "paymentTokenIx",
                            "nameLocation": "9340:14:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 901,
                            "src": "9334:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 763,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "9334:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 770,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 767,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 711,
                                "src": "9363:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2853,
                              "src": "9363:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9357:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 765,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "9357:5:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9357:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9334:50:15"
                      },
                      {
                        "assignments": [
                          773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 773,
                            "mutability": "mutable",
                            "name": "paymentToken",
                            "nameLocation": "9404:12:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 901,
                            "src": "9398:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3818",
                              "typeString": "contract ERC20"
                            },
                            "typeName": {
                              "id": 772,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 771,
                                "name": "ERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3818,
                                "src": "9398:5:15"
                              },
                              "referencedDeclaration": 3818,
                              "src": "9398:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3818",
                                "typeString": "contract ERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 780,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 777,
                                  "name": "paymentTokenIx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 764,
                                  "src": "9450:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 775,
                                  "name": "resolver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "9425:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IResolver_$2987",
                                    "typeString": "contract IResolver"
                                  }
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getPaymentToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2979,
                                "src": "9425:24:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                                  "typeString": "function (uint8) view external returns (address)"
                                }
                              },
                              "id": 778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9425:40:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 774,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3818,
                            "src": "9419:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$3818_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9419:47:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3818",
                            "typeString": "contract ERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9398:68:15"
                      },
                      {
                        "assignments": [
                          782
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 782,
                            "mutability": "mutable",
                            "name": "decimals",
                            "nameLocation": "9488:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 901,
                            "src": "9480:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 781,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9480:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 786,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 783,
                              "name": "paymentToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "9499:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3818",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3347,
                            "src": "9499:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9499:23:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9480:42:15"
                      },
                      {
                        "id": 830,
                        "nodeType": "Block",
                        "src": "9536:337:15",
                        "statements": [
                          {
                            "assignments": [
                              788
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 788,
                                "mutability": "mutable",
                                "name": "scale",
                                "nameLocation": "9562:5:15",
                                "nodeType": "VariableDeclaration",
                                "scope": 830,
                                "src": "9554:13:15",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 787,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9554:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 792,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9570:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 790,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "9576:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9570:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9554:30:15"
                          },
                          {
                            "assignments": [
                              794
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 794,
                                "mutability": "mutable",
                                "name": "rentPrice",
                                "nameLocation": "9610:9:15",
                                "nodeType": "VariableDeclaration",
                                "scope": 830,
                                "src": "9602:17:15",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 793,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9602:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 810,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 795,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "9622:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 796,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2831,
                                    "src": "9622:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 798,
                                  "indexExpression": {
                                    "id": 797,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "9636:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9622:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 799,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "9641:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 800,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentDuration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2828,
                                    "src": "9641:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                      "typeString": "uint8[] memory"
                                    }
                                  },
                                  "id": 802,
                                  "indexExpression": {
                                    "id": 801,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "9657:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9641:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "9622:37:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 805,
                                      "name": "lending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 711,
                                      "src": "9674:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                        "typeString": "struct IRegistry.Lending storage pointer"
                                      }
                                    },
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "dailyRentPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2847,
                                    "src": "9674:22:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 807,
                                    "name": "scale",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "9698:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 804,
                                  "name": "unpackPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2139,
                                  "src": "9662:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (bytes4,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9662:42:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9622:82:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9602:102:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 812,
                                    "name": "rentPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 794,
                                    "src": "9730:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9742:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9730:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                                  "id": 815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9745:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  },
                                  "value": "ReNFT::rent price is zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  }
                                ],
                                "id": 811,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "9722:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9722:51:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 817,
                            "nodeType": "ExpressionStatement",
                            "src": "9722:51:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 821,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9821:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9821:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 825,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "9841:4:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Registry_$2657",
                                        "typeString": "contract Registry"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Registry_$2657",
                                        "typeString": "contract Registry"
                                      }
                                    ],
                                    "id": 824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9833:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 823,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9833:7:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9833:13:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 827,
                                  "name": "rentPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 794,
                                  "src": "9848:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 818,
                                  "name": "paymentToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 773,
                                  "src": "9791:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$3818",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "safeTransferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3953,
                                "src": "9791:29:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3896_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3896_$",
                                  "typeString": "function (contract IERC20,address,address,uint256)"
                                }
                              },
                              "id": 828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9791:67:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 829,
                            "nodeType": "ExpressionStatement",
                            "src": "9791:67:15"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 831,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "9886:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 833,
                            "indexExpression": {
                              "id": 832,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "9895:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9886:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 838,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9975:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9975:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9967:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 836,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9967:8:15",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9967:19:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 843,
                                        "name": "cd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 653,
                                        "src": "10023:2:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                          "typeString": "struct IRegistry.CallData memory"
                                        }
                                      },
                                      "id": 844,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rentAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2831,
                                      "src": "10023:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 846,
                                    "indexExpression": {
                                      "id": 845,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 657,
                                      "src": "10037:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10023:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10016:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint16_$",
                                    "typeString": "type(uint16)"
                                  },
                                  "typeName": {
                                    "id": 841,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10016:6:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10016:24:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 848,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 653,
                                    "src": "10072:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 849,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2828,
                                  "src": "10072:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 851,
                                "indexExpression": {
                                  "id": 850,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "10088:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10072:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 854,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "10125:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "10125:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10118:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 852,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10118:6:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10118:23:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "id": 834,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2970,
                                "src": "9916:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Renting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2865,
                              "src": "9916:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Renting_$2865_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Renting storage pointer)"
                              }
                            },
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "renterAddress",
                              "rentAmount",
                              "rentDuration",
                              "rentedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "9916:240:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "src": "9886:270:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "id": 859,
                        "nodeType": "ExpressionStatement",
                        "src": "9886:270:15"
                      },
                      {
                        "expression": {
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 860,
                                "name": "lendings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "10170:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                                  "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                }
                              },
                              "id": 862,
                              "indexExpression": {
                                "id": 861,
                                "name": "lendingIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 669,
                                "src": "10179:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10170:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage",
                                "typeString": "struct IRegistry.Lending storage ref"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2851,
                            "src": "10170:43:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 866,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 653,
                                    "src": "10224:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 867,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2831,
                                  "src": "10224:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 869,
                                "indexExpression": {
                                  "id": 868,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 657,
                                  "src": "10238:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10224:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10217:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint16_$",
                                "typeString": "type(uint16)"
                              },
                              "typeName": {
                                "id": 864,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "10217:6:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10217:24:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "10170:71:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "10170:71:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 876,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10292:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10292:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 878,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 653,
                                  "src": "10304:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 879,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2822,
                                "src": "10304:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 881,
                              "indexExpression": {
                                "id": 880,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 657,
                                "src": "10317:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10304:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 882,
                              "name": "rentingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "10321:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 885,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 653,
                                      "src": "10339:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 886,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2831,
                                    "src": "10339:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 888,
                                  "indexExpression": {
                                    "id": 887,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 657,
                                    "src": "10353:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10339:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10332:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                },
                                "typeName": {
                                  "id": 883,
                                  "name": "uint16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10332:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10332:24:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 890,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 653,
                                  "src": "10358:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 891,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2828,
                                "src": "10358:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 893,
                              "indexExpression": {
                                "id": 892,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 657,
                                "src": "10374:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10358:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "id": 894,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "10378:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 895,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2862,
                              "src": "10378:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 873,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2970,
                              "src": "10260:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Rent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2773,
                            "src": "10260:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint8_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint16,uint8,uint32)"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10260:152:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 897,
                        "nodeType": "EmitStatement",
                        "src": "10255:157:15"
                      },
                      {
                        "expression": {
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "10426:11:15",
                          "subExpression": {
                            "id": 898,
                            "name": "rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "10426:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "10426:11:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 661,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "8566:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 662,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "8570:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "8570:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8566:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "initializationExpression": {
                    "assignments": [
                      657
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8553:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "8545:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8545:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 660,
                    "initialValue": {
                      "expression": {
                        "id": 658,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "8557:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2798,
                      "src": "8557:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8545:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8580:3:15",
                      "subExpression": {
                        "id": 665,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "8580:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 667,
                    "nodeType": "ExpressionStatement",
                    "src": "8580:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "8540:1908:15"
                }
              ]
            },
            "id": 904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleRent",
            "nameLocation": "8481:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "8518:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "8492:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 652,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 651,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "8492:18:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "8492:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8491:30:15"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8530:0:15"
            },
            "scope": 2657,
            "src": "8472:1982:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1076,
              "nodeType": "Block",
              "src": "10522:1278:15",
              "statements": [
                {
                  "body": {
                    "id": 1074,
                    "nodeType": "Block",
                    "src": "10577:1217:15",
                    "statements": [
                      {
                        "assignments": [
                          923
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 923,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "10599:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1074,
                            "src": "10591:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 922,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10591:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 942,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 927,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10662:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 928,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "10662:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 931,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 929,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10676:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 930,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "10676:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10662:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 932,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10686:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 933,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "10686:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 935,
                                  "indexExpression": {
                                    "id": 934,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "10697:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10686:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 936,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10701:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 937,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2822,
                                    "src": "10701:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 939,
                                  "indexExpression": {
                                    "id": 938,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "10714:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10701:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 925,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "10645:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "10645:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10645:72:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 924,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "10635:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10635:83:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10591:127:15"
                      },
                      {
                        "assignments": [
                          944
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 944,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "10740:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1074,
                            "src": "10732:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 943,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10732:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 963,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 948,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10803:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 949,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "10803:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 952,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 950,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10817:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 951,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "10817:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10803:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 953,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10827:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 954,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "10827:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 956,
                                  "indexExpression": {
                                    "id": 955,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "10838:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10827:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 957,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 907,
                                      "src": "10842:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2825,
                                    "src": "10842:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 960,
                                  "indexExpression": {
                                    "id": 959,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "10855:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10842:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 946,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "10786:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "10786:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10786:72:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 945,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "10776:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10776:83:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10732:127:15"
                      },
                      {
                        "assignments": [
                          968
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 968,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "10899:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1074,
                            "src": "10873:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 967,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 966,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2856,
                                "src": "10873:17:15"
                              },
                              "referencedDeclaration": 2856,
                              "src": "10873:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 972,
                        "initialValue": {
                          "baseExpression": {
                            "id": 969,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "10909:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 971,
                          "indexExpression": {
                            "id": 970,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "10918:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10909:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10873:63:15"
                      },
                      {
                        "assignments": [
                          977
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 977,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "10976:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1074,
                            "src": "10950:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 976,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 975,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2865,
                                "src": "10950:17:15"
                              },
                              "referencedDeclaration": 2865,
                              "src": "10950:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 981,
                        "initialValue": {
                          "baseExpression": {
                            "id": 978,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "10986:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 980,
                          "indexExpression": {
                            "id": 979,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 944,
                            "src": "10995:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10986:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10950:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 983,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "11043:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 982,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2277,
                              2333
                            ],
                            "referencedDeclaration": 2277,
                            "src": "11027:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2856_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11027:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "11027:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 987,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "11081:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 986,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2277,
                              2333
                            ],
                            "referencedDeclaration": 2333,
                            "src": "11065:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2865_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11065:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 989,
                        "nodeType": "ExpressionStatement",
                        "src": "11065:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 991,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "11122:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 992,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11131:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11131:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 994,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11143:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11143:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 990,
                            "name": "ensureIsReturnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2512,
                            "src": "11103:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2865_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,address,uint256) pure"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11103:56:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "11103:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 999,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 907,
                                    "src": "11181:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1000,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2804,
                                  "src": "11181:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 1002,
                                "indexExpression": {
                                  "id": 1001,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "11196:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11181:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1003,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 968,
                                  "src": "11202:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 1004,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2841,
                                "src": "11202:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "11181:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11223:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 998,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11173:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11173:80:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1008,
                        "nodeType": "ExpressionStatement",
                        "src": "11173:80:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1010,
                                  "name": "renting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "11275:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                    "typeString": "struct IRegistry.Renting storage pointer"
                                  }
                                },
                                "id": 1011,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2864,
                                "src": "11275:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1012,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 968,
                                  "src": "11297:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2849,
                                "src": "11297:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "11275:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a637269746963616c206572726f72",
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11317:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              },
                              "value": "ReNFT::critical error"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              }
                            ],
                            "id": 1009,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11267:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11267:74:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "11267:74:15"
                      },
                      {
                        "assignments": [
                          1019
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1019,
                            "mutability": "mutable",
                            "name": "secondsSinceRentStart",
                            "nameLocation": "11363:21:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1074,
                            "src": "11355:29:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1018,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11355:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1025,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1020,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11387:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11387:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1022,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "11405:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2862,
                            "src": "11405:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11387:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11355:66:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1027,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "11454:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1028,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "11463:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "id": 1029,
                              "name": "secondsSinceRentStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "11472:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1026,
                            "name": "distributePayments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1593,
                            "src": "11435:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$2856_memory_ptr_$_t_struct$_Renting_$2865_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory,uint256)"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11435:59:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1031,
                        "nodeType": "ExpressionStatement",
                        "src": "11435:59:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1033,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "11545:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1034,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "11554:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1035,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "11563:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2807,
                                "src": "11563:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1039,
                              "indexExpression": {
                                "expression": {
                                  "id": 1037,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "11577:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1038,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2798,
                                "src": "11577:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11563:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1040,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "11587:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1041,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2804,
                                "src": "11587:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                  "typeString": "enum IRegistry.NFTStandard[] memory"
                                }
                              },
                              "id": 1044,
                              "indexExpression": {
                                "expression": {
                                  "id": 1042,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "11602:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1043,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2798,
                                "src": "11602:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11587:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                "typeString": "enum IRegistry.NFTStandard"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1045,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "11612:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1046,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2810,
                                "src": "11612:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1048,
                              "indexExpression": {
                                "id": 1047,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 911,
                                "src": "11623:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11612:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1049,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "11627:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1050,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2822,
                                "src": "11627:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1052,
                              "indexExpression": {
                                "id": 1051,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 911,
                                "src": "11640:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11627:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1032,
                            "name": "manageWillAutoRenew",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1357,
                            "src": "11508:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$2856_storage_ptr_$_t_struct$_Renting_$2865_storage_ptr_$_t_address_$_t_enum$_NFTStandard_$2796_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending storage pointer,struct IRegistry.Renting storage pointer,address,enum IRegistry.NFTStandard,uint256,uint256)"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11508:148:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1054,
                        "nodeType": "ExpressionStatement",
                        "src": "11508:148:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1058,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "11694:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2825,
                                "src": "11694:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1061,
                              "indexExpression": {
                                "id": 1060,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 911,
                                "src": "11707:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11694:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1064,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "11718:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "11718:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11711:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1062,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11711:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11711:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1055,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2970,
                              "src": "11675:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopRent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2787,
                            "src": "11675:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11675:60:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1068,
                        "nodeType": "EmitStatement",
                        "src": "11670:65:15"
                      },
                      {
                        "expression": {
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "11749:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1069,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "11756:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1071,
                            "indexExpression": {
                              "id": 1070,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 944,
                              "src": "11765:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11756:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1073,
                        "nodeType": "ExpressionStatement",
                        "src": "11749:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 915,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "10558:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 916,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "10562:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "10562:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10558:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1075,
                  "initializationExpression": {
                    "assignments": [
                      911
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10545:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "10537:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10537:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 914,
                    "initialValue": {
                      "expression": {
                        "id": 912,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "10549:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 913,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2798,
                      "src": "10549:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10537:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10572:3:15",
                      "subExpression": {
                        "id": 919,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "10572:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 921,
                    "nodeType": "ExpressionStatement",
                    "src": "10572:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "10532:1262:15"
                }
              ]
            },
            "id": 1077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopRent",
            "nameLocation": "10469:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "10510:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "10484:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 906,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 905,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "10484:18:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "10484:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10483:30:15"
            },
            "returnParameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10522:0:15"
            },
            "scope": 2657,
            "src": "10460:1340:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1218,
              "nodeType": "Block",
              "src": "11859:987:15",
              "statements": [
                {
                  "body": {
                    "id": 1216,
                    "nodeType": "Block",
                    "src": "11914:926:15",
                    "statements": [
                      {
                        "assignments": [
                          1096
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1096,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "11936:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1216,
                            "src": "11928:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1095,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11928:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1115,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1100,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "11999:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1101,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "11999:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1104,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1102,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "12013:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1103,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "12013:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11999:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1105,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "12023:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1106,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "12023:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1108,
                                  "indexExpression": {
                                    "id": 1107,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "12034:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12023:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1109,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "12038:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1110,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2822,
                                    "src": "12038:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1112,
                                  "indexExpression": {
                                    "id": 1111,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "12051:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12038:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1098,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "11982:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11982:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11982:72:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1097,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "11972:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11972:83:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11928:127:15"
                      },
                      {
                        "assignments": [
                          1117
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1117,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "12077:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1216,
                            "src": "12069:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1116,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12069:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1136,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1121,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "12140:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1122,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "12140:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1125,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1123,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "12154:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1124,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "12154:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12140:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1126,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "12164:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1127,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2810,
                                    "src": "12164:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1129,
                                  "indexExpression": {
                                    "id": 1128,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "12175:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12164:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1130,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1080,
                                      "src": "12179:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1131,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2825,
                                    "src": "12179:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1133,
                                  "indexExpression": {
                                    "id": 1132,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "12192:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12179:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1119,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "12123:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12123:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12123:72:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1118,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "12113:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12113:83:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12069:127:15"
                      },
                      {
                        "assignments": [
                          1141
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1141,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "12236:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1216,
                            "src": "12210:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 1140,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1139,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2856,
                                "src": "12210:17:15"
                              },
                              "referencedDeclaration": 2856,
                              "src": "12210:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1145,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1142,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "12246:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 1144,
                          "indexExpression": {
                            "id": 1143,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1096,
                            "src": "12255:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12246:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12210:63:15"
                      },
                      {
                        "assignments": [
                          1150
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1150,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "12313:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1216,
                            "src": "12287:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 1149,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1148,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2865,
                                "src": "12287:17:15"
                              },
                              "referencedDeclaration": 2865,
                              "src": "12287:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1154,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1151,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "12323:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 1153,
                          "indexExpression": {
                            "id": 1152,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1117,
                            "src": "12332:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12323:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12287:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1156,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
                              "src": "12380:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 1155,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2277,
                              2333
                            ],
                            "referencedDeclaration": 2277,
                            "src": "12364:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2856_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12364:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1158,
                        "nodeType": "ExpressionStatement",
                        "src": "12364:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1160,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "12418:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1159,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2277,
                              2333
                            ],
                            "referencedDeclaration": 2333,
                            "src": "12402:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2865_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12402:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1162,
                        "nodeType": "ExpressionStatement",
                        "src": "12402:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1164,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "12458:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 1165,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12467:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12467:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1163,
                            "name": "ensureIsClaimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "12440:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2865_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure"
                            }
                          },
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12440:43:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1168,
                        "nodeType": "ExpressionStatement",
                        "src": "12440:43:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1170,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
                              "src": "12520:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1171,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "12529:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1169,
                            "name": "distributeClaimPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1677,
                            "src": "12497:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$2856_memory_ptr_$_t_struct$_Renting_$2865_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory)"
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12497:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1173,
                        "nodeType": "ExpressionStatement",
                        "src": "12497:40:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1175,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
                              "src": "12588:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1176,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "12597:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1177,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "12606:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2807,
                                "src": "12606:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1181,
                              "indexExpression": {
                                "expression": {
                                  "id": 1179,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "12620:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1180,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2798,
                                "src": "12620:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12606:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1182,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "12630:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1183,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2804,
                                "src": "12630:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                  "typeString": "enum IRegistry.NFTStandard[] memory"
                                }
                              },
                              "id": 1186,
                              "indexExpression": {
                                "expression": {
                                  "id": 1184,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "12645:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1185,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2798,
                                "src": "12645:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12630:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                "typeString": "enum IRegistry.NFTStandard"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1187,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "12655:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2810,
                                "src": "12655:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1190,
                              "indexExpression": {
                                "id": 1189,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "12666:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12655:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1191,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "12670:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1192,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2822,
                                "src": "12670:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1194,
                              "indexExpression": {
                                "id": 1193,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "12683:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12670:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1174,
                            "name": "manageWillAutoRenew",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1357,
                            "src": "12551:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$2856_storage_ptr_$_t_struct$_Renting_$2865_storage_ptr_$_t_address_$_t_enum$_NFTStandard_$2796_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending storage pointer,struct IRegistry.Renting storage pointer,address,enum IRegistry.NFTStandard,uint256,uint256)"
                            }
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12551:148:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1196,
                        "nodeType": "ExpressionStatement",
                        "src": "12551:148:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1200,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1080,
                                  "src": "12740:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1201,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2825,
                                "src": "12740:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1203,
                              "indexExpression": {
                                "id": 1202,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "12753:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12740:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1206,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "12764:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "12764:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12757:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1204,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12757:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12757:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1197,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2970,
                              "src": "12718:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "RentClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2793,
                            "src": "12718:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12718:63:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1210,
                        "nodeType": "EmitStatement",
                        "src": "12713:68:15"
                      },
                      {
                        "expression": {
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12795:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1211,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "12802:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1213,
                            "indexExpression": {
                              "id": 1212,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "12811:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12802:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "12795:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1088,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "11895:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1089,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "11899:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1090,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "11899:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11895:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1217,
                  "initializationExpression": {
                    "assignments": [
                      1084
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1084,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11882:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1217,
                        "src": "11874:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11874:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1087,
                    "initialValue": {
                      "expression": {
                        "id": 1085,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "11886:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2798,
                      "src": "11886:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11874:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11909:3:15",
                      "subExpression": {
                        "id": 1092,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "11909:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1094,
                    "nodeType": "ExpressionStatement",
                    "src": "11909:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "11869:971:15"
                }
              ]
            },
            "id": 1219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleClaimRent",
            "nameLocation": "11815:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "11847:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1219,
                  "src": "11831:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1079,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1078,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "11831:8:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "11831:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11830:20:15"
            },
            "returnParameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11859:0:15"
            },
            "scope": 2657,
            "src": "11806:1040:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "13286:2384:15",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1237,
                        "name": "lending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "13300:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                          "typeString": "struct IRegistry.Lending storage pointer"
                        }
                      },
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "willAutoRenew",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2855,
                      "src": "13300:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 1239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13325:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13300:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1354,
                    "nodeType": "Block",
                    "src": "15513:151:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1347,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1222,
                              "src": "15608:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2851,
                            "src": "15608:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1350,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "15635:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2864,
                            "src": "15635:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "15608:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1353,
                        "nodeType": "ExpressionStatement",
                        "src": "15608:45:15"
                      }
                    ]
                  },
                  "id": 1355,
                  "nodeType": "IfStatement",
                  "src": "13296:2368:15",
                  "trueBody": {
                    "id": 1346,
                    "nodeType": "Block",
                    "src": "13332:2175:15",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1241,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1222,
                              "src": "13831:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2849,
                            "src": "13831:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 1243,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "13852:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2864,
                            "src": "13852:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "13831:39:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1273,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "14722:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lendAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2849,
                              "src": "14722:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1275,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1225,
                                "src": "14744:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 1276,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2864,
                              "src": "14744:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "14722:40:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1331,
                          "nodeType": "IfStatement",
                          "src": "14718:600:15",
                          "trueBody": {
                            "id": 1330,
                            "nodeType": "Block",
                            "src": "14764:554:15",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  },
                                  "id": 1282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1278,
                                    "name": "nftStandard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1230,
                                    "src": "14837:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                      "typeString": "enum IRegistry.NFTStandard"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 1279,
                                        "name": "IRegistry",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2970,
                                        "src": "14852:9:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                          "typeString": "type(contract IRegistry)"
                                        }
                                      },
                                      "id": 1280,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "NFTStandard",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2796,
                                      "src": "14852:21:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2796_$",
                                        "typeString": "type(enum IRegistry.NFTStandard)"
                                      }
                                    },
                                    "id": 1281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "E721",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2794,
                                    "src": "14852:26:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                      "typeString": "enum IRegistry.NFTStandard"
                                    }
                                  },
                                  "src": "14837:41:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 1316,
                                  "nodeType": "Block",
                                  "src": "15006:204:15",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 1303,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "15099:4:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Registry_$2657",
                                                  "typeString": "contract Registry"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Registry_$2657",
                                                  "typeString": "contract Registry"
                                                }
                                              ],
                                              "id": 1302,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "15091:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1301,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "15091:7:15",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1304,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15091:13:15",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 1305,
                                              "name": "lending",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1222,
                                              "src": "15106:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                                "typeString": "struct IRegistry.Lending storage pointer"
                                              }
                                            },
                                            "id": 1306,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "lenderAddress",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2843,
                                            "src": "15106:21:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          {
                                            "id": 1307,
                                            "name": "tokenID",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1232,
                                            "src": "15129:7:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 1310,
                                                  "name": "renting",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1225,
                                                  "src": "15146:7:15",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                                    "typeString": "struct IRegistry.Renting storage pointer"
                                                  }
                                                },
                                                "id": 1311,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "rentAmount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2864,
                                                "src": "15146:18:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              ],
                                              "id": 1309,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "15138:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 1308,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "15138:7:15",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1312,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15138:27:15",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "hexValue": "",
                                            "id": 1313,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15167:2:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            },
                                            "value": ""
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1298,
                                                "name": "nftAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1227,
                                                "src": "15037:10:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1297,
                                              "name": "IERC1155",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3187,
                                              "src": "15028:8:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$3187_$",
                                                "typeString": "type(contract IERC1155)"
                                              }
                                            },
                                            "id": 1299,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15028:20:15",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC1155_$3187",
                                              "typeString": "contract IERC1155"
                                            }
                                          },
                                          "id": 1300,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "safeTransferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3170,
                                          "src": "15028:37:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                            "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                                          }
                                        },
                                        "id": 1314,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15028:163:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1315,
                                      "nodeType": "ExpressionStatement",
                                      "src": "15028:163:15"
                                    }
                                  ]
                                },
                                "id": 1317,
                                "nodeType": "IfStatement",
                                "src": "14833:377:15",
                                "trueBody": {
                                  "id": 1296,
                                  "nodeType": "Block",
                                  "src": "14880:120:15",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 1289,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "14943:4:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Registry_$2657",
                                                  "typeString": "contract Registry"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Registry_$2657",
                                                  "typeString": "contract Registry"
                                                }
                                              ],
                                              "id": 1288,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "14935:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1287,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "14935:7:15",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1290,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "14935:13:15",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 1291,
                                              "name": "lending",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1222,
                                              "src": "14950:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                                "typeString": "struct IRegistry.Lending storage pointer"
                                              }
                                            },
                                            "id": 1292,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "lenderAddress",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2843,
                                            "src": "14950:21:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          },
                                          {
                                            "id": 1293,
                                            "name": "tokenID",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1232,
                                            "src": "14973:7:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1284,
                                                "name": "nftAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1227,
                                                "src": "14910:10:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1283,
                                              "name": "IERC721",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4236,
                                              "src": "14902:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC721_$4236_$",
                                                "typeString": "type(contract IERC721)"
                                              }
                                            },
                                            "id": 1285,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "14902:19:15",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC721_$4236",
                                              "typeString": "contract IERC721"
                                            }
                                          },
                                          "id": 1286,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "transferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4189,
                                          "src": "14902:32:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                            "typeString": "function (address,address,uint256) external"
                                          }
                                        },
                                        "id": 1294,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "14902:79:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1295,
                                      "nodeType": "ExpressionStatement",
                                      "src": "14902:79:15"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "delete",
                                  "prefix": true,
                                  "src": "15227:76:15",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 1318,
                                      "name": "lendings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49,
                                      "src": "15234:8:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                                        "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                      }
                                    },
                                    "id": 1327,
                                    "indexExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1322,
                                              "name": "nftAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1227,
                                              "src": "15270:10:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1323,
                                              "name": "tokenID",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1232,
                                              "src": "15282:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "id": 1324,
                                              "name": "lendingID",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1234,
                                              "src": "15291:9:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1320,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "15253:3:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 1321,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "15253:16:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 1325,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15253:48:15",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 1319,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "15243:9:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 1326,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15243:59:15",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "15234:69:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Lending_$2856_storage",
                                      "typeString": "struct IRegistry.Lending storage ref"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1329,
                                "nodeType": "ExpressionStatement",
                                "src": "15227:76:15"
                              }
                            ]
                          }
                        },
                        "id": 1332,
                        "nodeType": "IfStatement",
                        "src": "13827:1491:15",
                        "trueBody": {
                          "id": 1272,
                          "nodeType": "Block",
                          "src": "13872:482:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 1251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1246,
                                    "name": "lending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1222,
                                    "src": "14075:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                      "typeString": "struct IRegistry.Lending storage pointer"
                                    }
                                  },
                                  "id": 1248,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "lendAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2849,
                                  "src": "14075:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1249,
                                    "name": "renting",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1225,
                                    "src": "14097:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                      "typeString": "struct IRegistry.Renting storage pointer"
                                    }
                                  },
                                  "id": 1250,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2864,
                                  "src": "14097:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "14075:40:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1252,
                              "nodeType": "ExpressionStatement",
                              "src": "14075:40:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1259,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "14251:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Registry_$2657",
                                          "typeString": "contract Registry"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Registry_$2657",
                                          "typeString": "contract Registry"
                                        }
                                      ],
                                      "id": 1258,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14243:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1257,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14243:7:15",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14243:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1261,
                                      "name": "lending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1222,
                                      "src": "14258:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                        "typeString": "struct IRegistry.Lending storage pointer"
                                      }
                                    },
                                    "id": 1262,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lenderAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2843,
                                    "src": "14258:21:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 1263,
                                    "name": "tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1232,
                                    "src": "14281:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1266,
                                          "name": "renting",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1225,
                                          "src": "14298:7:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                            "typeString": "struct IRegistry.Renting storage pointer"
                                          }
                                        },
                                        "id": 1267,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "rentAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2864,
                                        "src": "14298:18:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "id": 1265,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14290:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1264,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14290:7:15",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14290:27:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 1269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14319:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1254,
                                        "name": "nftAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1227,
                                        "src": "14193:10:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1253,
                                      "name": "IERC1155",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3187,
                                      "src": "14184:8:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$3187_$",
                                        "typeString": "type(contract IERC1155)"
                                      }
                                    },
                                    "id": 1255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14184:20:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1155_$3187",
                                      "typeString": "contract IERC1155"
                                    }
                                  },
                                  "id": 1256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3170,
                                  "src": "14184:37:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                                  }
                                },
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14184:155:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1271,
                              "nodeType": "ExpressionStatement",
                              "src": "14184:155:15"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1336,
                              "name": "lendingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "15441:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1339,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "15459:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "15459:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15452:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1337,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15452:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15452:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1342,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1225,
                                "src": "15477:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 1343,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2864,
                              "src": "15477:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "expression": {
                              "id": 1333,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2970,
                              "src": "15422:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopLend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2781,
                            "src": "15422:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_uint16_$returns$__$",
                              "typeString": "function (uint256,uint32,uint16)"
                            }
                          },
                          "id": 1344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15422:74:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1345,
                        "nodeType": "EmitStatement",
                        "src": "15417:79:15"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "manageWillAutoRenew",
            "nameLocation": "13043:19:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "13098:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "13072:33:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1221,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1220,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2856,
                      "src": "13072:17:15"
                    },
                    "referencedDeclaration": 2856,
                    "src": "13072:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "13141:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "13115:33:15",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1223,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "13115:17:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "13115:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "13166:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "13158:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13158:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1230,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "13208:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "13186:33:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_NFTStandard_$2796",
                    "typeString": "enum IRegistry.NFTStandard"
                  },
                  "typeName": {
                    "id": 1229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1228,
                      "name": "IRegistry.NFTStandard",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2796,
                      "src": "13186:21:15"
                    },
                    "referencedDeclaration": 2796,
                    "src": "13186:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_NFTStandard_$2796",
                      "typeString": "enum IRegistry.NFTStandard"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "13237:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "13229:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13229:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1234,
                  "mutability": "mutable",
                  "name": "lendingID",
                  "nameLocation": "13262:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "13254:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13254:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13062:215:15"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13286:0:15"
            },
            "scope": 2657,
            "src": "13034:2636:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1438,
              "nodeType": "Block",
              "src": "15779:488:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1371,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "15797:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2807,
                            "src": "15797:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15797:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15820:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15797:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f206e667473",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15823:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        },
                        "value": "ReNFT::no nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        }
                      ],
                      "id": 1370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15789:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15789:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "ExpressionStatement",
                  "src": "15789:51:15"
                },
                {
                  "body": {
                    "id": 1432,
                    "nodeType": "Block",
                    "src": "15891:349:15",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1385,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "15927:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1386,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "15927:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1389,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1387,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "15941:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1388,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "15941:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15927:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1390,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "15953:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1391,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "15953:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1394,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1392,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "15967:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1393,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2800,
                                    "src": "15967:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15953:23:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "15927:49:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1396,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15926:51:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                "id": 1405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1397,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "16002:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1398,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2804,
                                    "src": "16002:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                                      "typeString": "enum IRegistry.NFTStandard[] memory"
                                    }
                                  },
                                  "id": 1401,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1399,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "16017:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1400,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2800,
                                    "src": "16017:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16002:24:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1402,
                                      "name": "IRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2970,
                                      "src": "16030:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                                        "typeString": "type(contract IRegistry)"
                                      }
                                    },
                                    "id": 1403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "NFTStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2796,
                                    "src": "16030:21:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2796_$",
                                      "typeString": "type(enum IRegistry.NFTStandard)"
                                    }
                                  },
                                  "id": 1404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "E1155",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2795,
                                  "src": "16030:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$2796",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "src": "16002:55:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1406,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16001:57:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15926:132:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1430,
                          "nodeType": "Block",
                          "src": "16122:108:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1415,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "16148:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  ],
                                  "id": 1414,
                                  "name": "handler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1364,
                                  "src": "16140:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                                    "typeString": "function (struct IRegistry.CallData memory)"
                                  }
                                },
                                "id": 1416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16140:11:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1417,
                              "nodeType": "ExpressionStatement",
                              "src": "16140:11:15"
                            },
                            {
                              "expression": {
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1418,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "16169:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1420,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "left",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2798,
                                  "src": "16169:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1421,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "16179:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1422,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2800,
                                  "src": "16179:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16169:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1424,
                              "nodeType": "ExpressionStatement",
                              "src": "16169:18:15"
                            },
                            {
                              "expression": {
                                "id": 1428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "16205:10:15",
                                "subExpression": {
                                  "expression": {
                                    "id": 1425,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "16205:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1427,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2800,
                                  "src": "16205:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1429,
                              "nodeType": "ExpressionStatement",
                              "src": "16205:10:15"
                            }
                          ]
                        },
                        "id": 1431,
                        "nodeType": "IfStatement",
                        "src": "15905:325:15",
                        "trueBody": {
                          "id": 1413,
                          "nodeType": "Block",
                          "src": "16073:43:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "16091:10:15",
                                "subExpression": {
                                  "expression": {
                                    "id": 1408,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "16091:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1410,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2800,
                                  "src": "16091:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1412,
                              "nodeType": "ExpressionStatement",
                              "src": "16091:10:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1379,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1367,
                        "src": "15857:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "15857:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1381,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "15869:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2807,
                        "src": "15869:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15869:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15857:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1433,
                  "nodeType": "WhileStatement",
                  "src": "15850:390:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1435,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1367,
                        "src": "16257:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 1434,
                      "name": "handler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "16249:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16249:11:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "16249:11:15"
                }
              ]
            },
            "id": 1439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bundleCall",
            "nameLocation": "15685:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "15732:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "15696:43:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                    "typeString": "function (struct IRegistry.CallData)"
                  },
                  "typeName": {
                    "id": 1363,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 1361,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1360,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1363,
                          "src": "15705:25:15",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                            "typeString": "struct IRegistry.CallData"
                          },
                          "typeName": {
                            "id": 1359,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1358,
                              "name": "IRegistry.CallData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2838,
                              "src": "15705:18:15"
                            },
                            "referencedDeclaration": 2838,
                            "src": "15705:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                              "typeString": "struct IRegistry.CallData"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "15704:27:15"
                    },
                    "returnParameterTypes": {
                      "id": 1362,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "15732:0:15"
                    },
                    "src": "15696:43:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2838_memory_ptr_$returns$__$",
                      "typeString": "function (struct IRegistry.CallData)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "15767:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "15741:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1366,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1365,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "15741:18:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "15741:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15695:75:15"
            },
            "returnParameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15779:0:15"
            },
            "scope": 2657,
            "src": "15676:591:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1466,
              "nodeType": "Block",
              "src": "16350:108:15",
              "statements": [
                {
                  "expression": {
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1449,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "16360:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1450,
                        "name": "rentAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1441,
                        "src": "16366:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 1451,
                        "name": "rentFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "16376:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16366:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16360:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "16360:23:15"
                },
                {
                  "expression": {
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1455,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1447,
                      "src": "16393:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16400:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "16393:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "16393:12:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1462,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "16434:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1463,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "16447:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1459,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "16415:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3927,
                      "src": "16415:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3896_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3896_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16415:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1465,
                  "nodeType": "ExpressionStatement",
                  "src": "16415:36:15"
                }
              ]
            },
            "id": 1467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "takeFee",
            "nameLocation": "16282:7:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "rentAmt",
                  "nameLocation": "16298:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "16290:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16290:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "16313:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "16307:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3818",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1442,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3818,
                      "src": "16307:5:15"
                    },
                    "referencedDeclaration": 3818,
                    "src": "16307:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3818",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16289:30:15"
            },
            "returnParameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1447,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "16345:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1467,
                  "src": "16337:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16337:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16336:13:15"
            },
            "scope": 2657,
            "src": "16273:185:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1592,
              "nodeType": "Block",
              "src": "16629:1031:15",
              "statements": [
                {
                  "assignments": [
                    1479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1479,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "16645:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "16639:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1478,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16639:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1485,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1482,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1470,
                          "src": "16668:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2853,
                        "src": "16668:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "16662:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1480,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16662:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16662:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16639:50:15"
                },
                {
                  "assignments": [
                    1488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1488,
                      "mutability": "mutable",
                      "name": "paymentToken",
                      "nameLocation": "16705:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "16699:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3818",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1487,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1486,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3818,
                          "src": "16699:5:15"
                        },
                        "referencedDeclaration": 3818,
                        "src": "16699:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1495,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1492,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "16751:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1490,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "16726:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$2987",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2979,
                          "src": "16726:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16726:40:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1489,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3818,
                      "src": "16720:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3818_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16720:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3818",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16699:68:15"
                },
                {
                  "assignments": [
                    1497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1497,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "16785:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "16777:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1496,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16777:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1501,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1498,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1488,
                        "src": "16796:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3347,
                      "src": "16796:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16796:23:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16777:42:15"
                },
                {
                  "assignments": [
                    1503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1503,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "16837:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "16829:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1502,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16829:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1507,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16845:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1505,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "16851:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16845:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16829:30:15"
                },
                {
                  "assignments": [
                    1509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1509,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "16877:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "16869:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1508,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16869:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1518,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1510,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "16889:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1511,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2864,
                      "src": "16889:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1513,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1470,
                            "src": "16922:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2847,
                          "src": "16922:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "id": 1515,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1503,
                          "src": "16946:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1512,
                        "name": "unpackPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2139,
                        "src": "16910:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (bytes4,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16910:42:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16889:63:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16869:83:15"
                },
                {
                  "assignments": [
                    1520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1520,
                      "mutability": "mutable",
                      "name": "totalRenterPmt",
                      "nameLocation": "16970:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "16962:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16962:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1525,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1521,
                      "name": "rentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1509,
                      "src": "16987:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1522,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "16999:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2860,
                      "src": "16999:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16987:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16962:57:15"
                },
                {
                  "assignments": [
                    1527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1527,
                      "mutability": "mutable",
                      "name": "sendLenderAmt",
                      "nameLocation": "17037:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "17029:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17029:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1534,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1528,
                            "name": "secondsSinceRentStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "17054:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1529,
                            "name": "rentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1509,
                            "src": "17078:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17054:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1531,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17053:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1532,
                      "name": "SECONDS_IN_DAY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "17091:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17053:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17029:76:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1536,
                          "name": "totalRenterPmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1520,
                          "src": "17123:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17140:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17123:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f74616c2072656e746572207061796d656e74206973207a65726f",
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17143:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        },
                        "value": "ReNFT::total renter payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        }
                      ],
                      "id": 1535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17115:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17115:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1541,
                  "nodeType": "ExpressionStatement",
                  "src": "17115:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1543,
                          "name": "sendLenderAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1527,
                          "src": "17199:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17215:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17199:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e646572207061796d656e74206973207a65726f",
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17218:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        },
                        "value": "ReNFT::lender payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        }
                      ],
                      "id": 1542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17191:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17191:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1548,
                  "nodeType": "ExpressionStatement",
                  "src": "17191:59:15"
                },
                {
                  "assignments": [
                    1550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1550,
                      "mutability": "mutable",
                      "name": "sendRenterAmt",
                      "nameLocation": "17268:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "17260:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1549,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17260:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1554,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1551,
                      "name": "totalRenterPmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1520,
                      "src": "17284:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1552,
                      "name": "sendLenderAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1527,
                      "src": "17301:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17284:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17260:54:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1555,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "17328:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17339:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17328:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1570,
                  "nodeType": "IfStatement",
                  "src": "17324:137:15",
                  "trueBody": {
                    "id": 1569,
                    "nodeType": "Block",
                    "src": "17342:119:15",
                    "statements": [
                      {
                        "assignments": [
                          1559
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1559,
                            "mutability": "mutable",
                            "name": "takenFee",
                            "nameLocation": "17364:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1569,
                            "src": "17356:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1558,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17356:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1564,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1561,
                              "name": "sendLenderAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1527,
                              "src": "17383:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1562,
                              "name": "paymentToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1488,
                              "src": "17398:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3818",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$3818",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 1560,
                            "name": "takeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1467,
                            "src": "17375:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$3818_$returns$_t_uint256_$",
                              "typeString": "function (uint256,contract ERC20) returns (uint256)"
                            }
                          },
                          "id": 1563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17375:36:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17356:55:15"
                      },
                      {
                        "expression": {
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1565,
                            "name": "sendLenderAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1527,
                            "src": "17425:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1566,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1559,
                            "src": "17442:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17425:25:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1568,
                        "nodeType": "ExpressionStatement",
                        "src": "17425:25:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1574,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1470,
                          "src": "17496:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "17496:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1576,
                        "name": "sendLenderAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "17519:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1571,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1488,
                        "src": "17470:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3927,
                      "src": "17470:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3896_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3896_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17470:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "17470:63:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1579,
                      "name": "sendRenterAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1550,
                      "src": "17547:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17563:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17547:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1591,
                  "nodeType": "IfStatement",
                  "src": "17543:111:15",
                  "trueBody": {
                    "id": 1590,
                    "nodeType": "Block",
                    "src": "17566:88:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1585,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1473,
                                "src": "17606:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                                  "typeString": "struct IRegistry.Renting memory"
                                }
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "renterAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2858,
                              "src": "17606:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1587,
                              "name": "sendRenterAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1550,
                              "src": "17629:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1582,
                              "name": "paymentToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1488,
                              "src": "17580:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3818",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3927,
                            "src": "17580:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3896_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3896_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17580:63:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1589,
                        "nodeType": "ExpressionStatement",
                        "src": "17580:63:15"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributePayments",
            "nameLocation": "16473:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1470,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "16526:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "16501:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1469,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1468,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2856,
                      "src": "16501:17:15"
                    },
                    "referencedDeclaration": 2856,
                    "src": "16501:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1473,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "16568:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "16543:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1472,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1471,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "16543:17:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "16543:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1475,
                  "mutability": "mutable",
                  "name": "secondsSinceRentStart",
                  "nameLocation": "16593:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "16585:29:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16585:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16491:129:15"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16629:0:15"
            },
            "scope": 2657,
            "src": "16464:1196:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "17774:594:15",
              "statements": [
                {
                  "assignments": [
                    1603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1603,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "17790:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "17784:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1602,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "17784:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1609,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1606,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1596,
                          "src": "17813:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2853,
                        "src": "17813:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "17807:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1604,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "17807:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17807:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17784:50:15"
                },
                {
                  "assignments": [
                    1612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1612,
                      "mutability": "mutable",
                      "name": "paymentToken",
                      "nameLocation": "17850:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "17844:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3818",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1611,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1610,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3818,
                          "src": "17844:5:15"
                        },
                        "referencedDeclaration": 3818,
                        "src": "17844:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1619,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1616,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1603,
                            "src": "17896:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1614,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "17871:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$2987",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2979,
                          "src": "17871:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17871:40:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1613,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3818,
                      "src": "17865:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3818_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17865:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3818",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17844:68:15"
                },
                {
                  "assignments": [
                    1621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1621,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "17930:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "17922:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1620,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17922:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1625,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1622,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "17941:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3347,
                      "src": "17941:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17941:23:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17922:42:15"
                },
                {
                  "assignments": [
                    1627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1627,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "17982:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "17974:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17974:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1631,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17990:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1629,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1621,
                      "src": "17996:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17990:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17974:30:15"
                },
                {
                  "assignments": [
                    1633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1633,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "18022:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "18014:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18014:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1642,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1634,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "18034:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2864,
                      "src": "18034:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1637,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "18067:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2847,
                          "src": "18067:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "id": 1639,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1627,
                          "src": "18091:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1636,
                        "name": "unpackPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2139,
                        "src": "18055:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (bytes4,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18055:42:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18034:63:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18014:83:15"
                },
                {
                  "assignments": [
                    1644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1644,
                      "mutability": "mutable",
                      "name": "finalAmt",
                      "nameLocation": "18115:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "18107:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18107:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1649,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1645,
                      "name": "rentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1633,
                      "src": "18126:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1646,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "18138:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1647,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2860,
                      "src": "18138:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "18126:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18107:51:15"
                },
                {
                  "assignments": [
                    1651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1651,
                      "mutability": "mutable",
                      "name": "takenFee",
                      "nameLocation": "18176:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "18168:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18168:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1653,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18187:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18168:20:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1654,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "18202:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18213:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18202:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1665,
                  "nodeType": "IfStatement",
                  "src": "18198:85:15",
                  "trueBody": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "18216:67:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1657,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1651,
                            "src": "18230:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1659,
                                "name": "finalAmt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1644,
                                "src": "18249:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1660,
                                "name": "paymentToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1612,
                                "src": "18259:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$3818",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$3818",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1658,
                              "name": "takeFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "18241:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_ERC20_$3818_$returns$_t_uint256_$",
                                "typeString": "function (uint256,contract ERC20) returns (uint256)"
                              }
                            },
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18241:31:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18230:42:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1663,
                        "nodeType": "ExpressionStatement",
                        "src": "18230:42:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1669,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1596,
                          "src": "18318:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "18318:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1671,
                          "name": "finalAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1644,
                          "src": "18341:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1672,
                          "name": "takenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1651,
                          "src": "18352:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18341:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1666,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "18292:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3927,
                      "src": "18292:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3896_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3896_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18292:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "18292:69:15"
                }
              ]
            },
            "id": 1677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeClaimPayment",
            "nameLocation": "17675:22:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "17723:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "17698:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1595,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1594,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2856,
                      "src": "17698:17:15"
                    },
                    "referencedDeclaration": 2856,
                    "src": "17698:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "17757:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "17732:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1598,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1597,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "17732:17:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "17732:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17697:68:15"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17774:0:15"
            },
            "scope": 2657,
            "src": "17666:702:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1737,
              "nodeType": "Block",
              "src": "18551:295:15",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_NFTStandard_$2796",
                      "typeString": "enum IRegistry.NFTStandard"
                    },
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1693,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1680,
                          "src": "18565:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2804,
                        "src": "18565:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                          "typeString": "enum IRegistry.NFTStandard[] memory"
                        }
                      },
                      "id": 1697,
                      "indexExpression": {
                        "expression": {
                          "id": 1695,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1680,
                          "src": "18580:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "left",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2798,
                        "src": "18580:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "18565:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1698,
                          "name": "IRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2970,
                          "src": "18592:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRegistry_$2970_$",
                            "typeString": "type(contract IRegistry)"
                          }
                        },
                        "id": 1699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2796,
                        "src": "18592:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2796_$",
                          "typeString": "type(enum IRegistry.NFTStandard)"
                        }
                      },
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "E721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2794,
                      "src": "18592:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "src": "18565:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1735,
                    "nodeType": "Block",
                    "src": "18726:114:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1728,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1682,
                              "src": "18795:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1729,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "18801:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1730,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1687,
                              "src": "18805:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1731,
                              "name": "lendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1690,
                              "src": "18814:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18826:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1721,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1680,
                                      "src": "18749:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1722,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "18749:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1725,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1723,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1680,
                                      "src": "18763:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1724,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "18763:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18749:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1720,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3187,
                                "src": "18740:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$3187_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 1726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18740:32:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$3187",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 1727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeBatchTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3186,
                            "src": "18740:54:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18740:89:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1734,
                        "nodeType": "ExpressionStatement",
                        "src": "18740:89:15"
                      }
                    ]
                  },
                  "id": 1736,
                  "nodeType": "IfStatement",
                  "src": "18561:279:15",
                  "trueBody": {
                    "id": 1719,
                    "nodeType": "Block",
                    "src": "18620:100:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1710,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1682,
                              "src": "18679:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1711,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "18685:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1712,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1680,
                                  "src": "18689:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1713,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2810,
                                "src": "18689:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1716,
                              "indexExpression": {
                                "expression": {
                                  "id": 1714,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1680,
                                  "src": "18700:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1715,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2798,
                                "src": "18700:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18689:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1703,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1680,
                                      "src": "18642:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1704,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2807,
                                    "src": "18642:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1707,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1705,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1680,
                                      "src": "18656:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1706,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2798,
                                    "src": "18656:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18642:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1702,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4236,
                                "src": "18634:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$4236_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18634:31:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$4236",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4189,
                            "src": "18634:44:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18634:75:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1718,
                        "nodeType": "ExpressionStatement",
                        "src": "18634:75:15"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nameLocation": "18383:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1680,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "18421:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "18405:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1679,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1678,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "18405:8:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "18405:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1682,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18441:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "18433:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18433:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1684,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18463:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "18455:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18455:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1687,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "18492:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "18475:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1685,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18475:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1686,
                    "nodeType": "ArrayTypeName",
                    "src": "18475:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1690,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "18526:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "18509:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1688,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18509:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1689,
                    "nodeType": "ArrayTypeName",
                    "src": "18509:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18395:147:15"
            },
            "returnParameters": {
              "id": 1692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18551:0:15"
            },
            "scope": 2657,
            "src": "18374:472:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1803,
              "nodeType": "Block",
              "src": "19216:449:15",
              "statements": [
                {
                  "assignments": [
                    1762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1762,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "19234:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1803,
                      "src": "19226:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1761,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19226:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1771,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1766,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1740,
                            "src": "19274:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1767,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "19286:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1768,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "19295:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1764,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19257:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19257:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19257:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1763,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19247:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19247:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19226:81:15"
                },
                {
                  "assignments": [
                    1776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1776,
                      "mutability": "mutable",
                      "name": "lending",
                      "nameLocation": "19343:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1803,
                      "src": "19317:33:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                        "typeString": "struct IRegistry.Lending"
                      },
                      "typeName": {
                        "id": 1775,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1774,
                          "name": "IRegistry.Lending",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2856,
                          "src": "19317:17:15"
                        },
                        "referencedDeclaration": 2856,
                        "src": "19317:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                          "typeString": "struct IRegistry.Lending"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1780,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1777,
                      "name": "lendings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "19353:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2856_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                      }
                    },
                    "id": 1779,
                    "indexExpression": {
                      "id": 1778,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1762,
                      "src": "19362:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19353:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage",
                      "typeString": "struct IRegistry.Lending storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19317:56:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1783,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "19410:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1784,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2841,
                            "src": "19410:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2796",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_NFTStandard_$2796",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          ],
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19404:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1781,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "19404:5:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19404:26:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1786,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "19444:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1787,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "19444:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1788,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "19479:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxRentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2845,
                        "src": "19479:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1790,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "19516:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2847,
                        "src": "19516:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "id": 1792,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "19552:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1793,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lendAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2849,
                        "src": "19552:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1794,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "19584:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "availableAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2851,
                        "src": "19584:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1798,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "19627:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1799,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2853,
                            "src": "19627:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19621:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1796,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "19621:5:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19621:27:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1801,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19390:268:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_uint16_$_t_uint8_$",
                      "typeString": "tuple(uint8,address payable,uint8,bytes4,uint16,uint16,uint8)"
                    }
                  },
                  "functionReturnParameters": 1760,
                  "id": 1802,
                  "nodeType": "Return",
                  "src": "19383:275:15"
                }
              ]
            },
            "functionSelector": "296c21b7",
            "id": 1804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLending",
            "nameLocation": "19043:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1740,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "19062:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19054:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19054:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "19082:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19074:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19074:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1744,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "19099:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19091:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19091:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19053:57:15"
            },
            "returnParameters": {
              "id": 1760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19158:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "19158:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19165:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19165:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19174:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "19174:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19181:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "19181:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19189:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1754,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19189:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19197:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1756,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19197:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "19205:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1758,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "19205:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19157:54:15"
            },
            "scope": 2657,
            "src": "19034:631:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1851,
              "nodeType": "Block",
              "src": "19831:264:15",
              "statements": [
                {
                  "assignments": [
                    1822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1822,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "19849:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1851,
                      "src": "19841:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1821,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19841:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1831,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1826,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1806,
                            "src": "19889:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1827,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "19901:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1828,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "19910:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1824,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19872:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19872:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19872:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1823,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19862:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19862:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19841:81:15"
                },
                {
                  "assignments": [
                    1836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1836,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "19958:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1851,
                      "src": "19932:33:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                        "typeString": "struct IRegistry.Renting"
                      },
                      "typeName": {
                        "id": 1835,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1834,
                          "name": "IRegistry.Renting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2865,
                          "src": "19932:17:15"
                        },
                        "referencedDeclaration": 2865,
                        "src": "19932:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                          "typeString": "struct IRegistry.Renting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1840,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1837,
                      "name": "rentings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "19968:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2865_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                      }
                    },
                    "id": 1839,
                    "indexExpression": {
                      "id": 1838,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "19977:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19968:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage",
                      "typeString": "struct IRegistry.Renting storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19932:56:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1841,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1836,
                          "src": "20006:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2858,
                        "src": "20006:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1843,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1836,
                          "src": "20029:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2864,
                        "src": "20029:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1845,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1836,
                          "src": "20049:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1846,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2860,
                        "src": "20049:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1847,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1836,
                          "src": "20071:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1848,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2862,
                        "src": "20071:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "id": 1849,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "20005:83:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint16_$_t_uint8_$_t_uint32_$",
                      "typeString": "tuple(address payable,uint16,uint8,uint32)"
                    }
                  },
                  "functionReturnParameters": 1820,
                  "id": 1850,
                  "nodeType": "Return",
                  "src": "19998:90:15"
                }
              ]
            },
            "functionSelector": "fe46b7cd",
            "id": 1852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRenting",
            "nameLocation": "19680:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1806,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "19699:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "19691:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19691:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "19719:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "19711:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19711:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1810,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "19736:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "19728:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19728:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19690:57:15"
            },
            "returnParameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "19795:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19795:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1815,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "19804:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19804:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1817,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "19812:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1816,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "19812:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1852,
                  "src": "19819:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19819:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19794:32:15"
            },
            "scope": 2657,
            "src": "19671:424:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1918,
              "nodeType": "Block",
              "src": "20673:563:15",
              "statements": [
                {
                  "expression": {
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1883,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1881,
                      "src": "20683:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20717:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20739:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1887,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1856,
                          "src": "20767:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1888,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1859,
                          "src": "20804:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1889,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1862,
                          "src": "20837:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1890,
                          "name": "lendAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1865,
                          "src": "20870:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20919:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20905:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1891,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20909:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1892,
                              "nodeType": "ArrayTypeName",
                              "src": "20909:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20905:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20960:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20946:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1896,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20950:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1897,
                              "nodeType": "ArrayTypeName",
                              "src": "20950:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20946:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21002:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20990:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1901,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "20994:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1902,
                              "nodeType": "ArrayTypeName",
                              "src": "20994:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20990:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21044:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21030:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1906,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21034:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1907,
                              "nodeType": "ArrayTypeName",
                              "src": "21034:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21030:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1911,
                          "name": "maxRentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "21077:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1912,
                          "name": "dailyRentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1871,
                          "src": "21122:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "id": 1913,
                          "name": "paymentToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1874,
                          "src": "21164:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1914,
                          "name": "willAutoRenew",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1877,
                          "src": "21205:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        ],
                        "id": 1884,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "20688:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$2838_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken",
                        "willAutoRenew"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "20688:541:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "20683:546:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1917,
                  "nodeType": "ExpressionStatement",
                  "src": "20683:546:15"
                }
              ]
            },
            "id": 1919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLendCallData",
            "nameLocation": "20292:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "20351:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20320:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1854,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1853,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "20320:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "20320:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1855,
                    "nodeType": "ArrayTypeName",
                    "src": "20320:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "20389:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20372:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1857,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20372:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1858,
                    "nodeType": "ArrayTypeName",
                    "src": "20372:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "20426:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20409:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1860,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20409:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1861,
                    "nodeType": "ArrayTypeName",
                    "src": "20409:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "20460:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20443:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1863,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20443:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1864,
                    "nodeType": "ArrayTypeName",
                    "src": "20443:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "20495:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20480:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1866,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "20480:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1867,
                    "nodeType": "ArrayTypeName",
                    "src": "20480:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "20536:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20520:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1869,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "20520:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 1870,
                    "nodeType": "ArrayTypeName",
                    "src": "20520:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "20575:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20560:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1872,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "20560:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1873,
                    "nodeType": "ArrayTypeName",
                    "src": "20560:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1877,
                  "mutability": "mutable",
                  "name": "willAutoRenew",
                  "nameLocation": "20611:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20597:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1875,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "20597:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1876,
                    "nodeType": "ArrayTypeName",
                    "src": "20597:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20310:320:15"
            },
            "returnParameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "20669:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "20653:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1880,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1879,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "20653:8:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "20653:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20652:20:15"
            },
            "scope": 2657,
            "src": "20283:953:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1987,
              "nodeType": "Block",
              "src": "21552:557:15",
              "statements": [
                {
                  "expression": {
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1944,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1942,
                      "src": "21562:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21596:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21618:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1948,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1923,
                          "src": "21646:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1949,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1926,
                          "src": "21683:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1950,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1929,
                          "src": "21716:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21763:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21749:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1951,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21753:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1952,
                              "nodeType": "ArrayTypeName",
                              "src": "21753:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21749:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1956,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "21790:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21839:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21825:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1957,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21829:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1958,
                              "nodeType": "ArrayTypeName",
                              "src": "21829:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21825:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1962,
                          "name": "rentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1935,
                          "src": "21869:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1963,
                          "name": "rentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1938,
                          "src": "21907:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21960:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21948:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1964,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "21952:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1965,
                              "nodeType": "ArrayTypeName",
                              "src": "21952:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21948:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22005:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21992:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1969,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "21996:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 1970,
                              "nodeType": "ArrayTypeName",
                              "src": "21996:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21992:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22047:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22035:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1974,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22039:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1975,
                              "nodeType": "ArrayTypeName",
                              "src": "22039:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22035:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22089:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22078:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bool[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1979,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "22082:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1980,
                              "nodeType": "ArrayTypeName",
                              "src": "22082:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            }
                          },
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22078:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        ],
                        "id": 1945,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "21567:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$2838_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken",
                        "willAutoRenew"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "21567:535:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "21562:540:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1986,
                  "nodeType": "ExpressionStatement",
                  "src": "21562:540:15"
                }
              ]
            },
            "id": 1988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRentCallData",
            "nameLocation": "21251:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1923,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "21310:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "21279:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1921,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1920,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "21279:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "21279:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1922,
                    "nodeType": "ArrayTypeName",
                    "src": "21279:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1926,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "21348:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "21331:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1924,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21331:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1925,
                    "nodeType": "ArrayTypeName",
                    "src": "21331:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1929,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "21385:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "21368:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1927,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21368:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1928,
                    "nodeType": "ArrayTypeName",
                    "src": "21368:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "21419:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "21402:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1930,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21402:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1931,
                    "nodeType": "ArrayTypeName",
                    "src": "21402:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "21454:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "21439:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1933,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "21439:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1934,
                    "nodeType": "ArrayTypeName",
                    "src": "21439:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "21493:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "21476:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1936,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21476:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1937,
                    "nodeType": "ArrayTypeName",
                    "src": "21476:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21269:240:15"
            },
            "returnParameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1942,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "21548:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "21532:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1940,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "21532:8:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "21532:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21531:20:15"
            },
            "scope": 2657,
            "src": "21242:867:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2057,
              "nodeType": "Block",
              "src": "22390:559:15",
              "statements": [
                {
                  "expression": {
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2010,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2008,
                      "src": "22400:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22434:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 2013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22456:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 2014,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1992,
                          "src": "22484:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 2015,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1995,
                          "src": "22521:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 2016,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1998,
                          "src": "22554:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22601:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22587:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2017,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22591:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2018,
                              "nodeType": "ArrayTypeName",
                              "src": "22591:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22587:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 2022,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "22628:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 2023,
                          "name": "_rentingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2004,
                          "src": "22663:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22713:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22701:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2024,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22705:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 2025,
                              "nodeType": "ArrayTypeName",
                              "src": "22705:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22701:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22755:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22741:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2029,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22745:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2030,
                              "nodeType": "ArrayTypeName",
                              "src": "22745:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22741:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22800:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22788:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2034,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22792:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 2035,
                              "nodeType": "ArrayTypeName",
                              "src": "22792:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22788:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22845:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22832:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2039,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "22836:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 2040,
                              "nodeType": "ArrayTypeName",
                              "src": "22836:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22832:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22887:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22875:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2044,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22879:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 2045,
                              "nodeType": "ArrayTypeName",
                              "src": "22879:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 2048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22875:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22929:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22918:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bool[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2049,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "22922:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2050,
                              "nodeType": "ArrayTypeName",
                              "src": "22922:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            }
                          },
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22918:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        ],
                        "id": 2011,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "22405:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$2838_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 2054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken",
                        "willAutoRenew"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "22405:537:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "22400:542:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 2056,
                  "nodeType": "ExpressionStatement",
                  "src": "22400:542:15"
                }
              ]
            },
            "id": 2058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createActionCallData",
            "nameLocation": "22124:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1992,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "22185:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "22154:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1990,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1989,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2796,
                        "src": "22154:21:15"
                      },
                      "referencedDeclaration": 2796,
                      "src": "22154:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2796",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1991,
                    "nodeType": "ArrayTypeName",
                    "src": "22154:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2796_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "22223:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "22206:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1993,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "22206:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1994,
                    "nodeType": "ArrayTypeName",
                    "src": "22206:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "22260:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "22243:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1996,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22243:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1997,
                    "nodeType": "ArrayTypeName",
                    "src": "22243:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2001,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "22294:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "22277:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1999,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22277:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2000,
                    "nodeType": "ArrayTypeName",
                    "src": "22277:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2004,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "22331:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "22314:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2002,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22314:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2003,
                    "nodeType": "ArrayTypeName",
                    "src": "22314:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22144:203:15"
            },
            "returnParameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "22386:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "22370:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2006,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "22370:8:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "22370:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22369:20:15"
            },
            "scope": 2657,
            "src": "22115:834:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2138,
              "nodeType": "Block",
              "src": "23036:472:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2068,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2060,
                        "src": "23070:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 2069,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2062,
                        "src": "23077:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2067,
                      "name": "ensureIsUnpackablePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "23046:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes4,uint256) pure"
                      }
                    },
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23046:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2071,
                  "nodeType": "ExpressionStatement",
                  "src": "23046:37:15"
                },
                {
                  "assignments": [
                    2073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2073,
                      "mutability": "mutable",
                      "name": "whole",
                      "nameLocation": "23100:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2138,
                      "src": "23093:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2072,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "23093:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2081,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2078,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2060,
                            "src": "23122:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 2077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23115:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 2076,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "23115:6:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23115:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 2075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "23108:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 2074,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "23108:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23108:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23093:36:15"
                },
                {
                  "assignments": [
                    2083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2083,
                      "mutability": "mutable",
                      "name": "decimal",
                      "nameLocation": "23146:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2138,
                      "src": "23139:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 2082,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "23139:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2093,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2088,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2060,
                              "src": "23170:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "hexValue": "3136",
                              "id": 2089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23179:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_16_by_1",
                                "typeString": "int_const 16"
                              },
                              "value": "16"
                            },
                            "src": "23170:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23163:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 2086,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "23163:6:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23163:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "23156:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 2084,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "23156:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23156:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23139:44:15"
                },
                {
                  "assignments": [
                    2095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2095,
                      "mutability": "mutable",
                      "name": "decimalScale",
                      "nameLocation": "23201:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2138,
                      "src": "23193:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23193:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2099,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2096,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "23216:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 2097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23224:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "23216:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23193:36:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2100,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "23243:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23251:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "23243:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2108,
                  "nodeType": "IfStatement",
                  "src": "23239:55:15",
                  "trueBody": {
                    "id": 2107,
                    "nodeType": "Block",
                    "src": "23257:37:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2103,
                            "name": "whole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "23271:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23279:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "23271:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 2106,
                        "nodeType": "ExpressionStatement",
                        "src": "23271:12:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2109,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "23307:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 2110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23317:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "23307:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2117,
                  "nodeType": "IfStatement",
                  "src": "23303:59:15",
                  "trueBody": {
                    "id": 2116,
                    "nodeType": "Block",
                    "src": "23323:39:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2112,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2083,
                            "src": "23337:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 2113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23347:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "23337:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 2115,
                        "nodeType": "ExpressionStatement",
                        "src": "23337:14:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2119,
                      "mutability": "mutable",
                      "name": "w",
                      "nameLocation": "23379:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2138,
                      "src": "23371:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2118,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23371:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2123,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2120,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "23383:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2121,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "23391:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23383:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23371:25:15"
                },
                {
                  "assignments": [
                    2125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2125,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "23414:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2138,
                      "src": "23406:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2124,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23406:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2129,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2126,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "23418:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2127,
                      "name": "decimalScale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2095,
                      "src": "23428:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23418:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23406:34:15"
                },
                {
                  "assignments": [
                    2131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2131,
                      "mutability": "mutable",
                      "name": "fullPrice",
                      "nameLocation": "23458:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2138,
                      "src": "23450:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23450:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2135,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2132,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2119,
                      "src": "23470:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2133,
                      "name": "d",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2125,
                      "src": "23474:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23470:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23450:25:15"
                },
                {
                  "expression": {
                    "id": 2136,
                    "name": "fullPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2131,
                    "src": "23492:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2066,
                  "id": 2137,
                  "nodeType": "Return",
                  "src": "23485:16:15"
                }
              ]
            },
            "id": 2139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpackPrice",
            "nameLocation": "22964:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "22983:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "22976:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "22976:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2062,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "22998:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "22990:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22990:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22975:29:15"
            },
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "23027:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23027:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23026:9:15"
            },
            "scope": 2657,
            "src": "22955:553:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2188,
              "nodeType": "Block",
              "src": "23673:157:15",
              "statements": [
                {
                  "expression": {
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2154,
                      "name": "r",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2152,
                      "src": "23683:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2158,
                            "name": "toIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2146,
                            "src": "23701:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2159,
                            "name": "fromIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "23708:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23701:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "23687:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2155,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23691:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2156,
                          "nodeType": "ArrayTypeName",
                          "src": "23691:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 2161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23687:28:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "23683:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2163,
                  "nodeType": "ExpressionStatement",
                  "src": "23683:32:15"
                },
                {
                  "body": {
                    "id": 2186,
                    "nodeType": "Block",
                    "src": "23765:59:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2174,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2152,
                              "src": "23779:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2178,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2175,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2165,
                                "src": "23781:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2176,
                                "name": "fromIx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "23785:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23781:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23779:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2179,
                              "name": "arr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "23795:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2183,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2180,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2165,
                                "src": "23799:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2181,
                                "name": "arrOffset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2148,
                                "src": "23803:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23799:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23795:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23779:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2185,
                        "nodeType": "ExpressionStatement",
                        "src": "23779:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2168,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2165,
                      "src": "23750:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2169,
                      "name": "toIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2146,
                      "src": "23754:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23750:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2187,
                  "initializationExpression": {
                    "assignments": [
                      2165
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2165,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "23738:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2187,
                        "src": "23730:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2164,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23730:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2167,
                    "initialValue": {
                      "id": 2166,
                      "name": "fromIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "23742:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23730:18:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23760:3:15",
                      "subExpression": {
                        "id": 2171,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2165,
                        "src": "23760:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2173,
                    "nodeType": "ExpressionStatement",
                    "src": "23760:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "23725:99:15"
                }
              ]
            },
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sliceArr",
            "nameLocation": "23523:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "arr",
                  "nameLocation": "23549:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "23532:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2140,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23532:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2141,
                    "nodeType": "ArrayTypeName",
                    "src": "23532:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "fromIx",
                  "nameLocation": "23562:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "23554:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23554:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2146,
                  "mutability": "mutable",
                  "name": "toIx",
                  "nameLocation": "23578:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "23570:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23570:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2148,
                  "mutability": "mutable",
                  "name": "arrOffset",
                  "nameLocation": "23592:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "23584:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23584:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23531:71:15"
            },
            "returnParameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "23666:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "23649:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2150,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23649:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2151,
                    "nodeType": "ArrayTypeName",
                    "src": "23649:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23648:20:15"
            },
            "scope": 2657,
            "src": "23514:316:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2204,
              "nodeType": "Block",
              "src": "24074:67:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2195,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "24092:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24108:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24100:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2196,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24100:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24100:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24092:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a7a65726f2061646472657373",
                        "id": 2201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24112:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        },
                        "value": "ReNFT::zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        }
                      ],
                      "id": 2194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24084:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24084:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2203,
                  "nodeType": "ExpressionStatement",
                  "src": "24084:50:15"
                }
              ]
            },
            "id": 2205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotZeroAddr",
            "nameLocation": "24027:19:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "24055:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "24047:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24047:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24046:14:15"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24074:0:15"
            },
            "scope": 2657,
            "src": "24018:123:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "24200:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2211,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2207,
                          "src": "24218:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24234:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24226:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2212,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24226:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24226:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24218:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061207a65726f2061646472657373",
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24238:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        },
                        "value": "ReNFT::not a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        }
                      ],
                      "id": 2210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24210:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24210:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "24210:56:15"
                }
              ]
            },
            "id": 2221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsZeroAddr",
            "nameLocation": "24156:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "24181:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "24173:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24173:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24172:14:15"
            },
            "returnParameters": {
              "id": 2209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24200:0:15"
            },
            "scope": 2657,
            "src": "24147:126:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2248,
              "nodeType": "Block",
              "src": "24338:207:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2228,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2224,
                          "src": "24365:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "24365:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2227,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2221,
                      "src": "24348:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24348:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2231,
                  "nodeType": "ExpressionStatement",
                  "src": "24348:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2233,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2224,
                            "src": "24405:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2234,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2845,
                          "src": "24405:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24432:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24405:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24435:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24397:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24397:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "24397:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2241,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2224,
                            "src": "24480:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2242,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2847,
                          "src": "24480:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24506:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24480:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206e6f74207a65726f",
                        "id": 2245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24509:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        },
                        "value": "ReNFT::rent price not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        }
                      ],
                      "id": 2240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24472:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24472:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2247,
                  "nodeType": "ExpressionStatement",
                  "src": "24472:66:15"
                }
              ]
            },
            "id": 2249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "24288:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2224,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "24316:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "24301:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2223,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2222,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2856,
                      "src": "24301:7:15"
                    },
                    "referencedDeclaration": 2856,
                    "src": "24301:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24300:24:15"
            },
            "returnParameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24338:0:15"
            },
            "scope": 2657,
            "src": "24279:266:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2276,
              "nodeType": "Block",
              "src": "24613:205:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2256,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2252,
                          "src": "24643:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "24643:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2255,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2205,
                      "src": "24623:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24623:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "24623:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2261,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "24683:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2262,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2845,
                          "src": "24683:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24710:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24683:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e207a65726f",
                        "id": 2265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24713:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        },
                        "value": "ReNFT::duration zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        }
                      ],
                      "id": 2260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24675:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24675:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2267,
                  "nodeType": "ExpressionStatement",
                  "src": "24675:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2269,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "24754:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2847,
                          "src": "24754:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24780:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24754:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24783:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24746:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24746:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "24746:65:15"
                }
              ]
            },
            "id": 2277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "24560:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "24591:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2277,
                  "src": "24576:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2251,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2250,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2856,
                      "src": "24576:7:15"
                    },
                    "referencedDeclaration": 2856,
                    "src": "24576:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24575:24:15"
            },
            "returnParameters": {
              "id": 2254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24613:0:15"
            },
            "scope": 2657,
            "src": "24551:267:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2304,
              "nodeType": "Block",
              "src": "24883:197:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2284,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2280,
                          "src": "24910:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2858,
                        "src": "24910:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2283,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2221,
                      "src": "24893:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24893:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2287,
                  "nodeType": "ExpressionStatement",
                  "src": "24893:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2289,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "24950:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2860,
                          "src": "24950:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24974:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24950:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24977:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24942:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24942:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "24942:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2297,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "25022:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2298,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2862,
                          "src": "25022:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25042:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25022:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206e6f74207a65726f",
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25045:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        },
                        "value": "ReNFT::rented at not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        }
                      ],
                      "id": 2296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25014:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25014:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "ExpressionStatement",
                  "src": "25014:59:15"
                }
              ]
            },
            "id": 2305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "24833:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "24861:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "24846:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2278,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "24846:7:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "24846:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24845:24:15"
            },
            "returnParameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24883:0:15"
            },
            "scope": 2657,
            "src": "24824:256:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2332,
              "nodeType": "Block",
              "src": "25148:198:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2312,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2308,
                          "src": "25178:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2858,
                        "src": "25178:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2311,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2205,
                      "src": "25158:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25158:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2315,
                  "nodeType": "ExpressionStatement",
                  "src": "25158:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2317,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2308,
                            "src": "25218:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2318,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2860,
                          "src": "25218:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25242:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25218:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25245:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25210:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25210:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "25210:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2325,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2308,
                            "src": "25289:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2326,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2862,
                          "src": "25289:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25309:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25289:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206973207a65726f",
                        "id": 2329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25312:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        },
                        "value": "ReNFT::rented at is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        }
                      ],
                      "id": 2324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25281:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25281:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2331,
                  "nodeType": "ExpressionStatement",
                  "src": "25281:58:15"
                }
              ]
            },
            "id": 2333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "25095:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "25126:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "25111:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2307,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2306,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "25111:7:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "25111:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25110:24:15"
            },
            "returnParameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25148:0:15"
            },
            "scope": 2657,
            "src": "25086:260:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2402,
              "nodeType": "Block",
              "src": "25422:382:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2342,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2336,
                              "src": "25440:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2343,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2813,
                            "src": "25440:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2345,
                          "indexExpression": {
                            "id": 2344,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2338,
                            "src": "25454:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25440:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25459:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25440:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e6420616d6f756e74206973207a65726f",
                        "id": 2348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25462:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        },
                        "value": "ReNFT::lend amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        }
                      ],
                      "id": 2341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25432:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25432:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2350,
                  "nodeType": "ExpressionStatement",
                  "src": "25432:59:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2352,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2336,
                              "src": "25509:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2353,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2813,
                            "src": "25509:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2355,
                          "indexExpression": {
                            "id": 2354,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2338,
                            "src": "25523:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25509:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25534:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                },
                                "typeName": {
                                  "id": 2357,
                                  "name": "uint16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25534:6:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                }
                              ],
                              "id": 2356,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25529:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25529:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint16",
                              "typeString": "type(uint16)"
                            }
                          },
                          "id": 2360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25529:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "25509:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e743136",
                        "id": 2362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25547:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        },
                        "value": "ReNFT::not uint16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        }
                      ],
                      "id": 2351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25501:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25501:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2364,
                  "nodeType": "ExpressionStatement",
                  "src": "25501:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2366,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2336,
                              "src": "25585:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2367,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2816,
                            "src": "25585:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2369,
                          "indexExpression": {
                            "id": 2368,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2338,
                            "src": "25604:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25585:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25609:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25585:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25612:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25577:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25577:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2374,
                  "nodeType": "ExpressionStatement",
                  "src": "25577:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2376,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2336,
                              "src": "25656:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2377,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2816,
                            "src": "25656:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2379,
                          "indexExpression": {
                            "id": 2378,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2338,
                            "src": "25675:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25656:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25686:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2381,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25686:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2380,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25681:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25681:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25681:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25656:40:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25698:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25648:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25648:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2388,
                  "nodeType": "ExpressionStatement",
                  "src": "25648:69:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 2392,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2336,
                                  "src": "25742:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 2393,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2819,
                                "src": "25742:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 2395,
                              "indexExpression": {
                                "id": 2394,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2338,
                                "src": "25760:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25742:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25735:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2390,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "25735:6:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25735:28:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25766:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25735:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25769:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25727:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25727:70:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2401,
                  "nodeType": "ExpressionStatement",
                  "src": "25727:70:15"
                }
              ]
            },
            "id": 2403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsLendable",
            "nameLocation": "25361:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2336,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "25394:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2403,
                  "src": "25378:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2335,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2334,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "25378:8:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "25378:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2338,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "25406:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2403,
                  "src": "25398:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25398:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25377:31:15"
            },
            "returnParameters": {
              "id": 2340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25422:0:15"
            },
            "scope": 2657,
            "src": "25352:452:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2483,
              "nodeType": "Block",
              "src": "25923:484:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2417,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2413,
                          "src": "25941:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 2418,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2406,
                            "src": "25954:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2419,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2843,
                          "src": "25954:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "25941:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a63616e742072656e74206f776e206e6674",
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25977:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        },
                        "value": "ReNFT::cant rent own nft"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        }
                      ],
                      "id": 2416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25933:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25933:71:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2423,
                  "nodeType": "ExpressionStatement",
                  "src": "25933:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2425,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "26022:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2426,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2828,
                            "src": "26022:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2428,
                          "indexExpression": {
                            "id": 2427,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "26038:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26022:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26049:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2430,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26049:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2429,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "26044:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26044:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "26044:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "26022:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26061:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26014:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26014:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2437,
                  "nodeType": "ExpressionStatement",
                  "src": "26014:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2439,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "26098:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2440,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2828,
                            "src": "26098:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2442,
                          "indexExpression": {
                            "id": 2441,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "26114:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26098:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26119:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26098:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26122:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26090:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26090:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2447,
                  "nodeType": "ExpressionStatement",
                  "src": "26090:58:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2449,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "26166:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2450,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2831,
                            "src": "26166:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2452,
                          "indexExpression": {
                            "id": 2451,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "26180:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26166:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26191:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                },
                                "typeName": {
                                  "id": 2454,
                                  "name": "uint16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26191:6:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                }
                              ],
                              "id": 2453,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "26186:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26186:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint16",
                              "typeString": "type(uint16)"
                            }
                          },
                          "id": 2457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "26186:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "26166:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e743136",
                        "id": 2459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26204:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        },
                        "value": "ReNFT::not uint16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        }
                      ],
                      "id": 2448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26158:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26158:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2461,
                  "nodeType": "ExpressionStatement",
                  "src": "26158:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2463,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "26242:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2464,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2831,
                            "src": "26242:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2466,
                          "indexExpression": {
                            "id": 2465,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "26256:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26242:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26261:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26242:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74416d6f756e74206973207a65726f",
                        "id": 2469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26264:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c7960a3940823e4c5cf1126077f544b5b4768548aab92112220a80330d90617",
                          "typeString": "literal_string \"ReNFT::rentAmount is zero\""
                        },
                        "value": "ReNFT::rentAmount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c7960a3940823e4c5cf1126077f544b5b4768548aab92112220a80330d90617",
                          "typeString": "literal_string \"ReNFT::rentAmount is zero\""
                        }
                      ],
                      "id": 2462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26234:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26234:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2471,
                  "nodeType": "ExpressionStatement",
                  "src": "26234:58:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2473,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "26310:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2474,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2828,
                            "src": "26310:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2476,
                          "indexExpression": {
                            "id": 2475,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "26326:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26310:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 2477,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2406,
                            "src": "26332:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2845,
                          "src": "26332:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "26310:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74206475726174696f6e206578636565647320616c6c6f776564206d6178",
                        "id": 2480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26357:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        },
                        "value": "ReNFT::rent duration exceeds allowed max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        }
                      ],
                      "id": 2472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26302:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26302:98:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2482,
                  "nodeType": "ExpressionStatement",
                  "src": "26302:98:15"
                }
              ]
            },
            "id": 2484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsRentable",
            "nameLocation": "25819:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2406,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "25851:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "25836:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2405,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2404,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2856,
                      "src": "25836:7:15"
                    },
                    "referencedDeclaration": 2856,
                    "src": "25836:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2409,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "25876:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "25860:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2838_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2408,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2407,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2838,
                      "src": "25860:8:15"
                    },
                    "referencedDeclaration": 2838,
                    "src": "25860:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2838_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2411,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "25888:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "25880:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25880:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2413,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "25899:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "25891:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25891:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25835:74:15"
            },
            "returnParameters": {
              "id": 2415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25923:0:15"
            },
            "scope": 2657,
            "src": "25810:597:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2511,
              "nodeType": "Block",
              "src": "26521:169:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2495,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2487,
                            "src": "26539:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2496,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "renterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2858,
                          "src": "26539:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2497,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2489,
                          "src": "26564:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26539:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742072656e746572",
                        "id": 2499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26575:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        },
                        "value": "ReNFT::not renter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        }
                      ],
                      "id": 2494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26531:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26531:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2501,
                  "nodeType": "ExpressionStatement",
                  "src": "26531:64:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "26613:42:15",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2504,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2487,
                              "src": "26631:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              }
                            },
                            {
                              "id": 2505,
                              "name": "blockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2491,
                              "src": "26640:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2503,
                            "name": "isPastReturnDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2613,
                            "src": "26614:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2865_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                            }
                          },
                          "id": 2506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26614:41:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706173742072657475726e2064617465",
                        "id": 2508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26657:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        },
                        "value": "ReNFT::past return date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        }
                      ],
                      "id": 2502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26605:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26605:78:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "26605:78:15"
                }
              ]
            },
            "id": 2512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsReturnable",
            "nameLocation": "26422:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "26456:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2512,
                  "src": "26441:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2486,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2485,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "26441:7:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "26441:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2489,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26473:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2512,
                  "src": "26465:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26465:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2491,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "26492:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2512,
                  "src": "26484:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26484:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26440:67:15"
            },
            "returnParameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26521:0:15"
            },
            "scope": 2657,
            "src": "26413:277:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2528,
              "nodeType": "Block",
              "src": "26779:81:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2521,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2515,
                            "src": "26797:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2522,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2843,
                          "src": "26797:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2523,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2517,
                          "src": "26822:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26797:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f74206c656e646572",
                        "id": 2525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26833:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        },
                        "value": "ReNFT::not lender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        }
                      ],
                      "id": 2520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26789:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26789:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2527,
                  "nodeType": "ExpressionStatement",
                  "src": "26789:64:15"
                }
              ]
            },
            "id": 2529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsStoppable",
            "nameLocation": "26705:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2515,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "26738:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "26723:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2856_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2514,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2513,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2856,
                      "src": "26723:7:15"
                    },
                    "referencedDeclaration": 2856,
                    "src": "26723:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2856_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2517,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26755:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "26747:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26747:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26722:43:15"
            },
            "returnParameters": {
              "id": 2519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26779:0:15"
            },
            "scope": 2657,
            "src": "26696:164:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2553,
              "nodeType": "Block",
              "src": "26941:124:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2539,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2531,
                              "src": "26966:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26959:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2537,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "26959:6:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26959:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26975:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26959:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207072696365",
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26978:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        },
                        "value": "ReNFT::invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        }
                      ],
                      "id": 2536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26951:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26951:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "26951:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2547,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2533,
                          "src": "27019:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27028:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "27019:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207363616c65",
                        "id": 2550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27035:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        },
                        "value": "ReNFT::invalid scale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        }
                      ],
                      "id": 2546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27011:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27011:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2552,
                  "nodeType": "ExpressionStatement",
                  "src": "27011:47:15"
                }
              ]
            },
            "id": 2554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsUnpackablePrice",
            "nameLocation": "26875:23:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2531,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "26906:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "26899:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "26899:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2533,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "26921:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "26913:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26913:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26898:29:15"
            },
            "returnParameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26941:0:15"
            },
            "scope": 2657,
            "src": "26866:199:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2566,
              "nodeType": "Block",
              "src": "27133:67:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2560,
                          "name": "paymentIx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2556,
                          "src": "27151:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27163:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "27151:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f6b656e2069732073656e74696e656c",
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27166:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        },
                        "value": "ReNFT::token is sentinel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        }
                      ],
                      "id": 2559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27143:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27143:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2565,
                  "nodeType": "ExpressionStatement",
                  "src": "27143:50:15"
                }
              ]
            },
            "id": 2567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureTokenNotSentinel",
            "nameLocation": "27080:22:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2556,
                  "mutability": "mutable",
                  "name": "paymentIx",
                  "nameLocation": "27109:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "27103:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2555,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27103:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27102:17:15"
            },
            "returnParameters": {
              "id": 2558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27133:0:15"
            },
            "scope": 2657,
            "src": "27071:129:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2583,
              "nodeType": "Block",
              "src": "27304:100:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2577,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2570,
                            "src": "27339:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          {
                            "id": 2578,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2572,
                            "src": "27348:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2576,
                          "name": "isPastReturnDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2613,
                          "src": "27322:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2865_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                          }
                        },
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27322:41:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72657475726e2064617465206e6f7420706173736564",
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27365:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        },
                        "value": "ReNFT::return date not passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        }
                      ],
                      "id": 2575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27314:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27314:83:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "27314:83:15"
                }
              ]
            },
            "id": 2584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsClaimable",
            "nameLocation": "27215:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "27258:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "27233:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2569,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2568,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "27233:17:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "27233:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2572,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "27275:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "27267:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27267:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27232:58:15"
            },
            "returnParameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27304:0:15"
            },
            "scope": 2657,
            "src": "27206:198:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "27505:163:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2595,
                          "name": "nowTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2589,
                          "src": "27523:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 2596,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2587,
                            "src": "27533:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2862,
                          "src": "27533:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "27523:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f77206265666f72652072656e746564",
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27551:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        },
                        "value": "ReNFT::now before rented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        }
                      ],
                      "id": 2594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27515:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27515:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "27515:63:15"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2602,
                        "name": "nowTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "27595:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2603,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2587,
                          "src": "27605:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2604,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2862,
                        "src": "27605:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "27595:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2606,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2587,
                          "src": "27624:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2607,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2860,
                        "src": "27624:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2608,
                        "name": "SECONDS_IN_DAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "27647:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "27624:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27595:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2593,
                  "id": 2611,
                  "nodeType": "Return",
                  "src": "27588:73:15"
                }
              ]
            },
            "id": 2613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPastReturnDate",
            "nameLocation": "27419:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "27451:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "27436:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2865_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2586,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2585,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2865,
                      "src": "27436:7:15"
                    },
                    "referencedDeclaration": 2865,
                    "src": "27436:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2865_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2589,
                  "mutability": "mutable",
                  "name": "nowTime",
                  "nameLocation": "27468:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "27460:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27460:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27435:41:15"
            },
            "returnParameters": {
              "id": 2593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "27499:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27499:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27498:6:15"
            },
            "scope": 2657,
            "src": "27410:258:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2631,
              "nodeType": "Block",
              "src": "27915:103:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2621,
                          "name": "newRentFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2615,
                          "src": "27933:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27946:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "27933:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a666565206578636565647320313030706374",
                        "id": 2624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27953:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        },
                        "value": "ReNFT::fee exceeds 100pct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        }
                      ],
                      "id": 2620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27925:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27925:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2626,
                  "nodeType": "ExpressionStatement",
                  "src": "27925:56:15"
                },
                {
                  "expression": {
                    "id": 2629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2627,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "27991:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2628,
                      "name": "newRentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2615,
                      "src": "28001:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27991:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2630,
                  "nodeType": "ExpressionStatement",
                  "src": "27991:20:15"
                }
              ]
            },
            "functionSelector": "76774ea3",
            "id": 2632,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2617,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27905:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "27905:9:15"
              }
            ],
            "name": "setRentFee",
            "nameLocation": "27865:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "mutability": "mutable",
                  "name": "newRentFee",
                  "nameLocation": "27884:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2632,
                  "src": "27876:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27876:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27875:20:15"
            },
            "returnParameters": {
              "id": 2619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27915:0:15"
            },
            "scope": 2657,
            "src": "27856:162:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2643,
              "nodeType": "Block",
              "src": "28099:45:15",
              "statements": [
                {
                  "expression": {
                    "id": 2641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2639,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "28109:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2640,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2634,
                      "src": "28123:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "28109:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2642,
                  "nodeType": "ExpressionStatement",
                  "src": "28109:28:15"
                }
              ]
            },
            "functionSelector": "1c31f710",
            "id": 2644,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2636,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "28089:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "28089:9:15"
              }
            ],
            "name": "setBeneficiary",
            "nameLocation": "28033:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2634,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "28064:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2644,
                  "src": "28048:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28048:15:15",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28047:32:15"
            },
            "returnParameters": {
              "id": 2638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28099:0:15"
            },
            "scope": 2657,
            "src": "28024:120:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2655,
              "nodeType": "Block",
              "src": "28204:35:15",
              "statements": [
                {
                  "expression": {
                    "id": 2653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2651,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "28214:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2652,
                      "name": "newPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2646,
                      "src": "28223:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "28214:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2654,
                  "nodeType": "ExpressionStatement",
                  "src": "28214:18:15"
                }
              ]
            },
            "functionSelector": "16c38b3c",
            "id": 2656,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2649,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2648,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "28194:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "28194:9:15"
              }
            ],
            "name": "setPaused",
            "nameLocation": "28159:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2646,
                  "mutability": "mutable",
                  "name": "newPaused",
                  "nameLocation": "28174:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2656,
                  "src": "28169:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28169:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28168:16:15"
            },
            "returnParameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28204:0:15"
            },
            "scope": 2657,
            "src": "28150:89:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2658,
        "src": "2113:26128:15",
        "usedErrors": []
      }
    ],
    "src": "32:29488:15"
  },
  "bytecode": "6080604052600160038190556004556005805460ff1916905560006006553480156200002a57600080fd5b5060405162004f7a38038062004f7a8339810160408190526200004d916200010f565b6200005883620000b1565b6200006382620000b1565b6200006e81620000b1565b600080546001600160a01b039485166001600160a01b03199182161790915560028054938516938216939093179092556001805491909316911617905562000179565b6001600160a01b0381166200010c5760405162461bcd60e51b815260206004820152601360248201527f52654e46543a3a7a65726f206164647265737300000000000000000000000000604482015260640160405180910390fd5b50565b6000806000606084860312156200012557600080fd5b8351620001328162000163565b6020850151909350620001458162000163565b6040850151909250620001588162000163565b809150509250925092565b6001600160a01b03811681146200010c57600080fd5b614df180620001896000396000f3fe6080604052600436106100f35760003560e01c8063937821a11161008a578063cbe55e5411610059578063cbe55e5414610315578063dc68a14214610328578063f23a6e6114610348578063fe46b7cd1461037457600080fd5b8063937821a114610285578063bc197c81146102a5578063bf2b23ea146102d1578063c9c40183146102f557600080fd5b80631c31f710116100c65780631c31f710146101b3578063296c21b7146101d35780635c975abb1461024b57806376774ea31461026557600080fd5b806301ffc9a7146100f857806314b5685c1461012d578063150b7a021461014f57806316c38b3c14610193575b600080fd5b34801561010457600080fd5b50610118610113366004614865565b6103cf565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b5061014d610148366004614534565b610406565b005b34801561015b57600080fd5b5061017a61016a36600461438c565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610124565b34801561019f57600080fd5b5061014d6101ae36600461482b565b610451565b3480156101bf57600080fd5b5061014d6101ce3660046142c2565b61048e565b3480156101df57600080fd5b506101f36101ee36600461445f565b6104da565b6040805160ff98891681526001600160a01b039097166020880152948716948601949094526001600160e01b0319909216606085015261ffff90811660808501521660a08301529190911660c082015260e001610124565b34801561025757600080fd5b506005546101189060ff1681565b34801561027157600080fd5b5061014d610280366004614880565b610593565b34801561029157600080fd5b5061014d6102a0366004614534565b610613565b3480156102b157600080fd5b5061017a6102c03660046142df565b63bc197c8160e01b95945050505050565b3480156102dd57600080fd5b506102e760065481565b604051908152602001610124565b34801561030157600080fd5b5061014d610310366004614494565b610649565b61014d610323366004614737565b6106b0565b34801561033457600080fd5b5061014d6103433660046145f8565b6106ef565b34801561035457600080fd5b5061017a6103633660046143f7565b63f23a6e6160e01b95945050505050565b34801561038057600080fd5b5061039461038f36600461445f565b610732565b604080516001600160a01b03909516855261ffff909316602085015260ff9091169183019190915263ffffffff166060820152608001610124565b60006001600160e01b03198216630271189760e51b148061040057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60055460ff16156104325760405162461bcd60e51b815260040161042990614aa2565b60405180910390fd5b61044a6107b06104458787878787610d76565b610f2d565b5050505050565b6001546001600160a01b0316331461047b5760405162461bcd60e51b815260040161042990614ac9565b6005805460ff1916911515919091179055565b6001546001600160a01b031633146104b85760405162461bcd60e51b815260040161042990614ac9565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000806000806000808a8a8a6040516020016104fb939291906148f1565b60408051601f19818403018152918152815160209283012060008181526007909352912080549192509060ff16600181111561053957610539614d47565b9054909c6001600160a01b036101008304169c5060ff600160a81b830481169c50600160b01b830460e01b9b5061ffff600160d01b840481169b50600160e01b8404169950600160f01b9092049091169650945050505050565b6001546001600160a01b031633146105bd5760405162461bcd60e51b815260040161042990614ac9565b612710811061060e5760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a666565206578636565647320313030706374000000000000006044820152606401610429565b600655565b60055460ff16156106365760405162461bcd60e51b815260040161042990614aa2565b61044a6110626104458787878787610d76565b60055460ff161561066c5760405162461bcd60e51b815260040161042990614aa2565b6106aa61149f6104458686868660006040519080825280602002602001820160405280156106a4578160200160208202803683370190505b50610d76565b50505050565b60055460ff16156106d35760405162461bcd60e51b815260040161042990614aa2565b6106e761185b610445888888888888611fb1565b505050505050565b60055460ff16156107125760405162461bcd60e51b815260040161042990614aa2565b6107286120e26104458a8a8a8a8a8a8a8a6126cf565b5050505050505050565b600080600080600087878760405160200161074f939291906148f1565b60408051808303601f190181529181528151602092830120600090815260089092529020546001600160a01b03811699600160c81b820461ffff169950600160a01b820460ff169850600160a81b90910463ffffffff169650945050505050565b80515b8160200151811015610d7257600082606001518360000151815181106107db576107db614d5d565b6020026020010151836080015183815181106107f9576107f9614d5d565b6020026020010151846101000151848151811061081857610818614d5d565b6020026020010151604051602001610832939291906148f1565b6040516020818303038152906040528051906020012090506000836060015184600001518151811061086657610866614d5d565b60200260200101518460800151848151811061088457610884614d5d565b602002602001015185610120015185815181106108a3576108a3614d5d565b60200260200101516040516020016108bd939291906148f1565b60408051601f19818403018152828252805160209182012060008681526007835283812082825260089093528390206101008501909352815490945090926109ab918490829060ff16600181111561091757610917614d47565b600181111561092857610928614d47565b8152905461010081046001600160a01b03166020830152600160a81b810460ff9081166040840152600160b01b820460e090811b6001600160e01b0319166060850152600160d01b830461ffff9081166080860152600160e01b84041660a0850152600160f01b8304821660c0850152600160f81b909204161515910152612808565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff166060820152610a009061288b565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff166060820152610a57903342612911565b815460ff166001811115610a6d57610a6d614d47565b86604001518681518110610a8357610a83614d5d565b60200260200101516001811115610a9c57610a9c614d47565b14610ab95760405162461bcd60e51b8152600401610429906149fd565b81548154600160d01b90910461ffff908116600160c81b909204161115610b1a5760405162461bcd60e51b81526020600482015260156024820152742932a7232a1d1d31b934ba34b1b0b61032b93937b960591b6044820152606401610429565b8054600090610b3690600160a81b900463ffffffff1642614cd3565b6040805161010081019091528454919250610c53918590829060ff166001811115610b6357610b63614d47565b6001811115610b7457610b74614d47565b815290546001600160a01b036101008204811660208085019190915260ff600160a81b80850482166040808801919091526001600160e01b0319600160b01b870460e090811b919091166060808a019190915261ffff600160d01b890481166080808c0191909152600160e01b8a04821660a08c0152600160f01b8a04871660c08c0152600160f81b909904861615159290990191909152815196870182528b549586168752600160a01b86049093169386019390935263ffffffff9084041691840191909152600160c81b90910490921691810191909152836129c6565b610cde838389606001518a6000015181518110610c7257610c72614d5d565b60200260200101518a604001518b6000015181518110610c9457610c94614d5d565b60200260200101518b608001518b81518110610cb257610cb2614d5d565b60200260200101518c61010001518c81518110610cd157610cd1614d5d565b6020026020010151612c4f565b8661012001518681518110610cf557610cf5614d5d565b60200260200101517f58855dd8908b14c6d7922d964418f37efd968bc6b9b857560870b14a898f916d42604051610d38919063ffffffff91909116815260200190565b60405180910390a2505050600090815260086020526040902080546001600160d81b03191690555080610d6a81614d16565b9150506107b3565b5050565b610d7e613f1b565b604051806101c00160405280600081526020016001815260200187815260200186815260200185815260200160006001600160401b03811115610dc357610dc3614d73565b604051908082528060200260200182016040528015610dec578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610e1d578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610e4e578160200160208202803683370190505b50815260208101859052604081018490526060016000604051908082528060200260200182016040528015610e8d578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610ebe578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610eef578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610f20578160200160208202803683370190505b5090529695505050505050565b600081606001515111610f735760405162461bcd60e51b815260206004820152600e60248201526d52654e46543a3a6e6f206e66747360901b6044820152606401610429565b806060015151816020015114611055578060600151816020015181518110610f9d57610f9d614d5d565b60200260200101516001600160a01b03168160600151826000015181518110610fc857610fc8614d5d565b60200260200101516001600160a01b0316148015611018575060018160400151826020015181518110610ffd57610ffd614d5d565b6020026020010151600181111561101657611016614d47565b145b15611035576020810180519061102d82614d16565b905250610f73565b611042818363ffffffff16565b6020810180518083529061102d82614d16565b610d72818363ffffffff16565b80515b8160200151811015610d72576000826060015183600001518151811061108d5761108d614d5d565b6020026020010151836080015183815181106110ab576110ab614d5d565b602002602001015184610100015184815181106110ca576110ca614d5d565b60200260200101516040516020016110e4939291906148f1565b6040516020818303038152906040528051906020012090506000836060015184600001518151811061111857611118614d5d565b60200260200101518460800151848151811061113657611136614d5d565b6020026020010151856101200151858151811061115557611155614d5d565b602002602001015160405160200161116f939291906148f1565b60408051601f19818403018152828252805160209182012060008681526007835283812082825260089093528390206101008501909352815490945090926111c9918490829060ff16600181111561091757610917614d47565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff16606082015261121e9061288b565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff1660608201526112749042612f4f565b604080516101008101909152825461138e91908490829060ff16600181111561129f5761129f614d47565b60018111156112b0576112b0614d47565b815290546001600160a01b036101008204811660208085019190915260ff600160a81b80850482166040808801919091526001600160e01b0319600160b01b870460e090811b919091166060808a019190915261ffff600160d01b890481166080808c0191909152600160e01b8a04821660a08c0152600160f01b8a04871660c08c0152600160f81b909904861615159290990191909152815196870182528a549586168752600160a01b86049093169386019390935263ffffffff9084041691840191909152600160c81b90910490921691810191909152612fa5565b61140c828288606001518960000151815181106113ad576113ad614d5d565b602002602001015189604001518a60000151815181106113cf576113cf614d5d565b60200260200101518a608001518a815181106113ed576113ed614d5d565b60200260200101518b61010001518b81518110610cd157610cd1614d5d565b856101200151858151811061142357611423614d5d565b60200260200101517f4630b53a4335803b2a4f9c1ce896f4cadbf909907810e496eda17614483d7b9442604051611466919063ffffffff91909116815260200190565b60405180910390a25050600090815260086020526040902080546001600160d81b0319169055508061149781614d16565b915050611065565b805160208201516000916114b291614cd3565b6001600160401b038111156114c9576114c9614d73565b6040519080825280602002602001820160405280156114f2578160200160208202803683370190505b5082519091505b8260200151811015611823576000836060015184600001518151811061152157611521614d5d565b60200260200101518460800151838151811061153f5761153f614d5d565b6020026020010151856101000151848151811061155e5761155e614d5d565b6020026020010151604051602001611578939291906148f1565b60408051601f19818403018152828252805160209182012060008181526007909252908290206101008401909252815490935090916115c9918390829060ff16600181111561091757610917614d47565b604080516101008101909152815461168991908390829060ff1660018111156115f4576115f4614d47565b600181111561160557611605614d47565b8152905461010081046001600160a01b03166020830152600160a81b810460ff9081166040840152600160b01b820460e090811b6001600160e01b0319166060850152600160d01b830461ffff9081166080860152600160e01b84041660a0850152600160f01b8304821660c0850152600160f81b90920416151591015233613136565b805460ff16600181111561169f5761169f614d47565b856040015184815181106116b5576116b5614d5d565b602002602001015160018111156116ce576116ce614d47565b146116eb5760405162461bcd60e51b8152600401610429906149fd565b8054600160d01b810461ffff908116600160e01b90920416146117495760405162461bcd60e51b815260206004820152601660248201527514995391950e8e9858dd1a5d995b1e481c995b9d195960521b6044820152606401610429565b80548551600160d01b90910461ffff169085906117669086614cd3565b8151811061177657611776614d5d565b602002602001018181525050846101000151838151811061179957611799614d5d565b60200260200101517ffc33a7c95ee492cb6247bd90b28bbe1f459d8f80f3dc65f934cd020cf1e83efb4283600001601a9054906101000a900461ffff166040516117f992919063ffffffff92909216825261ffff16602082015260400190565b60405180910390a2506000908152600760205260408120558061181b81614d16565b9150506114f9565b50610d72823033611843866080015187600001518860200151600061318f565b865160208801516118569188918161318f565b61324e565b80515b8160200151811015610d72576000826060015183600001518151811061188657611886614d5d565b6020026020010151836080015183815181106118a4576118a4614d5d565b602002602001015184610100015184815181106118c3576118c3614d5d565b60200260200101516040516020016118dd939291906148f1565b6040516020818303038152906040528051906020012090506000836060015184600001518151811061191157611911614d5d565b60200260200101518460800151848151811061192f5761192f614d5d565b602002602001015160045460405160200161194c939291906148f1565b60408051601f19818403018152828252805160209182012060008681526007835283812082825260089093528390206101008501909352815490945090926119a6918490829060ff16600181111561091757610917614d47565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff1660608201526119fb906133c4565b6040805161010081019091528254611abd91908490829060ff166001811115611a2657611a26614d47565b6001811115611a3757611a37614d47565b8152905461010081046001600160a01b03166020830152600160a81b810460ff9081166040840152600160b01b820460e090811b6001600160e01b0319166060850152600160d01b830461ffff9081166080860152600160e01b84041660a0850152600160f01b8304821660c0850152600160f81b909204161515910152878733613477565b815460ff166001811115611ad357611ad3614d47565b86604001518681518110611ae957611ae9614d5d565b60200260200101516001811115611b0257611b02614d47565b14611b1f5760405162461bcd60e51b8152600401610429906149fd565b81546101608701518051600160e01b90920461ffff169187908110611b4657611b46614d5d565b60200260200101511115611b9c5760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a696e76616c69642072656e7420616d6f756e740000000000006044820152606401610429565b81546000805460405163c6ee427f60e01b8152600160f01b90930460ff1660048401819052926001600160a01b039091169063c6ee427f9060240160206040518083038186803b158015611bef57600080fd5b505afa158015611c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2791906142a5565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611c6457600080fd5b505afa158015611c78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9c9190614899565b60ff1690506000611cae82600a614be9565b8654909150600090611cca90600160b01b900460e01b836136e2565b8b61014001518b81518110611ce157611ce1614d5d565b602002602001015160ff168c61016001518c81518110611d0357611d03614d5d565b6020026020010151611d159190614c91565b611d1f9190614c91565b905060008111611d415760405162461bcd60e51b815260040161042990614a6b565b611d566001600160a01b038516333084613771565b50506040518060800160405280336001600160a01b031681526020018a61014001518a81518110611d8957611d89614d5d565b602002602001015160ff1681526020014263ffffffff1681526020018a61016001518a81518110611dbc57611dbc614d5d565b60209081029190910181015161ffff908116909252600089815260088252604090819020845181549386015192860151606090960151909416600160c81b0261ffff60c81b1963ffffffff909616600160a81b029590951665ffffffffffff60a81b1960ff909316600160a01b026001600160a81b03199094166001600160a01b0390951694909417929092171691909117919091179055610160890151805189908110611e6c57611e6c614d5d565b6020908102919091018101516000898152600790925260409091208054601c90611ea2908490600160e01b900461ffff16614cb0565b92506101000a81548161ffff021916908361ffff1602179055506004548961010001518981518110611ed657611ed6614d5d565b6020026020010151336001600160a01b03167f61e1a1e6f89eaba4ba0119b0023bd32b1bb0412ab96ccd8d0588a3e98a0976318c61016001518c81518110611f2057611f20614d5d565b60200260200101518d61014001518d81518110611f3f57611f3f614d5d565b6020908102919091018101518a546040805161ffff909516855260ff90921692840192909252600160a81b90910463ffffffff169082015260600160405180910390a460048054906000611f9283614d16565b9190505550505050505050508080611fa990614d16565b91505061185e565b611fb9613f1b565b604051806101c00160405280600081526020016001815260200188815260200187815260200186815260200160006001600160401b03811115611ffe57611ffe614d73565b604051908082528060200260200182016040528015612027578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015612058578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015612089578160200160208202803683370190505b508152602080820196909652604080516000808252818901835282840191909152606083019690965260808201949094528351858152808701855260a082015283519485529484019092525060c0909201529392505050565b80515b8160200151811015612693576120fb82826137dc565b6000826060015183600001518151811061211757612117614d5d565b60200260200101518360800151838151811061213557612135614d5d565b6020026020010151600354604051602001612152939291906148f1565b60408051601f1981840301815282825280516020918201206000818152600790925290829020610100840190925281549093509091612237918390829060ff1660018111156121a3576121a3614d47565b60018111156121b4576121b4614d47565b8152905461010081046001600160a01b03166020830152600160a81b810460ff9081166040840152600160b01b820460e090811b6001600160e01b0319166060850152600160d01b830461ffff9081166080860152600160e01b84041660a0850152600160f01b8304821660c0850152600160f81b90920416151591015261399a565b61225e846101800151848151811061225157612251614d5d565b6020026020010151613a53565b6000808560400151858151811061227757612277614d5d565b6020026020010151600181111561229057612290614d47565b14905060008560a0015185815181106122ab576122ab614d5d565b60200260200101519050811561231e578061ffff1660011461231e5760405162461bcd60e51b815260206004820152602660248201527f52654e46543a3a6c656e64416d6f756e742073686f756c6420626520657175616044820152656c20746f203160d01b6064820152608401610429565b6040518061010001604052808760400151878151811061234057612340614d5d565b6020026020010151600181111561235957612359614d47565b8152602001336001600160a01b031681526020018760c00151878151811061238357612383614d5d565b602002602001015160ff1681526020018760e0015187815181106123a9576123a9614d5d565b60200260200101516001600160e01b03191681526020018261ffff1681526020018261ffff16815260200187610180015187815181106123eb576123eb614d5d565b602002602001015160ff168152602001876101a00151878151811061241257612412614d5d565b6020908102919091018101511515909152600086815260079091526040902081518154829060ff19166001838181111561244e5761244e614d47565b0217905550602082015181546040840151606085015160808087015160a088015160c089015160e0998a0151610100600160b01b03199097166101006001600160a01b039099169890980260ff60a81b191697909717600160a81b60ff968716021765ffffffffffff60b01b1916600160b01b9490991c9390930261ffff60d01b191697909717600160d01b61ffff988916021762ffffff60e01b1916600160e01b979092169690960260ff60f01b191617600160f01b9190931602919091176001600160f81b0316600160f81b9115159190910217905586015180518690811061253b5761253b614d5d565b6020026020010151866060015187600001518151811061255d5761255d614d5d565b60200260200101516001600160a01b0316336001600160a01b03167ff8d82fdbb496215c151d63910926322dcb6ba0f8cbd5fa216ef261106bb1ab46856003548b60c001518b815181106125b3576125b3614d5d565b60200260200101518c60e001518c815181106125d1576125d1614d5d565b6020026020010151888e61018001518e815181106125f1576125f1614d5d565b60200260200101518f6101a001518f8151811061261057612610614d5d565b6020908102919091018101516040805198151589529188019690965260ff948516908701526001600160e01b0319909216606086015261ffff1660808501521660a0830152151560c082015260e00160405180910390a46003805490600061267783614d16565b919050555050505050808061268b90614d16565b9150506120e5565b506126cc8133306126b3856080015186600001518760200151600061318f565b6118568660a0015187600001518860200151600061318f565b50565b6126d7613f1b565b604051806101c0016040528060008152602001600181526020018a815260200189815260200188815260200187815260200186815260200185815260200160006001600160401b0381111561272e5761272e614d73565b604051908082528060200260200182016040528015612757578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015612788578160200160208202803683370190505b50815260200160006040519080825280602002602001820160405280156127b9578160200160208202803683370190505b50815260200160006040519080825280602002602001820160405280156127ea578160200160208202803683370190505b50815260200184815260200183815250905098975050505050505050565b6128158160200151613aa6565b604081015160ff166128605760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a6475726174696f6e207a65726f60601b6044820152606401610429565b60608101516001600160e01b0319166126cc5760405162461bcd60e51b815260040161042990614a6b565b805161289690613aa6565b602081015160ff166128ba5760405162461bcd60e51b815260040161042990614a34565b604081015163ffffffff166126cc5760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a72656e746564206174206973207a65726f00000000000000006044820152606401610429565b816001600160a01b031683600001516001600160a01b03161461296a5760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103932b73a32b960791b6044820152606401610429565b6129748382613af2565b156129c15760405162461bcd60e51b815260206004820152601760248201527f52654e46543a3a706173742072657475726e20646174650000000000000000006044820152606401610429565b505050565b60c08301516000805460405163c6ee427f60e01b815260ff841660048201526001600160a01b039091169063c6ee427f9060240160206040518083038186803b158015612a1257600080fd5b505afa158015612a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4a91906142a5565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612a8757600080fd5b505afa158015612a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612abf9190614899565b60ff1690506000612ad182600a614be9565b90506000612ae38860600151836136e2565b876060015161ffff16612af69190614c91565b90506000876020015160ff1682612b0d9190614c91565b9050600062015180612b1f848a614c91565b612b299190614b84565b905060008211612b875760405162461bcd60e51b815260206004820152602360248201527f52654e46543a3a746f74616c2072656e746572207061796d656e74206973207a60448201526265726f60e81b6064820152608401610429565b60008111612bd75760405162461bcd60e51b815260206004820152601d60248201527f52654e46543a3a6c656e646572207061796d656e74206973207a65726f0000006044820152606401610429565b6000612be38284614cd3565b9050600654600014612c0b576000612bfb8389613b80565b9050612c078184614cd3565b9250505b60208b0151612c25906001600160a01b0389169084613bb7565b8015612c42578951612c42906001600160a01b0389169083613bb7565b5050505050505050505050565b8554600160f81b900460ff16612f025784548654600160c81b90910461ffff908116600160d01b909204161115612d43578454865461ffff600160c81b9092048216918891601a91612cab918591600160d01b90910416614cb0565b825461ffff91821661010093840a908102908302199091161790925588548854604051637921219560e11b81526001600160a01b03808b16965063f242432a95612d0c95309504909116928992600160c81b90910490911690600401614937565b600060405180830381600087803b158015612d2657600080fd5b505af1158015612d3a573d6000803e3d6000fd5b50505050612eb0565b84548654600160d01b900461ffff908116600160c81b909204161415612eb0576000836001811115612d7757612d77614d47565b1415612df25785546040516323b872dd60e01b81523060048201526101009091046001600160a01b039081166024830152604482018490528516906323b872dd90606401600060405180830381600087803b158015612dd557600080fd5b505af1158015612de9573d6000803e3d6000fd5b50505050612e6e565b85548554604051637921219560e11b81526001600160a01b038781169363f242432a93612e3b933093610100909304909216918891600160c81b900461ffff1690600401614937565b600060405180830381600087803b158015612e5557600080fd5b505af1158015612e69573d6000803e3d6000fd5b505050505b60076000858484604051602001612e87939291906148f1565b60408051601f198184030181529181528151602092830120835290820192909252016000908120555b8454604080514263ffffffff168152600160c81b90920461ffff16602083015282917ffc33a7c95ee492cb6247bd90b28bbe1f459d8f80f3dc65f934cd020cf1e83efb910160405180910390a26106e7565b8454865461ffff600160c81b9092048216918891601c91612f2d918591600160e01b90910416614b46565b92506101000a81548161ffff021916908361ffff160217905550505050505050565b612f598282613af2565b610d725760405162461bcd60e51b815260206004820152601d60248201527f52654e46543a3a72657475726e2064617465206e6f74207061737365640000006044820152606401610429565b60c08201516000805460405163c6ee427f60e01b815260ff841660048201526001600160a01b039091169063c6ee427f9060240160206040518083038186803b158015612ff157600080fd5b505afa158015613005573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061302991906142a5565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561306657600080fd5b505afa15801561307a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061309e9190614899565b60ff16905060006130b082600a614be9565b905060006130c28760600151836136e2565b866060015161ffff166130d59190614c91565b90506000866020015160ff16826130ec9190614c91565b90506000600654600014613107576131048287613b80565b90505b602089015161312b9061311a8385614cd3565b6001600160a01b0389169190613bb7565b505050505050505050565b806001600160a01b031682602001516001600160a01b031614610d725760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103632b73232b960791b6044820152606401610429565b606061319b8484614cd3565b6001600160401b038111156131b2576131b2614d73565b6040519080825280602002602001820160405280156131db578160200160208202803683370190505b509050835b8381101561324557856131f38483614cd3565b8151811061320357613203614d5d565b60200260200101518286836132189190614cd3565b8151811061322857613228614d5d565b60209081029190910101528061323d81614d16565b9150506131e0565b50949350505050565b6000604086015186518151811061326757613267614d5d565b6020026020010151600181111561328057613280614d47565b141561334657606085015185518151811061329d5761329d614d5d565b60200260200101516001600160a01b03166323b872dd858588608001518960000151815181106132cf576132cf614d5d565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561332957600080fd5b505af115801561333d573d6000803e3d6000fd5b5050505061044a565b606085015185518151811061335d5761335d614d5d565b60200260200101516001600160a01b0316632eb2c2d6858585856040518563ffffffff1660e01b8152600401613396949392919061496f565b600060405180830381600087803b1580156133b057600080fd5b505af115801561312b573d6000803e3d6000fd5b80516133cf90613be7565b602081015160ff161561341f5760405162461bcd60e51b815260206004820152601860248201527752654e46543a3a6475726174696f6e206e6f74207a65726f60401b6044820152606401610429565b604081015163ffffffff16156126cc5760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a72656e746564206174206e6f74207a65726f000000000000006044820152606401610429565b83602001516001600160a01b0316816001600160a01b031614156134dd5760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a63616e742072656e74206f776e206e667400000000000000006044820152606401610429565b60ff801683610140015183815181106134f8576134f8614d5d565b602002602001015160ff1611156135445760405162461bcd60e51b815260206004820152601060248201526f0a4ca9c8ca87474dcdee840ead2dce8760831b6044820152606401610429565b6000836101400151838151811061355d5761355d614d5d565b602002602001015160ff16116135855760405162461bcd60e51b815260040161042990614a34565b61ffff801683610160015183815181106135a1576135a1614d5d565b602002602001015111156135eb5760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103ab4b73a189b60791b6044820152606401610429565b6000836101600151838151811061360457613604614d5d565b6020026020010151116136595760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a72656e74416d6f756e74206973207a65726f000000000000006044820152606401610429565b836040015160ff16836101400151838151811061367857613678614d5d565b602002602001015160ff1611156106aa5760405162461bcd60e51b815260206004820152602860248201527f52654e46543a3a72656e74206475726174696f6e206578636565647320616c6c6044820152670deeecac840dac2f60c31b6064820152608401610429565b60006136ee8383613c3e565b60f083901c61ffff60e085901c16600061370a61271086614b84565b905061270f8361ffff1611156137205761270f92505b61270f8261ffff1611156137345761270f91505b60006137448661ffff8616614c91565b905060006137568361ffff8616614c91565b905060006137648284614b6c565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106aa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613ccf565b60008260a0015182815181106137f4576137f4614d5d565b6020026020010151116138495760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a6c656e6420616d6f756e74206973207a65726f0000000000006044820152606401610429565b61ffff80168260a00151828151811061386457613864614d5d565b602002602001015111156138ae5760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103ab4b73a189b60791b6044820152606401610429565b60008260c0015182815181106138c6576138c6614d5d565b602002602001015160ff16116138ee5760405162461bcd60e51b815260040161042990614a34565b60ff80168260c00151828151811061390857613908614d5d565b602002602001015160ff1611156139545760405162461bcd60e51b815260206004820152601060248201526f0a4ca9c8ca87474dcdee840ead2dce8760831b6044820152606401610429565b60008260e00151828151811061396c5761396c614d5d565b602002602001015160e01c63ffffffff1611610d725760405162461bcd60e51b815260040161042990614a6b565b6139a78160200151613be7565b604081015160ff16156139f75760405162461bcd60e51b815260206004820152601860248201527752654e46543a3a6475726174696f6e206e6f74207a65726f60401b6044820152606401610429565b60608101516001600160e01b031916156126cc5760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a72656e74207072696365206e6f74207a65726f0000000000006044820152606401610429565b60008160ff16116126cc5760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a746f6b656e2069732073656e74696e656c00000000000000006044820152606401610429565b6001600160a01b0381166126cc5760405162461bcd60e51b815260206004820152601360248201527252654e46543a3a7a65726f206164647265737360681b6044820152606401610429565b6000826040015163ffffffff168211613b4d5760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a6e6f77206265666f72652072656e74656400000000000000006044820152606401610429565b62015180836020015160ff16613b639190614c91565b6040840151613b789063ffffffff1684614cd3565b119392505050565b600060065483613b909190614c91565b9050613b9e61271082614b84565b600254909150610400906001600160a01b038481169116835b6040516001600160a01b0383166024820152604481018290526129c190849063a9059cbb60e01b906064016137a5565b6001600160a01b038116156126cc5760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a6e6f742061207a65726f2061646472657373000000000000006044820152606401610429565b60e082901c613c865760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a696e76616c696420707269636560601b6044820152606401610429565b612710811015610d725760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a696e76616c6964207363616c6560601b6044820152606401610429565b6000613d24826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613da19092919063ffffffff16565b8051909150156129c15780806020019051810190613d429190614848565b6129c15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610429565b6060613db08484600085613dba565b90505b9392505050565b606082471015613e1b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610429565b843b613e695760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610429565b600080866001600160a01b03168587604051613e85919061491b565b60006040518083038185875af1925050503d8060008114613ec2576040519150601f19603f3d011682016040523d82523d6000602084013e613ec7565b606091505b5091509150613ed7828286613ee2565b979650505050505050565b60608315613ef1575081613db3565b825115613f015782518084602001fd5b8160405162461bcd60e51b815260040161042991906149ca565b604051806101c0016040528060008152602001600081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600082601f830112613f9b57600080fd5b81356020613fb0613fab83614b23565b614af3565b80838252828201915082860187848660051b8901011115613fd057600080fd5b60005b85811015613ff8578135613fe681614d89565b84529284019290840190600101613fd3565b5090979650505050505050565b600082601f83011261401657600080fd5b81356020614026613fab83614b23565b80838252828201915082860187848660051b890101111561404657600080fd5b60005b85811015613ff857813561405c81614d9e565b84529284019290840190600101614049565b600082601f83011261407f57600080fd5b8135602061408f613fab83614b23565b80838252828201915082860187848660051b89010111156140af57600080fd5b60005b85811015613ff8576140c382614219565b845292840192908401906001016140b2565b600082601f8301126140e657600080fd5b813560206140f6613fab83614b23565b80838252828201915082860187848660051b890101111561411657600080fd5b6000805b8681101561414257823560028110614130578283fd5b8552938501939185019160010161411a565b509198975050505050505050565b600082601f83011261416157600080fd5b81356020614171613fab83614b23565b80838252828201915082860187848660051b890101111561419157600080fd5b60005b85811015613ff857813584529284019290840190600101614194565b600082601f8301126141c157600080fd5b813560206141d1613fab83614b23565b80838252828201915082860187848660051b89010111156141f157600080fd5b60005b85811015613ff857813561420781614dac565b845292840192908401906001016141f4565b80356001600160e01b03198116811461423157600080fd5b919050565b600082601f83011261424757600080fd5b81356001600160401b0381111561426057614260614d73565b614273601f8201601f1916602001614af3565b81815284602083860101111561428857600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156142b757600080fd5b8151613db381614d89565b6000602082840312156142d457600080fd5b8135613db381614d89565b600080600080600060a086880312156142f757600080fd5b853561430281614d89565b9450602086013561431281614d89565b935060408601356001600160401b038082111561432e57600080fd5b61433a89838a01614150565b9450606088013591508082111561435057600080fd5b61435c89838a01614150565b9350608088013591508082111561437257600080fd5b5061437f88828901614236565b9150509295509295909350565b600080600080608085870312156143a257600080fd5b84356143ad81614d89565b935060208501356143bd81614d89565b92506040850135915060608501356001600160401b038111156143df57600080fd5b6143eb87828801614236565b91505092959194509250565b600080600080600060a0868803121561440f57600080fd5b853561441a81614d89565b9450602086013561442a81614d89565b9350604086013592506060860135915060808601356001600160401b0381111561445357600080fd5b61437f88828901614236565b60008060006060848603121561447457600080fd5b833561447f81614d89565b95602085013595506040909401359392505050565b600080600080608085870312156144aa57600080fd5b84356001600160401b03808211156144c157600080fd5b6144cd888389016140d5565b955060208701359150808211156144e357600080fd5b6144ef88838901613f8a565b9450604087013591508082111561450557600080fd5b61451188838901614150565b9350606087013591508082111561452757600080fd5b506143eb87828801614150565b600080600080600060a0868803121561454c57600080fd5b85356001600160401b038082111561456357600080fd5b61456f89838a016140d5565b9650602088013591508082111561458557600080fd5b61459189838a01613f8a565b955060408801359150808211156145a757600080fd5b6145b389838a01614150565b945060608801359150808211156145c957600080fd5b6145d589838a01614150565b935060808801359150808211156145eb57600080fd5b5061437f88828901614150565b600080600080600080600080610100898b03121561461557600080fd5b88356001600160401b038082111561462c57600080fd5b6146388c838d016140d5565b995060208b013591508082111561464e57600080fd5b61465a8c838d01613f8a565b985060408b013591508082111561467057600080fd5b61467c8c838d01614150565b975060608b013591508082111561469257600080fd5b61469e8c838d01614150565b965060808b01359150808211156146b457600080fd5b6146c08c838d016141b0565b955060a08b01359150808211156146d657600080fd5b6146e28c838d0161406e565b945060c08b01359150808211156146f857600080fd5b6147048c838d016141b0565b935060e08b013591508082111561471a57600080fd5b506147278b828c01614005565b9150509295985092959890939650565b60008060008060008060c0878903121561475057600080fd5b86356001600160401b038082111561476757600080fd5b6147738a838b016140d5565b9750602089013591508082111561478957600080fd5b6147958a838b01613f8a565b965060408901359150808211156147ab57600080fd5b6147b78a838b01614150565b955060608901359150808211156147cd57600080fd5b6147d98a838b01614150565b945060808901359150808211156147ef57600080fd5b6147fb8a838b016141b0565b935060a089013591508082111561481157600080fd5b5061481e89828a01614150565b9150509295509295509295565b60006020828403121561483d57600080fd5b8135613db381614d9e565b60006020828403121561485a57600080fd5b8151613db381614d9e565b60006020828403121561487757600080fd5b613db382614219565b60006020828403121561489257600080fd5b5035919050565b6000602082840312156148ab57600080fd5b8151613db381614dac565b600081518084526020808501945080840160005b838110156148e6578151875295820195908201906001016148ca565b509495945050505050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b6000825161492d818460208701614cea565b9190910192915050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6001600160a01b0385811682528416602082015260a06040820181905260009061499b908301856148b6565b82810360608401526149ad81856148b6565b838103608090940193909352505060008152602001949350505050565b60208152600082518060208401526149e9816040850160208701614cea565b601f01601f19169190910160400192915050565b6020808252601b908201527f52654e46543a3a696e76616c6964206e6674207374616e646172640000000000604082015260600190565b60208082526017908201527f52654e46543a3a6475726174696f6e206973207a65726f000000000000000000604082015260600190565b60208082526019908201527f52654e46543a3a72656e74207072696365206973207a65726f00000000000000604082015260600190565b6020808252600d908201526c14995391950e8e9c185d5cd959609a1b604082015260600190565b60208082526010908201526f2932a7232a1d1d3737ba1030b236b4b760811b604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715614b1b57614b1b614d73565b604052919050565b60006001600160401b03821115614b3c57614b3c614d73565b5060051b60200190565b600061ffff808316818516808303821115614b6357614b63614d31565b01949350505050565b60008219821115614b7f57614b7f614d31565b500190565b600082614ba157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115614be1578160001904821115614bc757614bc7614d31565b80851615614bd457918102915b93841c9390800290614bab565b509250929050565b6000613db38383600082614bff57506001610400565b81614c0c57506000610400565b8160018114614c225760028114614c2c57614c48565b6001915050610400565b60ff841115614c3d57614c3d614d31565b50506001821b610400565b5060208310610133831016604e8410600b8410161715614c6b575081810a610400565b614c758383614ba6565b8060001904821115614c8957614c89614d31565b029392505050565b6000816000190483118215151615614cab57614cab614d31565b500290565b600061ffff83811690831681811015614ccb57614ccb614d31565b039392505050565b600082821015614ce557614ce5614d31565b500390565b60005b83811015614d05578181015183820152602001614ced565b838111156106aa5750506000910152565b6000600019821415614d2a57614d2a614d31565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146126cc57600080fd5b80151581146126cc57600080fd5b60ff811681146126cc57600080fdfea2646970667358221220959aa84dc9612489200535ca02718710f16c79ec7e39a0d76e55dc56ffc1572d64736f6c63430008070033",
  "bytecodeSha1": "ffc744c645f5f126fa30f52e75081dc035936d0b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Registry",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {
        "Address.functionCallWithValue": {
          "188": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "189": [
            7335,
            7342,
            false
          ],
          "190": [
            7476,
            7497,
            false
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {
        "Registry.bundleCall": {
          "141": [
            15797,
            15821,
            true
          ]
        },
        "Registry.distributeClaimPayment": {
          "163": [
            18202,
            18214,
            false
          ]
        },
        "Registry.distributePayments": {
          "155": [
            17123,
            17141,
            true
          ],
          "156": [
            17199,
            17216,
            true
          ],
          "157": [
            17328,
            17340,
            false
          ],
          "158": [
            17547,
            17564,
            false
          ]
        },
        "Registry.ensureIsClaimable": {
          "162": [
            27322,
            27363,
            true
          ]
        },
        "Registry.ensureIsLendable": {
          "176": [
            25440,
            25460,
            true
          ],
          "177": [
            25509,
            25545,
            true
          ],
          "178": [
            25585,
            25610,
            true
          ],
          "179": [
            25656,
            25696,
            true
          ],
          "180": [
            25735,
            25767,
            true
          ]
        },
        "Registry.ensureIsNotNull": {
          "149": [
            24683,
            24711,
            true
          ],
          "150": [
            24754,
            24781,
            true
          ],
          "151": [
            25218,
            25243,
            true
          ],
          "152": [
            25289,
            25310,
            true
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "184": [
            24092,
            24110,
            true
          ]
        },
        "Registry.ensureIsNull": {
          "166": [
            24950,
            24975,
            true
          ],
          "167": [
            25022,
            25043,
            true
          ],
          "181": [
            24405,
            24433,
            true
          ],
          "182": [
            24480,
            24507,
            true
          ]
        },
        "Registry.ensureIsRentable": {
          "168": [
            25941,
            25975,
            true
          ],
          "169": [
            26022,
            26059,
            true
          ],
          "170": [
            26098,
            26120,
            true
          ],
          "171": [
            26166,
            26202,
            true
          ],
          "172": [
            26242,
            26262,
            true
          ],
          "173": [
            26310,
            26355,
            true
          ]
        },
        "Registry.ensureIsReturnable": {
          "153": [
            26539,
            26573,
            true
          ],
          "154": [
            26613,
            26655,
            true
          ]
        },
        "Registry.ensureIsStoppable": {
          "164": [
            26797,
            26831,
            true
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "187": [
            27019,
            27033,
            true
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "186": [
            24218,
            24236,
            true
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "183": [
            27151,
            27164,
            true
          ]
        },
        "Registry.handleLend": {
          "147": [
            6164,
            6169,
            false
          ],
          "148": [
            6179,
            6195,
            true
          ]
        },
        "Registry.handleRent": {
          "144": [
            9152,
            9192,
            true
          ],
          "145": [
            9246,
            9289,
            true
          ],
          "146": [
            9730,
            9743,
            true
          ]
        },
        "Registry.handleStopLend": {
          "142": [
            7859,
            7899,
            true
          ],
          "143": [
            7953,
            7998,
            true
          ]
        },
        "Registry.handleStopRent": {
          "139": [
            11181,
            11221,
            true
          ],
          "140": [
            11275,
            11315,
            true
          ]
        },
        "Registry.isPastReturnDate": {
          "185": [
            27523,
            27549,
            true
          ]
        },
        "Registry.manageWillAutoRenew": {
          "159": [
            13831,
            13870,
            false
          ],
          "160": [
            14722,
            14762,
            false
          ],
          "161": [
            14837,
            14878,
            false
          ]
        },
        "Registry.safeTransfer": {
          "165": [
            18565,
            18618,
            false
          ]
        },
        "Registry.setRentFee": {
          "138": [
            27933,
            27951,
            true
          ]
        },
        "Registry.unpackPrice": {
          "174": [
            23243,
            23255,
            false
          ],
          "175": [
            23307,
            23321,
            false
          ]
        }
      },
      "17": {},
      "18": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "191": [
            3668,
            3689,
            false
          ],
          "192": [
            3752,
            3782,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {
        "Address.functionCall": {
          "132": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "133": [
            4737,
            4818
          ],
          "134": [
            4828,
            4888
          ],
          "135": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "136": [
            7358,
            7375
          ],
          "137": [
            7802,
            7822
          ]
        }
      },
      "12": {},
      "13": {
        "ERC165.supportsInterface": {
          "1": [
            864,
            911
          ]
        }
      },
      "14": {},
      "15": {
        "Registry.bundleCall": {
          "24": [
            15789,
            15840
          ],
          "25": [
            16091,
            16101
          ],
          "26": [
            16140,
            16151
          ],
          "27": [
            16169,
            16187
          ],
          "28": [
            16205,
            16215
          ],
          "29": [
            16249,
            16260
          ]
        },
        "Registry.claimRent": {
          "8": [
            5281,
            5388
          ]
        },
        "Registry.createActionCallData": {
          "23": [
            22400,
            22942
          ]
        },
        "Registry.createLendCallData": {
          "69": [
            20683,
            21229
          ]
        },
        "Registry.createRentCallData": {
          "59": [
            21562,
            22102
          ]
        },
        "Registry.distributeClaimPayment": {
          "91": [
            18230,
            18272
          ],
          "92": [
            18292,
            18361
          ]
        },
        "Registry.distributePayments": {
          "78": [
            17115,
            17181
          ],
          "79": [
            17191,
            17250
          ],
          "80": [
            17425,
            17450
          ],
          "81": [
            17470,
            17533
          ],
          "82": [
            17580,
            17643
          ]
        },
        "Registry.ensureIsClaimable": {
          "90": [
            27314,
            27397
          ]
        },
        "Registry.ensureIsLendable": {
          "112": [
            25432,
            25491
          ],
          "113": [
            25501,
            25567
          ],
          "114": [
            25577,
            25638
          ],
          "115": [
            25648,
            25717
          ],
          "116": [
            25727,
            25797
          ]
        },
        "Registry.ensureIsNotNull": {
          "70": [
            24623,
            24665
          ],
          "71": [
            24675,
            24736
          ],
          "72": [
            24746,
            24811
          ],
          "73": [
            25158,
            25200
          ],
          "74": [
            25210,
            25271
          ],
          "75": [
            25281,
            25339
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "121": [
            24084,
            24134
          ]
        },
        "Registry.ensureIsNull": {
          "99": [
            24893,
            24932
          ],
          "100": [
            24942,
            25004
          ],
          "101": [
            25014,
            25073
          ],
          "117": [
            24348,
            24387
          ],
          "118": [
            24397,
            24462
          ],
          "119": [
            24472,
            24538
          ]
        },
        "Registry.ensureIsRentable": {
          "102": [
            25933,
            26004
          ],
          "103": [
            26014,
            26080
          ],
          "104": [
            26090,
            26148
          ],
          "105": [
            26158,
            26224
          ],
          "106": [
            26234,
            26292
          ],
          "107": [
            26302,
            26400
          ]
        },
        "Registry.ensureIsReturnable": {
          "76": [
            26531,
            26595
          ],
          "77": [
            26605,
            26683
          ]
        },
        "Registry.ensureIsStoppable": {
          "93": [
            26789,
            26853
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "129": [
            26951,
            27001
          ],
          "130": [
            27011,
            27058
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "128": [
            24210,
            24266
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "120": [
            27143,
            27193
          ]
        },
        "Registry.getLending": {
          "5": [
            19383,
            19658
          ]
        },
        "Registry.getRenting": {
          "12": [
            19998,
            20088
          ]
        },
        "Registry.handleClaimRent": {
          "30": [
            12364,
            12388
          ],
          "31": [
            12402,
            12426
          ],
          "32": [
            12440,
            12483
          ],
          "33": [
            12497,
            12537
          ],
          "34": [
            12551,
            12699
          ],
          "35": [
            12713,
            12781
          ],
          "36": [
            12795,
            12829
          ],
          "37": [
            11909,
            11912
          ]
        },
        "Registry.handleLend": {
          "60": [
            5710,
            5733
          ],
          "61": [
            5929,
            5950
          ],
          "62": [
            5964,
            6013
          ],
          "63": [
            6171,
            6238
          ],
          "64": [
            6252,
            6707
          ],
          "65": [
            6721,
            7086
          ],
          "66": [
            7100,
            7111
          ],
          "67": [
            5691,
            5694
          ],
          "68": [
            7131,
            7335
          ]
        },
        "Registry.handleRent": {
          "47": [
            9013,
            9037
          ],
          "48": [
            9051,
            9072
          ],
          "49": [
            9086,
            9130
          ],
          "50": [
            9144,
            9224
          ],
          "51": [
            9238,
            9320
          ],
          "52": [
            9722,
            9773
          ],
          "53": [
            9791,
            9858
          ],
          "54": [
            9886,
            10156
          ],
          "55": [
            10170,
            10241
          ],
          "56": [
            10255,
            10412
          ],
          "57": [
            10426,
            10437
          ],
          "58": [
            8580,
            8583
          ]
        },
        "Registry.handleStopLend": {
          "38": [
            7761,
            7785
          ],
          "39": [
            7799,
            7837
          ],
          "40": [
            7851,
            7931
          ],
          "41": [
            7945,
            8025
          ],
          "42": [
            8039,
            8084
          ],
          "43": [
            8098,
            8183
          ],
          "44": [
            8197,
            8231
          ],
          "45": [
            7534,
            7537
          ],
          "46": [
            8251,
            8459
          ]
        },
        "Registry.handleStopRent": {
          "13": [
            11027,
            11051
          ],
          "14": [
            11065,
            11089
          ],
          "15": [
            11103,
            11159
          ],
          "16": [
            11173,
            11253
          ],
          "17": [
            11267,
            11341
          ],
          "18": [
            11435,
            11494
          ],
          "19": [
            11508,
            11656
          ],
          "20": [
            11670,
            11735
          ],
          "21": [
            11749,
            11783
          ],
          "22": [
            10572,
            10575
          ]
        },
        "Registry.isPastReturnDate": {
          "122": [
            27515,
            27578
          ],
          "123": [
            27588,
            27661
          ]
        },
        "Registry.lend": {
          "11": [
            3508,
            3834
          ]
        },
        "Registry.manageWillAutoRenew": {
          "83": [
            14075,
            14115
          ],
          "84": [
            14184,
            14339
          ],
          "85": [
            14902,
            14981
          ],
          "86": [
            15028,
            15191
          ],
          "87": [
            15227,
            15303
          ],
          "88": [
            15417,
            15496
          ],
          "89": [
            15608,
            15653
          ]
        },
        "Registry.rent": {
          "10": [
            4494,
            4630
          ]
        },
        "Registry.safeTransfer": {
          "97": [
            18634,
            18709
          ],
          "98": [
            18740,
            18829
          ]
        },
        "Registry.setBeneficiary": {
          "4": [
            28109,
            28137
          ]
        },
        "Registry.setPaused": {
          "3": [
            28214,
            28232
          ]
        },
        "Registry.setRentFee": {
          "6": [
            27925,
            27981
          ],
          "7": [
            27991,
            28011
          ]
        },
        "Registry.sliceArr": {
          "94": [
            23683,
            23715
          ],
          "95": [
            23779,
            23813
          ],
          "96": [
            23760,
            23763
          ]
        },
        "Registry.stopLend": {
          "9": [
            4069,
            4181
          ]
        },
        "Registry.stopRent": {
          "2": [
            4902,
            5008
          ]
        },
        "Registry.takeFee": {
          "124": [
            16360,
            16383
          ],
          "125": [
            16393,
            16405
          ],
          "126": [
            16415,
            16451
          ]
        },
        "Registry.unpackPrice": {
          "108": [
            23046,
            23083
          ],
          "109": [
            23271,
            23283
          ],
          "110": [
            23337,
            23351
          ]
        }
      },
      "17": {},
      "18": {},
      "2": {},
      "3": {
        "ERC1155Receiver.supportsInterface": {
          "0": [
            430,
            526
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "131": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "127": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "111": [
            983,
            1079
          ]
        }
      },
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC721Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721Receiver",
    "IRegistry",
    "IResolver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "2113:26128:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:221:3;;;;;;;;;;-1:-1:-1;312:221:3;;;;;:::i;:::-;;:::i;:::-;;;19810:14:21;;19803:22;19785:41;;19773:2;19758:18;312:221:3;;;;;;;;4643:372:15;;;;;;;;;;-1:-1:-1;4643:372:15;;;;;:::i;:::-;;:::i;:::-;;517:200:10;;;;;;;;;;-1:-1:-1;517:200:10;;;;;:::i;:::-;-1:-1:-1;;;517:200:10;;;;;;;;;;-1:-1:-1;;;;;;20681:33:21;;;20663:52;;20651:2;20636:18;517:200:10;20519:202:21;28150:89:15;;;;;;;;;;-1:-1:-1;28150:89:15;;;;;:::i;:::-;;:::i;28024:120::-;;;;;;;;;;-1:-1:-1;28024:120:15;;;;;:::i;:::-;;:::i;19034:631::-;;;;;;;;;;-1:-1:-1;19034:631:15;;;;;:::i;:::-;;:::i;:::-;;;;35926:4:21;35914:17;;;35896:36;;-1:-1:-1;;;;;35968:32:21;;;35963:2;35948:18;;35941:60;36037:17;;;36017:18;;;36010:45;;;;-1:-1:-1;;;;;;36091:33:21;;;36086:2;36071:18;;36064:61;36144:6;36187:15;;;36181:3;36166:19;;36159:44;36240:15;35988:3;36219:19;;36212:44;36293:17;;;;36287:3;36272:19;;36265:46;35883:3;35868:19;19034:631:15;35599:718:21;2398:26:15;;;;;;;;;;-1:-1:-1;2398:26:15;;;;;;;;27856:162;;;;;;;;;;-1:-1:-1;27856:162:15;;;;;:::i;:::-;;:::i;5021:374::-;;;;;;;;;;-1:-1:-1;5021:374:15;;;;;:::i;:::-;;:::i;404:247:2:-;;;;;;;;;;-1:-1:-1;404:247:2;;;;;:::i;:::-;-1:-1:-1;;;404:247:2;;;;;;;;2430:26:15;;;;;;;;;;;;;;;;;;;34898:25:21;;;34886:2;34871:18;2430:26:15;34752:177:21;3847:341:15;;;;;;;;;;-1:-1:-1;3847:341:15;;;;;:::i;:::-;;:::i;4194:443::-;;;;;;:::i;:::-;;:::i;3136:705::-;;;;;;;;;;-1:-1:-1;3136:705:15;;;;;:::i;:::-;;:::i;179:219:2:-;;;;;;;;;;-1:-1:-1;179:219:2;;;;;:::i;:::-;-1:-1:-1;;;179:219:2;;;;;;;;19671:424:15;;;;;;;;;;-1:-1:-1;19671:424:15;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;19152:32:21;;;19134:51;;19233:6;19221:19;;;19216:2;19201:18;;19194:47;19289:4;19277:17;;;19257:18;;;19250:45;;;;19343:10;19331:23;19326:2;19311:18;;19304:51;19121:3;19106:19;19671:424:15;18911:450:21;312:221:3;414:4;-1:-1:-1;;;;;;437:49:3;;-1:-1:-1;;;437:49:3;;:89;;-1:-1:-1;;;;;;;;;;871:40:13;;;490:36:3;430:96;312:221;-1:-1:-1;;312:221:3:o;4643:372:15:-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;;;;;;;;;4902:106:::1;4913:14;4929:78;4950:11;4963:10;4975:7;4984:10;4996;4929:20;:78::i;:::-;4902:10;:106::i;:::-;4643:372:::0;;;;;:::o;28150:89::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;28214:6:::1;:18:::0;;-1:-1:-1;;28214:18:15::1;::::0;::::1;;::::0;;;::::1;::::0;;28150:89::o;28024:120::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;28109:11:::1;:28:::0;;-1:-1:-1;;;;;;28109:28:15::1;-1:-1:-1::0;;;;;28109:28:15;;;::::1;::::0;;;::::1;::::0;;28024:120::o;19034:631::-;19158:5;19165:7;19174:5;19181:6;19189;19197;19205:5;19226:18;19274:10;19286:7;19295:10;19257:49;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19257:49:15;;;;;;;;;19247:60;;19257:49;19247:60;;;;19317:33;19353:20;;;:8;:20;;;;;19410:19;;19247:60;;-1:-1:-1;19353:20:15;19410:19;;;19404:26;;;;;;;:::i;:::-;19444:21;;;;-1:-1:-1;;;;;19444:21:15;;;;;-1:-1:-1;19479:23:15;-1:-1:-1;;;19479:23:15;;;;;-1:-1:-1;;;;19516:22:15;;;;;-1:-1:-1;19552:18:15;-1:-1:-1;;;19552:18:15;;;;;-1:-1:-1;;;;19584:23:15;;;;-1:-1:-1;;;;19627:20:15;;;;;;;-1:-1:-1;19444:21:15;-1:-1:-1;;;;;19034:631:15:o;27856:162::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;27946:5:::1;27933:10;:18;27925:56;;;::::0;-1:-1:-1;;;27925:56:15;;22013:2:21;27925:56:15::1;::::0;::::1;21995:21:21::0;22052:2;22032:18;;;22025:30;22091:27;22071:18;;;22064:55;22136:18;;27925:56:15::1;21811:349:21::0;27925:56:15::1;27991:7;:20:::0;27856:162::o;5021:374::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;5281:107:::1;5292:15;5309:78;5330:11;5343:10;5355:7;5364:10;5376;5309:20;:78::i;3847:341::-:0;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;4069:112:::1;4080:14;4096:84;4117:11:::0;4130:10;4142:7;4151:10;4177:1:::1;4163:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4163:16:15::1;;4096:20;:84::i;4069:112::-;3847:341:::0;;;;:::o;4194:443::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;4494:136:::1;4518:10;4530:90;4549:11;4562:10;4574:7;4583:10;4595:12;4609:10;4530:18;:90::i;4494:136::-;4194:443:::0;;;;;;:::o;3136:705::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;3508:326:::1;3532:10;3556:268;3592:11;3621:10;3649:7;3674:10;3702:15;3735:14;3767:12;3797:13;3556:18;:268::i;3508:326::-;3136:705:::0;;;;;;;;:::o;19671:424::-;19795:7;19804:6;19812:5;19819:6;19841:18;19889:10;19901:7;19910:10;19872:49;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;19872:49:15;;;;;;19862:60;;19872:49;19862:60;;;;19932:33;19968:20;;;:8;:20;;;;;20006:21;-1:-1:-1;;;;;20006:21:15;;;-1:-1:-1;;;20029:18:15;;;;;-1:-1:-1;;;;20049:20:15;;;;;-1:-1:-1;;;;20071:16:15;;;;;;-1:-1:-1;19671:424:15;-1:-1:-1;;;;;19671:424:15:o;10460:1340::-;10549:7;;10532:1262;10562:2;:8;;;10558:1;:12;10532:1262;;;10591:25;10662:2;:13;;;10676:2;:7;;;10662:22;;;;;;;;:::i;:::-;;;;;;;10686:2;:10;;;10697:1;10686:13;;;;;;;;:::i;:::-;;;;;;;10701:2;:12;;;10714:1;10701:15;;;;;;;;:::i;:::-;;;;;;;10645:72;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10635:83;;;;;;10591:127;;10732:25;10803:2;:13;;;10817:2;:7;;;10803:22;;;;;;;;:::i;:::-;;;;;;;10827:2;:10;;;10838:1;10827:13;;;;;;;;:::i;:::-;;;;;;;10842:2;:12;;;10855:1;10842:15;;;;;;;;:::i;:::-;;;;;;;10786:72;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10786:72:15;;;;;;;;;10776:83;;10786:72;10776:83;;;;10873:33;10909:27;;;:8;:27;;;;;10986;;;:8;:27;;;;;;11027:24;;;;;;;;10776:83;;-1:-1:-1;10909:27:15;;11027:24;;10909:27;;10786:72;;11027:24;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;11027:24:15;;;;;-1:-1:-1;;;11027:24:15;;;;;;;;;;-1:-1:-1;;;11027:24:15;;;;;;-1:-1:-1;;;;;;11027:24:15;;;;;-1:-1:-1;;;11027:24:15;;;;;;;;;;-1:-1:-1;;;11027:24:15;;;;;;;-1:-1:-1;;;11027:24:15;;;;;;;;-1:-1:-1;;;11027:24:15;;;;;;;;;:15;:24::i;:::-;11065;;;;;;;;;;-1:-1:-1;;;;;11065:24:15;;;;-1:-1:-1;;;11065:24:15;;;;;;;;-1:-1:-1;;;11065:24:15;;;;;;;;;;;-1:-1:-1;;;11065:24:15;;;;;;;;;;;:15;:24::i;:::-;11103:56;;;;;;;;;;-1:-1:-1;;;;;11103:56:15;;;;-1:-1:-1;;;11103:56:15;;;;;;;;-1:-1:-1;;;11103:56:15;;;;;;;;;;;-1:-1:-1;;;11103:56:15;;;;;;;;;;;11131:10;11143:15;11103:18;:56::i;:::-;11202:19;;;;;11181:40;;;;;;;:::i;:::-;:2;:14;;;11196:1;11181:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;11173:80;;;;-1:-1:-1;;;11173:80:15;;;;;;;:::i;:::-;11297:18;;11275;;-1:-1:-1;;;11297:18:15;;;;;;;-1:-1:-1;;;11275:18:15;;;;:40;;11267:74;;;;-1:-1:-1;;;11267:74:15;;32789:2:21;11267:74:15;;;32771:21:21;32828:2;32808:18;;;32801:30;-1:-1:-1;;;32847:18:21;;;32840:51;32908:18;;11267:74:15;32587:345:21;11267:74:15;11405:16;;11355:29;;11387:34;;-1:-1:-1;;;11405:16:15;;;;11387:15;:34;:::i;:::-;11435:59;;;;;;;;;;;11355:66;;-1:-1:-1;11435:59:15;;11454:7;;11435:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;11435:59:15;;;;;;;;;;;;;;-1:-1:-1;;;11435:59:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;11435:59:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11435:59:15;;;;;;;;;;;;-1:-1:-1;;;11435:59:15;;;;;;;;-1:-1:-1;;;11435:59:15;;;;;;;;-1:-1:-1;;;11435:59:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11435:59:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11435:59:15;;;;;;;;;;;;;11472:21;11435:18;:59::i;:::-;11508:148;11545:7;11554;11563:2;:13;;;11577:2;:7;;;11563:22;;;;;;;;:::i;:::-;;;;;;;11587:2;:14;;;11602:2;:7;;;11587:23;;;;;;;;:::i;:::-;;;;;;;11612:2;:10;;;11623:1;11612:13;;;;;;;;:::i;:::-;;;;;;;11627:2;:12;;;11640:1;11627:15;;;;;;;;:::i;:::-;;;;;;;11508:19;:148::i;:::-;11694:2;:12;;;11707:1;11694:15;;;;;;;;:::i;:::-;;;;;;;11675:60;11718:15;11675:60;;;;;35108:10:21;35096:23;;;;35078:42;;35066:2;35051:18;;34934:192;11675:60:15;;;;;;;;-1:-1:-1;;;11756:27:15;;;;:8;:27;;;;;11749:34;;-1:-1:-1;;;;;;11749:34:15;;;-1:-1:-1;10572:3:15;;;;:::i;:::-;;;;10532:1262;;;;10460:1340;:::o;22115:834::-;22370:18;;:::i;:::-;22405:537;;;;;;;;22434:1;22405:537;;;;22456:1;22405:537;;;;22484:11;22405:537;;;;22521:10;22405:537;;;;22554:7;22405:537;;;;22601:1;-1:-1:-1;;;;;22587:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22587:16:15;-1:-1:-1;22405:537:15;;;;22800:1;22788:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22788:14:15;-1:-1:-1;22405:537:15;;;;22845:1;22832:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22832:15:15;-1:-1:-1;22405:537:15;;;;;;;;;;;;;;;;-1:-1:-1;22701:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22701:14:15;-1:-1:-1;22405:537:15;;;;22755:1;22741:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22741:16:15;-1:-1:-1;22405:537:15;;;;22887:1;22875:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22875:14:15;-1:-1:-1;22405:537:15;;;;22929:1;22918:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22918:13:15;-1:-1:-1;22405:537:15;;22400:542;22115:834;-1:-1:-1;;;;;;22115:834:15:o;15676:591::-;15820:1;15797:2;:13;;;:20;:24;15789:51;;;;-1:-1:-1;;;15789:51:15;;24898:2:21;15789:51:15;;;24880:21:21;24937:2;24917:18;;;24910:30;-1:-1:-1;;;24956:18:21;;;24949:44;25010:18;;15789:51:15;24696:338:21;15789:51:15;15869:2;:13;;;:20;15857:2;:8;;;:32;15850:390;;15953:2;:13;;;15967:2;:8;;;15953:23;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15927:49:15;:2;:13;;;15941:2;:7;;;15927:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15927:49:15;;15926:132;;;;-1:-1:-1;16030:27:15;16002:2;:14;;;16017:2;:8;;;16002:24;;;;;;;;:::i;:::-;;;;;;;:55;;;;;;;;:::i;:::-;;15926:132;15905:325;;;16091:8;;;:10;;;;;;:::i;:::-;;;-1:-1:-1;15850:390:15;;15905:325;16140:11;16148:2;16140:7;:11;;:::i;:::-;16179:8;;;;;16169:18;;;16179:8;16205:10;16179:8;16205:10;:::i;15850:390::-;16249:11;16257:2;16249:7;:11;;:::i;11806:1040::-;11886:7;;11869:971;11899:2;:8;;;11895:1;:12;11869:971;;;11928:25;11999:2;:13;;;12013:2;:7;;;11999:22;;;;;;;;:::i;:::-;;;;;;;12023:2;:10;;;12034:1;12023:13;;;;;;;;:::i;:::-;;;;;;;12038:2;:12;;;12051:1;12038:15;;;;;;;;:::i;:::-;;;;;;;11982:72;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11972:83;;;;;;11928:127;;12069:25;12140:2;:13;;;12154:2;:7;;;12140:22;;;;;;;;:::i;:::-;;;;;;;12164:2;:10;;;12175:1;12164:13;;;;;;;;:::i;:::-;;;;;;;12179:2;:12;;;12192:1;12179:15;;;;;;;;:::i;:::-;;;;;;;12123:72;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12123:72:15;;;;;;;;;12113:83;;12123:72;12113:83;;;;12210:33;12246:27;;;:8;:27;;;;;12323;;;:8;:27;;;;;;12364:24;;;;;;;;12113:83;;-1:-1:-1;12246:27:15;;12364:24;;12246:27;;12123:72;;12364:24;;;;;;;;;;:::i;:::-;12402;;;;;;;;;;-1:-1:-1;;;;;12402:24:15;;;;-1:-1:-1;;;12402:24:15;;;;;;;;-1:-1:-1;;;12402:24:15;;;;;;;;;;;-1:-1:-1;;;12402:24:15;;;;;;;;;;;:15;:24::i;:::-;12440:43;;;;;;;;;;-1:-1:-1;;;;;12440:43:15;;;;-1:-1:-1;;;12440:43:15;;;;;;;;-1:-1:-1;;;12440:43:15;;;;;;;;;;;-1:-1:-1;;;12440:43:15;;;;;;;;;;;12467:15;12440:17;:43::i;:::-;12497:40;;;;;;;;;;;;;;12520:7;;12497:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;12497:40:15;;;;;;;;;;;;;;-1:-1:-1;;;12497:40:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;12497:40:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12497:40:15;;;;;;;;;;;;-1:-1:-1;;;12497:40:15;;;;;;;;-1:-1:-1;;;12497:40:15;;;;;;;;-1:-1:-1;;;12497:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12497:40:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12497:40:15;;;;;;;;;;;;;:22;:40::i;:::-;12551:148;12588:7;12597;12606:2;:13;;;12620:2;:7;;;12606:22;;;;;;;;:::i;:::-;;;;;;;12630:2;:14;;;12645:2;:7;;;12630:23;;;;;;;;:::i;:::-;;;;;;;12655:2;:10;;;12666:1;12655:13;;;;;;;;:::i;:::-;;;;;;;12670:2;:12;;;12683:1;12670:15;;;;;;;;:::i;12551:148::-;12740:2;:12;;;12753:1;12740:15;;;;;;;;:::i;:::-;;;;;;;12718:63;12764:15;12718:63;;;;;35108:10:21;35096:23;;;;35078:42;;35066:2;35051:18;;34934:192;12718:63:15;;;;;;;;-1:-1:-1;;12802:27:15;;;;:8;:27;;;;;12795:34;;-1:-1:-1;;;;;;12795:34:15;;;-1:-1:-1;11909:3:15;;;;:::i;:::-;;;;11869:971;;7348:1118;7476:7;;7465:8;;;;7420:28;;7465:18;;;:::i;:::-;-1:-1:-1;;;;;7451:33:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7451:33:15;-1:-1:-1;7511:7:15;;7420:64;;-1:-1:-1;7494:748:15;7524:2;:8;;;7520:1;:12;7494:748;;;7553:25;7624:2;:13;;;7638:2;:7;;;7624:22;;;;;;;;:::i;:::-;;;;;;;7648:2;:10;;;7659:1;7648:13;;;;;;;;:::i;:::-;;;;;;;7663:2;:12;;;7676:1;7663:15;;;;;;;;:::i;:::-;;;;;;;7607:72;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7607:72:15;;;;;;;;;7597:83;;7607:72;7597:83;;;;7694:23;7720:27;;;:8;:27;;;;;;;7761:24;;;;;;;;7597:83;;-1:-1:-1;7720:27:15;;7761:24;;7720:27;;7607:72;;7761:24;;;;;;;;;;:::i;:::-;7799:38;;;;;;;;;;;;;;7817:7;;7799:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;7799:38:15;;;;;-1:-1:-1;;;7799:38:15;;;;;;;;;;-1:-1:-1;;;7799:38:15;;;;;;-1:-1:-1;;;;;;7799:38:15;;;;;-1:-1:-1;;;7799:38:15;;;;;;;;;;-1:-1:-1;;;7799:38:15;;;;;;;-1:-1:-1;;;7799:38:15;;;;;;;;-1:-1:-1;;;7799:38:15;;;;;;;;;7826:10;7799:17;:38::i;:::-;7880:19;;;;;7859:40;;;;;;;:::i;:::-;:2;:14;;;7874:1;7859:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;7851:80;;;;-1:-1:-1;;;7851:80:15;;;;;;;:::i;:::-;7975:23;;-1:-1:-1;;;7953:18:15;;7975:23;7953:18;;;-1:-1:-1;;;7975:23:15;;;;7953:45;7945:80;;;;-1:-1:-1;;;7945:80:15;;23075:2:21;7945:80:15;;;23057:21:21;23114:2;23094:18;;;23087:30;-1:-1:-1;;;23133:18:21;;;23126:52;23195:18;;7945:80:15;22873:346:21;7945:80:15;8066:18;;8055:7;;-1:-1:-1;;;8066:18:15;;;;;;8039:11;;8051;;:1;:11;:::i;:::-;8039:24;;;;;;;;:::i;:::-;;;;;;:45;;;;;8122:2;:12;;;8135:1;8122:15;;;;;;;;:::i;:::-;;;;;;;8103:80;8146:15;8164:7;:18;;;;;;;;;;;;8103:80;;;;;;35331:10:21;35319:23;;;;35301:42;;35391:6;35379:19;35374:2;35359:18;;35352:47;35289:2;35274:18;;35131:274;8103:80:15;;;;;;;;-1:-1:-1;8204:27:15;;;;:8;:27;;;;;8197:34;7534:3;;;;:::i;:::-;;;;7494:748;;;;8251:208;8277:2;8301:4;8320:10;8344:42;8353:2;:10;;;8365:2;:7;;;8374:2;:8;;;8384:1;8344:8;:42::i;:::-;8422:7;;8431:8;;;;8400:49;;8409:11;;8422:7;8400:8;:49::i;:::-;8251:12;:208::i;8472:1982::-;8557:7;;8540:1908;8570:2;:8;;;8566:1;:12;8540:1908;;;8599:25;8670:2;:13;;;8684:2;:7;;;8670:22;;;;;;;;:::i;:::-;;;;;;;8694:2;:10;;;8705:1;8694:13;;;;;;;;:::i;:::-;;;;;;;8709:2;:12;;;8722:1;8709:15;;;;;;;;:::i;:::-;;;;;;;8653:72;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8643:83;;;;;;8599:127;;8740:25;8795:2;:13;;;8809:2;:7;;;8795:22;;;;;;;;:::i;:::-;;;;;;;8819:2;:10;;;8830:1;8819:13;;;;;;;;:::i;:::-;;;;;;;8834:9;;8778:66;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8778:66:15;;;;;;;;;8768:77;;8778:66;8768:77;;;;8859:33;8895:27;;;:8;:27;;;;;8972;;;:8;:27;;;;;;9013:24;;;;;;;;8768:77;;-1:-1:-1;8895:27:15;;9013:24;;8895:27;;8778:66;;9013:24;;;;;;;;;;:::i;:::-;9051:21;;;;;;;;;;-1:-1:-1;;;;;9051:21:15;;;;-1:-1:-1;;;9051:21:15;;;;;;;;-1:-1:-1;;;9051:21:15;;;;;;;;;;;-1:-1:-1;;;9051:21:15;;;;;;;;;;;:12;:21::i;:::-;9086:44;;;;;;;;;;;;;;9103:7;;9086:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;9086:44:15;;;;;-1:-1:-1;;;9086:44:15;;;;;;;;;;-1:-1:-1;;;9086:44:15;;;;;;-1:-1:-1;;;;;;9086:44:15;;;;;-1:-1:-1;;;9086:44:15;;;;;;;;;;-1:-1:-1;;;9086:44:15;;;;;;;-1:-1:-1;;;9086:44:15;;;;;;;;-1:-1:-1;;;9086:44:15;;;;;;;;;9112:2;9116:1;9119:10;9086:16;:44::i;:::-;9173:19;;;;;9152:40;;;;;;;:::i;:::-;:2;:14;;;9167:1;9152:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;9144:80;;;;-1:-1:-1;;;9144:80:15;;;;;;;:::i;:::-;9266:23;;9246:13;;;;:16;;-1:-1:-1;;;9266:23:15;;;;;;9260:1;;9246:16;;;;;;:::i;:::-;;;;;;;:43;;9238:82;;;;-1:-1:-1;;;9238:82:15;;22367:2:21;9238:82:15;;;22349:21:21;22406:2;22386:18;;;22379:30;22445:28;22425:18;;;22418:56;22491:18;;9238:82:15;22165:350:21;9238:82:15;9363:20;;9334;9425:8;;:40;;-1:-1:-1;;;9425:40:15;;-1:-1:-1;;;9363:20:15;;;;;9425:40;;;35552:36:21;;;9363:20:15;-1:-1:-1;;;;;9425:8:15;;;;:24;;35525:18:21;;9425:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9398:68;;9480:16;9499:12;-1:-1:-1;;;;;9499:21:15;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9480:42;;;-1:-1:-1;9554:13:15;9570:14;9480:42;9570:2;:14;:::i;:::-;9674:22;;9554:30;;-1:-1:-1;9602:17:15;;9662:42;;-1:-1:-1;;;9674:22:15;;;;9554:30;9662:11;:42::i;:::-;9641:2;:15;;;9657:1;9641:18;;;;;;;;:::i;:::-;;;;;;;9622:37;;:2;:13;;;9636:1;9622:16;;;;;;;;:::i;:::-;;;;;;;:37;;;;:::i;:::-;:82;;;;:::i;:::-;9602:102;;9742:1;9730:9;:13;9722:51;;;;-1:-1:-1;;;9722:51:15;;;;;;;:::i;:::-;9791:67;-1:-1:-1;;;;;9791:29:15;;9821:10;9841:4;9848:9;9791:29;:67::i;:::-;9536:337;;9916:240;;;;;;;;9975:10;-1:-1:-1;;;;;9916:240:15;;;;;10072:2;:15;;;10088:1;10072:18;;;;;;;;:::i;:::-;;;;;;;9916:240;;;;;;10125:15;9916:240;;;;;;10023:2;:13;;;10037:1;10023:16;;;;;;;;:::i;:::-;;;;;;;;;;;;9916:240;;;;;;;9886:27;;;;:8;:27;;;;;;;:270;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9886:270:15;-1:-1:-1;;;;9886:270:15;;;;-1:-1:-1;;;9886:270:15;;;;;-1:-1:-1;;;;9886:270:15;;;;-1:-1:-1;;;9886:270:15;-1:-1:-1;;;;;;9886:270:15;;;-1:-1:-1;;;;;9886:270:15;;;;;;;;;;;;;;;;;;;;;;10224:13;;;;:16;;10238:1;;10224:16;;;;;;:::i;:::-;;;;;;;;;;;;10170:27;;;;:8;:27;;;;;;;:71;;:43;;:71;;10224:16;;-1:-1:-1;;;10170:71:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10321:9;;10304:2;:12;;;10317:1;10304:15;;;;;;;;:::i;:::-;;;;;;;10292:10;-1:-1:-1;;;;;10260:152:15;;10339:2;:13;;;10353:1;10339:16;;;;;;;;:::i;:::-;;;;;;;10358:2;:15;;;10374:1;10358:18;;;;;;;;:::i;:::-;;;;;;;;;;;;10378:16;;10260:152;;;34619:6:21;34607:19;;;34589:38;;34675:4;34663:17;;;34643:18;;;34636:45;;;;-1:-1:-1;;;10378:16:15;;;;;34697:18:21;;;34690:51;34577:2;34562:18;10260:152:15;;;;;;;10426:9;:11;;;:9;:11;;;:::i;:::-;;;;;;8585:1863;;;;;;;8580:3;;;;;:::i;:::-;;;;8540:1908;;21242:867;21532:18;;:::i;:::-;21567:535;;;;;;;;21596:1;21567:535;;;;21618:1;21567:535;;;;21646:11;21567:535;;;;21683:10;21567:535;;;;21716:7;21567:535;;;;21763:1;-1:-1:-1;;;;;21749:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21749:16:15;-1:-1:-1;21567:535:15;;;;21960:1;21948:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21948:14:15;-1:-1:-1;21567:535:15;;;;22005:1;21992:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21992:15:15;-1:-1:-1;21567:535:15;;;;;;;;;;;21825:16;;-1:-1:-1;21825:16:15;;;;;;;;21567:535;;;;;;;;;;;;;;;;;;;;;22035:14;;;;;;;;;;21567:535;;;;22078:13;;;;;;;;;;;-1:-1:-1;21567:535:15;;;;;21562:540;;-1:-1:-1;;;21242:867:15:o;5583:1759::-;5668:7;;5651:1471;5681:2;:8;;;5677:1;:12;5651:1471;;;5710:23;5727:2;5731:1;5710:16;:23::i;:::-;5747:18;5795:2;:13;;;5809:2;:7;;;5795:22;;;;;;;;:::i;:::-;;;;;;;5819:2;:10;;;5830:1;5819:13;;;;;;;;:::i;:::-;;;;;;;5834:9;;5778:66;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5778:66:15;;;;;;;;;5768:77;;5778:66;5768:77;;;;5859:33;5895:20;;;:8;:20;;;;;;;5929:21;;;;;;;;5768:77;;-1:-1:-1;5895:20:15;;5929:21;;5895:20;;5778:66;;5929:21;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;5929:21:15;;;;;-1:-1:-1;;;5929:21:15;;;;;;;;;;-1:-1:-1;;;5929:21:15;;;;;;-1:-1:-1;;;;;;5929:21:15;;;;;-1:-1:-1;;;5929:21:15;;;;;;;;;;-1:-1:-1;;;5929:21:15;;;;;;;-1:-1:-1;;;5929:21:15;;;;;;;;-1:-1:-1;;;5929:21:15;;;;;;;;;:12;:21::i;:::-;5964:49;5993:2;:15;;;6009:1;5993:18;;;;;;;;:::i;:::-;;;;;;;5964:22;:49::i;:::-;6027:10;;6040:2;:14;;;6055:1;6040:17;;;;;;;;:::i;:::-;;;;;;;:47;;;;;;;;:::i;:::-;;6027:60;;6101:18;6129:2;:13;;;6143:1;6129:16;;;;;;;;:::i;:::-;;;;;;;6101:45;;6164:5;6160:78;;;6179:11;:16;;6194:1;6179:16;6171:67;;;;-1:-1:-1;;;6171:67:15;;29926:2:21;6171:67:15;;;29908:21:21;29965:2;29945:18;;;29938:30;30004:34;29984:18;;;29977:62;-1:-1:-1;;;30055:18:21;;;30048:36;30101:19;;6171:67:15;29724:402:21;6171:67:15;6275:432;;;;;;;;6324:2;:14;;;6339:1;6324:17;;;;;;;;:::i;:::-;;;;;;;6275:432;;;;;;;;:::i;:::-;;;;;6382:10;-1:-1:-1;;;;;6275:432:15;;;;;6428:2;:18;;;6447:1;6428:21;;;;;;;;:::i;:::-;;;;;;;6275:432;;;;;;6483:2;:17;;;6501:1;6483:20;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6275:432:15;;;;;;6533:11;6275:432;;;;;;6579:11;6275:432;;;;;;6622:2;:15;;;6638:1;6622:18;;;;;;;;:::i;:::-;;;;;;;6275:432;;;;;;6673:2;:16;;;6690:1;6673:19;;;;;;;;:::i;:::-;;;;;;;;;;;;6275:432;;;;;6252:20;;;;:8;:20;;;;;;:455;;;;:20;;-1:-1:-1;;6252:455:15;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6252:455:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6252:455:15;;;;-1:-1:-1;;;;;6252:455:15;;;;;;;-1:-1:-1;;;;6252:455:15;;;;;-1:-1:-1;;;6252:455:15;;;;;;-1:-1:-1;;;;6252:455:15;-1:-1:-1;;;6252:455:15;;;;;;;;-1:-1:-1;;;;6252:455:15;;;;;-1:-1:-1;;;6252:455:15;;;;;;-1:-1:-1;;;;6252:455:15;-1:-1:-1;;;6252:455:15;;;;;;;;-1:-1:-1;;;;6252:455:15;;-1:-1:-1;;;6252:455:15;;;;;;;;;-1:-1:-1;;;;;6252:455:15;-1:-1:-1;;;6252:455:15;;;;;;;;;;6849:10;;;:13;;6860:1;;6849:13;;;;;;:::i;:::-;;;;;;;6809:2;:13;;;6823:2;:7;;;6809:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6726:360:15;6781:10;-1:-1:-1;;;;;6726:360:15;;6758:5;6880:9;;6907:2;:18;;;6926:1;6907:21;;;;;;;;:::i;:::-;;;;;;;6946:2;:17;;;6964:1;6946:20;;;;;;;;:::i;:::-;;;;;;;6984:11;7013:2;:15;;;7029:1;7013:18;;;;;;;;:::i;:::-;;;;;;;7049:2;:16;;;7066:1;7049:19;;;;;;;;:::i;:::-;;;;;;;;;;;;6726:360;;;20153:14:21;;20146:22;20128:41;;20185:18;;;20178:34;;;;20260:4;20248:17;;;20228:18;;;20221:45;-1:-1:-1;;;;;;20302:33:21;;;20297:2;20282:18;;20275:61;20385:6;20373:19;20367:3;20352:19;;20345:48;20430:17;20424:3;20409:19;;20402:46;20492:14;20485:22;20479:3;20464:19;;20457:51;20115:3;20100:19;6726:360:15;;;;;;;7100:9;:11;;;:9;:11;;;:::i;:::-;;;;;;5696:1426;;;;5691:3;;;;;:::i;:::-;;;;5651:1471;;;;7131:204;7157:2;7173:10;7205:4;7224:42;7233:2;:10;;;7245:2;:7;;;7254:2;:8;;;7264:1;7224:8;:42::i;:::-;7280:45;7289:2;:13;;;7304:2;:7;;;7313:2;:8;;;7323:1;7280:8;:45::i;7131:204::-;5583:1759;:::o;20283:953::-;20653:18;;:::i;:::-;20688:541;;;;;;;;20717:1;20688:541;;;;20739:1;20688:541;;;;20767:11;20688:541;;;;20804:10;20688:541;;;;20837:7;20688:541;;;;20870:10;20688:541;;;;21077:15;20688:541;;;;21122:14;20688:541;;;;20919:1;-1:-1:-1;;;;;20905:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20905:16:15;-1:-1:-1;20688:541:15;;;;20960:1;20946:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20946:16:15;-1:-1:-1;20688:541:15;;;;21002:1;20990:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20990:14:15;-1:-1:-1;20688:541:15;;;;21044:1;21030:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21030:16:15;;20688:541;;;;21164:12;20688:541;;;;21205:13;20688:541;;;20683:546;;20283:953;;;;;;;;;;:::o;24551:267::-;24623:42;24643:7;:21;;;24623:19;:42::i;:::-;24683:23;;;;:28;;24675:61;;;;-1:-1:-1;;;24675:61:15;;21664:2:21;24675:61:15;;;21646:21:21;21703:2;21683:18;;;21676:30;-1:-1:-1;;;21722:18:21;;;21715:50;21782:18;;24675:61:15;21462:344:21;24675:61:15;24754:22;;;;-1:-1:-1;;;;;;24754:27:15;24746:65;;;;-1:-1:-1;;;24746:65:15;;;;;;;:::i;25086:260::-;25178:21;;25158:42;;:19;:42::i;:::-;25218:20;;;;:25;;25210:61;;;;-1:-1:-1;;;25210:61:15;;;;;;;:::i;:::-;25289:16;;;;:21;;25281:58;;;;-1:-1:-1;;;25281:58:15;;29573:2:21;25281:58:15;;;29555:21:21;29612:2;29592:18;;;29585:30;29651:26;29631:18;;;29624:54;29695:18;;25281:58:15;29371:348:21;26413:277:15;26564:9;-1:-1:-1;;;;;26539:34:15;:7;:21;;;-1:-1:-1;;;;;26539:34:15;;26531:64;;;;-1:-1:-1;;;26531:64:15;;30691:2:21;26531:64:15;;;30673:21:21;30730:2;30710:18;;;30703:30;-1:-1:-1;;;30749:18:21;;;30742:47;30806:18;;26531:64:15;30489:341:21;26531:64:15;26614:41;26631:7;26640:14;26614:16;:41::i;:::-;26613:42;26605:78;;;;-1:-1:-1;;;26605:78:15;;27059:2:21;26605:78:15;;;27041:21:21;27098:2;27078:18;;;27071:30;27137:25;27117:18;;;27110:53;27180:18;;26605:78:15;26857:347:21;26605:78:15;26413:277;;;:::o;16464:1196::-;16668:20;;;;16639;16726:8;;:40;;-1:-1:-1;;;16726:40:15;;35582:4:21;35570:17;;16726:40:15;;;35552:36:21;-1:-1:-1;;;;;16726:8:15;;;;:24;;35525:18:21;;16726:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16699:68;;16777:16;16796:12;-1:-1:-1;;;;;16796:21:15;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16777:42;;;-1:-1:-1;16829:13:15;16845:14;16777:42;16845:2;:14;:::i;:::-;16829:30;;16869:17;16910:42;16922:7;:22;;;16946:5;16910:11;:42::i;:::-;16889:7;:18;;;:63;;;;;;:::i;:::-;16869:83;;16962:22;16999:7;:20;;;16987:32;;:9;:32;;;;:::i;:::-;16962:57;-1:-1:-1;17029:21:15;2504:5;17054:33;17078:9;17054:21;:33;:::i;:::-;17053:52;;;;:::i;:::-;17029:76;;17140:1;17123:14;:18;17115:66;;;;-1:-1:-1;;;17115:66:15;;28111:2:21;17115:66:15;;;28093:21:21;28150:2;28130:18;;;28123:30;28189:34;28169:18;;;28162:62;-1:-1:-1;;;28240:18:21;;;28233:33;28283:19;;17115:66:15;27909:399:21;17115:66:15;17215:1;17199:13;:17;17191:59;;;;-1:-1:-1;;;17191:59:15;;30333:2:21;17191:59:15;;;30315:21:21;30372:2;30352:18;;;30345:30;30411:31;30391:18;;;30384:59;30460:18;;17191:59:15;30131:353:21;17191:59:15;17260:21;17284:30;17301:13;17284:14;:30;:::i;:::-;17260:54;;17328:7;;17339:1;17328:12;17324:137;;17356:16;17375:36;17383:13;17398:12;17375:7;:36::i;:::-;17356:55;-1:-1:-1;17425:25:15;17356:55;17425:25;;:::i;:::-;;;17342:119;17324:137;17496:21;;;;17470:63;;-1:-1:-1;;;;;17470:25:15;;;17519:13;17470:25;:63::i;:::-;17547:17;;17543:111;;17606:21;;17580:63;;-1:-1:-1;;;;;17580:25:15;;;17629:13;17580:25;:63::i;:::-;16629:1031;;;;;;;;16464:1196;;;:::o;13034:2636::-;13300:21;;-1:-1:-1;;;13300:21:15;;;;13296:2368;;13852:18;;13831;;-1:-1:-1;;;13852:18:15;;;;;;;-1:-1:-1;;;13831:18:15;;;;:39;13827:1491;;;14097:18;;14075:40;;14097:18;-1:-1:-1;;;14097:18:15;;;;;;14075:7;;:18;;:40;;14097:18;;-1:-1:-1;;;14075:40:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;14258:21;;14298:18;;14184:155;;-1:-1:-1;;;14184:155:15;;-1:-1:-1;;;;;14184:37:15;;;;-1:-1:-1;14184:37:15;;:155;;14251:4;;14258:21;;;;;14281:7;;-1:-1:-1;;;14298:18:15;;;;;;;14184:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13827:1491;;;14744:18;;14722;;-1:-1:-1;;;14722:18:15;;14744;14722;;;-1:-1:-1;;;14744:18:15;;;;14722:40;14718:600;;;14852:26;14837:11;:41;;;;;;;;:::i;:::-;;14833:377;;;14950:21;;14902:79;;-1:-1:-1;;;14902:79:15;;14943:4;14902:79;;;16857:34:21;14950:21:15;;;;-1:-1:-1;;;;;14950:21:15;;;16907:18:21;;;16900:43;16959:18;;;16952:34;;;14902:32:15;;;;;16792:18:21;;14902:79:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14833:377;;;15106:21;;15146:18;;15028:163;;-1:-1:-1;;;15028:163:15;;-1:-1:-1;;;;;15028:37:15;;;;;;:163;;15099:4;;15106:21;;;;;;;;15129:7;;-1:-1:-1;;;15146:18:15;;;;;15028:163;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14833:377;15234:8;:69;15270:10;15282:7;15291:9;15253:48;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15253:48:15;;;;;;;;;15243:59;;15253:48;15243:59;;;;15234:69;;;;;;;;;;-1:-1:-1;15234:69:15;;;15227:76;14718:600;15477:18;;15422:74;;;15459:15;35331:10:21;35319:23;35301:42;;-1:-1:-1;;;15477:18:15;;;;;35374:2:21;35359:18;;35352:47;15441:9:15;;15422:74;;35274:18:21;15422:74:15;;;;;;;13296:2368;;;15635:18;;15608:45;;15635:18;-1:-1:-1;;;15635:18:15;;;;;;15608:7;;:23;;:45;;15635:18;;-1:-1:-1;;;15608:45:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13034:2636;;;;;;:::o;27206:198::-;27322:41;27339:7;27348:14;27322:16;:41::i;:::-;27314:83;;;;-1:-1:-1;;;27314:83:15;;28861:2:21;27314:83:15;;;28843:21:21;28900:2;28880:18;;;28873:30;28939:31;28919:18;;;28912:59;28988:18;;27314:83:15;28659:353:21;17666:702:15;17813:20;;;;17784;17871:8;;:40;;-1:-1:-1;;;17871:40:15;;35582:4:21;35570:17;;17871:40:15;;;35552:36:21;-1:-1:-1;;;;;17871:8:15;;;;:24;;35525:18:21;;17871:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17844:68;;17922:16;17941:12;-1:-1:-1;;;;;17941:21:15;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17922:42;;;-1:-1:-1;17974:13:15;17990:14;17922:42;17990:2;:14;:::i;:::-;17974:30;;18014:17;18055:42;18067:7;:22;;;18091:5;18055:11;:42::i;:::-;18034:7;:18;;;:63;;;;;;:::i;:::-;18014:83;;18107:16;18138:7;:20;;;18126:32;;:9;:32;;;;:::i;:::-;18107:51;;18168:16;18202:7;;18213:1;18202:12;18198:85;;18241:31;18249:8;18259:12;18241:7;:31::i;:::-;18230:42;;18198:85;18318:21;;;;18292:69;;18341:19;18352:8;18341;:19;:::i;:::-;-1:-1:-1;;;;;18292:25:15;;;:69;:25;:69::i;:::-;17774:594;;;;;;;17666:702;;:::o;26696:164::-;26822:9;-1:-1:-1;;;;;26797:34:15;:7;:21;;;-1:-1:-1;;;;;26797:34:15;;26789:64;;;;-1:-1:-1;;;26789:64:15;;28515:2:21;26789:64:15;;;28497:21:21;28554:2;28534:18;;;28527:30;-1:-1:-1;;;28573:18:21;;;28566:47;28630:18;;26789:64:15;28313:341:21;23514:316:15;23649:18;23701:13;23708:6;23701:4;:13;:::i;:::-;-1:-1:-1;;;;;23687:28:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23687:28:15;-1:-1:-1;23683:32:15;-1:-1:-1;23742:6:15;23725:99;23754:4;23750:1;:8;23725:99;;;23795:3;23799:13;23803:9;23799:1;:13;:::i;:::-;23795:18;;;;;;;;:::i;:::-;;;;;;;23779:1;23785:6;23781:1;:10;;;;:::i;:::-;23779:13;;;;;;;;:::i;:::-;;;;;;;;;;:34;23760:3;;;;:::i;:::-;;;;23725:99;;;;23514:316;;;;;;:::o;18374:472::-;18592:26;18565:14;;;;18580:7;;18565:23;;;;;;;;:::i;:::-;;;;;;;:53;;;;;;;;:::i;:::-;;18561:279;;;18642:13;;;;18656:7;;18642:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;18634:44:15;;18679:4;18685:2;18689;:10;;;18700:2;:7;;;18689:19;;;;;;;;:::i;:::-;;;;;;;;;;;18634:75;;-1:-1:-1;;;;;;18634:75:15;;;;;;;-1:-1:-1;;;;;16875:15:21;;;18634:75:15;;;16857:34:21;16927:15;;;;16907:18;;;16900:43;16959:18;;;16952:34;16792:18;;18634:75:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18561:279;;;18749:13;;;;18763:7;;18749:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;18740:54:15;;18795:4;18801:2;18805:7;18814:10;18740:89;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24824:256;24910:21;;24893:39;;:16;:39::i;:::-;24950:20;;;;:25;;;24942:62;;;;-1:-1:-1;;;24942:62:15;;22722:2:21;24942:62:15;;;22704:21:21;22761:2;22741:18;;;22734:30;-1:-1:-1;;;22780:18:21;;;22773:54;22844:18;;24942:62:15;22520:348:21;24942:62:15;25022:16;;;;:21;;;25014:59;;;;-1:-1:-1;;;25014:59:15;;25997:2:21;25014:59:15;;;25979:21:21;26036:2;26016:18;;;26009:30;26075:27;26055:18;;;26048:55;26120:18;;25014:59:15;25795:349:21;25810:597:15;25954:7;:21;;;-1:-1:-1;;;;;25941:34:15;:9;-1:-1:-1;;;;;25941:34:15;;;25933:71;;;;-1:-1:-1;;;25933:71:15;;31037:2:21;25933:71:15;;;31019:21:21;31076:2;31056:18;;;31049:30;31115:26;31095:18;;;31088:54;31159:18;;25933:71:15;30835:348:21;25933:71:15;26044:15;26022:37;;:2;:15;;;26038:1;26022:18;;;;;;;;:::i;:::-;;;;;;;:37;;;;26014:66;;;;-1:-1:-1;;;26014:66:15;;32102:2:21;26014:66:15;;;32084:21:21;32141:2;32121:18;;;32114:30;-1:-1:-1;;;32160:18:21;;;32153:46;32216:18;;26014:66:15;31900:340:21;26014:66:15;26119:1;26098:2;:15;;;26114:1;26098:18;;;;;;;;:::i;:::-;;;;;;;:22;;;26090:58;;;;-1:-1:-1;;;26090:58:15;;;;;;;:::i;:::-;26186:16;26166:36;;:2;:13;;;26180:1;26166:16;;;;;;;;:::i;:::-;;;;;;;:36;;26158:66;;;;-1:-1:-1;;;26158:66:15;;27411:2:21;26158:66:15;;;27393:21:21;27450:2;27430:18;;;27423:30;-1:-1:-1;;;27469:18:21;;;27462:47;27526:18;;26158:66:15;27209:341:21;26158:66:15;26261:1;26242:2;:13;;;26256:1;26242:16;;;;;;;;:::i;:::-;;;;;;;:20;26234:58;;;;-1:-1:-1;;;26234:58:15;;29219:2:21;26234:58:15;;;29201:21:21;29258:2;29238:18;;;29231:30;29297:27;29277:18;;;29270:55;29342:18;;26234:58:15;29017:349:21;26234:58:15;26332:7;:23;;;26310:45;;:2;:15;;;26326:1;26310:18;;;;;;;;:::i;:::-;;;;;;;:45;;;;26302:98;;;;-1:-1:-1;;;26302:98:15;;23426:2:21;26302:98:15;;;23408:21:21;23465:2;23445:18;;;23438:30;23504:34;23484:18;;;23477:62;-1:-1:-1;;;23555:18:21;;;23548:38;23603:19;;26302:98:15;23224:404:21;22955:553:15;23027:7;23046:37;23070:5;23077;23046:23;:37::i;:::-;23108:21;;;;23156:27;;;;;;23093:12;23216:13;23224:5;23216;:13;:::i;:::-;23193:36;;23251:4;23243:5;:12;;;23239:55;;;23279:4;23271:12;;23239:55;23317:4;23307:7;:14;;;23303:59;;;23347:4;23337:14;;23303:59;23371:9;23383:13;23391:5;23383:13;;;;:::i;:::-;23371:25;-1:-1:-1;23406:9:15;23418:22;23428:12;23418:22;;;;:::i;:::-;23406:34;-1:-1:-1;23450:17:15;23470:5;23406:34;23470:1;:5;:::i;:::-;23450:25;22955:553;-1:-1:-1;;;;;;;;;22955:553:15:o;845:241:7:-;1010:68;;-1:-1:-1;;;;;16875:15:21;;;1010:68:7;;;16857:34:21;16927:15;;16907:18;;;16900:43;16959:18;;;16952:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;16792:18:21;;1010:68:7;;;;-1:-1:-1;;1010:68:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:68:7;-1:-1:-1;;;;;;1010:68:7;;;;;;;;;;983:19;:96::i;25352:452:15:-;25459:1;25440:2;:13;;;25454:1;25440:16;;;;;;;;:::i;:::-;;;;;;;:20;25432:59;;;;-1:-1:-1;;;25432:59:15;;24543:2:21;25432:59:15;;;24525:21:21;24582:2;24562:18;;;24555:30;24621:28;24601:18;;;24594:56;24667:18;;25432:59:15;24341:350:21;25432:59:15;25529:16;25509:36;;:2;:13;;;25523:1;25509:16;;;;;;;;:::i;:::-;;;;;;;:36;;25501:66;;;;-1:-1:-1;;;25501:66:15;;27411:2:21;25501:66:15;;;27393:21:21;27450:2;27430:18;;;27423:30;-1:-1:-1;;;27469:18:21;;;27462:47;27526:18;;25501:66:15;27209:341:21;25501:66:15;25609:1;25585:2;:18;;;25604:1;25585:21;;;;;;;;:::i;:::-;;;;;;;:25;;;25577:61;;;;-1:-1:-1;;;25577:61:15;;;;;;;:::i;:::-;25681:15;25656:40;;:2;:18;;;25675:1;25656:21;;;;;;;;:::i;:::-;;;;;;;:40;;;;25648:69;;;;-1:-1:-1;;;25648:69:15;;32102:2:21;25648:69:15;;;32084:21:21;32141:2;32121:18;;;32114:30;-1:-1:-1;;;32160:18:21;;;32153:46;32216:18;;25648:69:15;31900:340:21;25648:69:15;25766:1;25742:2;:17;;;25760:1;25742:20;;;;;;;;:::i;:::-;;;;;;;25735:28;;:32;;;25727:70;;;;-1:-1:-1;;;25727:70:15;;;;;;;:::i;24279:266::-;24348:39;24365:7;:21;;;24348:16;:39::i;:::-;24405:23;;;;:28;;;24397:65;;;;-1:-1:-1;;;24397:65:15;;22722:2:21;24397:65:15;;;22704:21:21;22761:2;22741:18;;;22734:30;-1:-1:-1;;;22780:18:21;;;22773:54;22844:18;;24397:65:15;22520:348:21;24397:65:15;24480:22;;;;-1:-1:-1;;;;;;24480:27:15;;24472:66;;;;-1:-1:-1;;;24472:66:15;;24188:2:21;24472:66:15;;;24170:21:21;24227:2;24207:18;;;24200:30;24266:28;24246:18;;;24239:56;24312:18;;24472:66:15;23986:350:21;27071:129:15;27163:1;27151:9;:13;;;27143:50;;;;-1:-1:-1;;;27143:50:15;;33899:2:21;27143:50:15;;;33881:21:21;33938:2;33918:18;;;33911:30;33977:26;33957:18;;;33950:54;34021:18;;27143:50:15;33697:348:21;24018:123:15;-1:-1:-1;;;;;24092:18:15;;24084:50;;;;-1:-1:-1;;;24084:50:15;;21316:2:21;24084:50:15;;;21298:21:21;21355:2;21335:18;;;21328:30;-1:-1:-1;;;21374:18:21;;;21367:49;21433:18;;24084:50:15;21114:343:21;27410:258:15;27499:4;27533:7;:16;;;27523:26;;:7;:26;27515:63;;;;-1:-1:-1;;;27515:63:15;;23835:2:21;27515:63:15;;;23817:21:21;23874:2;23854:18;;;23847:30;23913:26;23893:18;;;23886:54;23957:18;;27515:63:15;23633:348:21;27515:63:15;2504:5;27624:7;:20;;;:37;;;;;;:::i;:::-;27605:16;;;;27595:26;;;;:7;:26;:::i;:::-;:66;;27410:258;-1:-1:-1;;;27410:258:15:o;16273:185::-;16337:11;16376:7;;16366;:17;;;;:::i;:::-;16360:23;-1:-1:-1;16393:12:15;16400:5;16360:23;16393:12;:::i;:::-;16434:11;;16393:12;;-1:-1:-1;16415:36:15;;-1:-1:-1;;;;;16415:18:15;;;;16434:11;16393:12;634:205:7;773:58;;-1:-1:-1;;;;;19558:32:21;;773:58:7;;;19540:51:21;19607:18;;;19600:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;19513:18:21;;773:58:7;19366:274:21;24147:126:15;-1:-1:-1;;;;;24218:18:15;;;24210:56;;;;-1:-1:-1;;;24210:56:15;;31390:2:21;24210:56:15;;;31372:21:21;31429:2;31409:18;;;31402:30;31468:27;31448:18;;;31441:55;31513:18;;24210:56:15;31188:349:21;26866:199:15;26959:13;;;;26951:50;;;;-1:-1:-1;;;26951:50:15;;25241:2:21;26951:50:15;;;25223:21:21;25280:2;25260:18;;;25253:30;-1:-1:-1;;;25299:18:21;;;25292:50;25359:18;;26951:50:15;25039:344:21;26951:50:15;27028:5;27019;:14;;27011:47;;;;-1:-1:-1;;;27011:47:15;;33550:2:21;27011:47:15;;;33532:21:21;33589:2;33569:18;;;33562:30;-1:-1:-1;;;33608:18:21;;;33601:50;33668:18;;27011:47:15;33348:344:21;3140:706:7;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;33139:2:21;3744:85:7;;;33121:21:21;33178:2;33158:18;;;33151:30;33217:34;33197:18;;;33190:62;-1:-1:-1;;;33268:18:21;;;33261:40;33318:19;;3744:85:7;32937:406:21;3461:223:11;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:11;;25590:2:21;4737:81:11;;;25572:21:21;25629:2;25609:18;;;25602:30;25668:34;25648:18;;;25641:62;-1:-1:-1;;;25719:18:21;;;25712:36;25765:19;;4737:81:11;25388:402:21;4737:81:11;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:11;;31744:2:21;4828:60:11;;;31726:21:21;31783:2;31763:18;;;31756:30;31822:31;31802:18;;;31795:59;31871:18;;4828:60:11;31542:353:21;4828:60:11;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:11;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:11:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:11;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:11;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:748:21:-;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;495:238;509:2;506:1;503:9;495:238;;;580:3;567:17;597:31;622:5;597:31;:::i;:::-;641:18;;679:12;;;;711;;;;527:1;520:9;495:238;;;-1:-1:-1;751:5:21;;14:748;-1:-1:-1;;;;;;;14:748:21:o;767:742::-;818:5;871:3;864:4;856:6;852:17;848:27;838:55;;889:1;886;879:12;838:55;925:6;912:20;951:4;975:60;991:43;1031:2;991:43;:::i;975:60::-;1057:3;1081:2;1076:3;1069:15;1109:2;1104:3;1100:12;1093:19;;1144:2;1136:6;1132:15;1196:3;1191:2;1185;1182:1;1178:10;1170:6;1166:23;1162:32;1159:41;1156:61;;;1213:1;1210;1203:12;1156:61;1235:1;1245:235;1259:2;1256:1;1253:9;1245:235;;;1330:3;1317:17;1347:28;1369:5;1347:28;:::i;:::-;1388:18;;1426:12;;;;1458;;;;1277:1;1270:9;1245:235;;1514:677;1567:5;1620:3;1613:4;1605:6;1601:17;1597:27;1587:55;;1638:1;1635;1628:12;1587:55;1674:6;1661:20;1700:4;1724:60;1740:43;1780:2;1740:43;:::i;1724:60::-;1806:3;1830:2;1825:3;1818:15;1858:2;1853:3;1849:12;1842:19;;1893:2;1885:6;1881:15;1945:3;1940:2;1934;1931:1;1927:10;1919:6;1915:23;1911:32;1908:41;1905:61;;;1962:1;1959;1952:12;1905:61;1984:1;1994:168;2008:2;2005:1;2002:9;1994:168;;;2065:22;2083:3;2065:22;:::i;:::-;2053:35;;2108:12;;;;2140;;;;2026:1;2019:9;1994:168;;2196:793;2259:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:55;;2330:1;2327;2320:12;2279:55;2366:6;2353:20;2392:4;2416:60;2432:43;2472:2;2432:43;:::i;2416:60::-;2498:3;2522:2;2517:3;2510:15;2550:2;2545:3;2541:12;2534:19;;2585:2;2577:6;2573:15;2637:3;2632:2;2626;2623:1;2619:10;2611:6;2607:23;2603:32;2600:41;2597:61;;;2654:1;2651;2644:12;2597:61;2676:1;2697;2707:253;2723:2;2718:3;2715:11;2707:253;;;2798:3;2785:17;2835:1;2828:5;2825:12;2815:40;;2851:1;2848;2841:12;2815:40;2868:18;;2906:12;;;;2938;;;;2745:1;2736:11;2707:253;;;-1:-1:-1;2978:5:21;;2196:793;-1:-1:-1;;;;;;;;2196:793:21:o;2994:673::-;3048:5;3101:3;3094:4;3086:6;3082:17;3078:27;3068:55;;3119:1;3116;3109:12;3068:55;3155:6;3142:20;3181:4;3205:60;3221:43;3261:2;3221:43;:::i;3205:60::-;3287:3;3311:2;3306:3;3299:15;3339:2;3334:3;3330:12;3323:19;;3374:2;3366:6;3362:15;3426:3;3421:2;3415;3412:1;3408:10;3400:6;3396:23;3392:32;3389:41;3386:61;;;3443:1;3440;3433:12;3386:61;3465:1;3475:163;3489:2;3486:1;3483:9;3475:163;;;3546:17;;3534:30;;3584:12;;;;3616;;;;3507:1;3500:9;3475:163;;3672:744;3724:5;3777:3;3770:4;3762:6;3758:17;3754:27;3744:55;;3795:1;3792;3785:12;3744:55;3831:6;3818:20;3857:4;3881:60;3897:43;3937:2;3897:43;:::i;3881:60::-;3963:3;3987:2;3982:3;3975:15;4015:2;4010:3;4006:12;3999:19;;4050:2;4042:6;4038:15;4102:3;4097:2;4091;4088:1;4084:10;4076:6;4072:23;4068:32;4065:41;4062:61;;;4119:1;4116;4109:12;4062:61;4141:1;4151:236;4165:2;4162:1;4159:9;4151:236;;;4236:3;4223:17;4253:29;4276:5;4253:29;:::i;:::-;4295:18;;4333:12;;;;4365;;;;4183:1;4176:9;4151:236;;4421:173;4488:20;;-1:-1:-1;;;;;;4537:32:21;;4527:43;;4517:71;;4584:1;4581;4574:12;4517:71;4421:173;;;:::o;4599:530::-;4641:5;4694:3;4687:4;4679:6;4675:17;4671:27;4661:55;;4712:1;4709;4702:12;4661:55;4748:6;4735:20;-1:-1:-1;;;;;4770:2:21;4767:26;4764:52;;;4796:18;;:::i;:::-;4840:55;4883:2;4864:13;;-1:-1:-1;;4860:27:21;4889:4;4856:38;4840:55;:::i;:::-;4920:2;4911:7;4904:19;4966:3;4959:4;4954:2;4946:6;4942:15;4938:26;4935:35;4932:55;;;4983:1;4980;4973:12;4932:55;5048:2;5041:4;5033:6;5029:17;5022:4;5013:7;5009:18;4996:55;5096:1;5071:16;;;5089:4;5067:27;5060:38;;;;5075:7;4599:530;-1:-1:-1;;;4599:530:21:o;5134:251::-;5204:6;5257:2;5245:9;5236:7;5232:23;5228:32;5225:52;;;5273:1;5270;5263:12;5225:52;5305:9;5299:16;5324:31;5349:5;5324:31;:::i;5390:255::-;5457:6;5510:2;5498:9;5489:7;5485:23;5481:32;5478:52;;;5526:1;5523;5516:12;5478:52;5565:9;5552:23;5584:31;5609:5;5584:31;:::i;5650:1071::-;5804:6;5812;5820;5828;5836;5889:3;5877:9;5868:7;5864:23;5860:33;5857:53;;;5906:1;5903;5896:12;5857:53;5945:9;5932:23;5964:31;5989:5;5964:31;:::i;:::-;6014:5;-1:-1:-1;6071:2:21;6056:18;;6043:32;6084:33;6043:32;6084:33;:::i;:::-;6136:7;-1:-1:-1;6194:2:21;6179:18;;6166:32;-1:-1:-1;;;;;6247:14:21;;;6244:34;;;6274:1;6271;6264:12;6244:34;6297:61;6350:7;6341:6;6330:9;6326:22;6297:61;:::i;:::-;6287:71;;6411:2;6400:9;6396:18;6383:32;6367:48;;6440:2;6430:8;6427:16;6424:36;;;6456:1;6453;6446:12;6424:36;6479:63;6534:7;6523:8;6512:9;6508:24;6479:63;:::i;:::-;6469:73;;6595:3;6584:9;6580:19;6567:33;6551:49;;6625:2;6615:8;6612:16;6609:36;;;6641:1;6638;6631:12;6609:36;;6664:51;6707:7;6696:8;6685:9;6681:24;6664:51;:::i;:::-;6654:61;;;5650:1071;;;;;;;;:::o;6726:665::-;6821:6;6829;6837;6845;6898:3;6886:9;6877:7;6873:23;6869:33;6866:53;;;6915:1;6912;6905:12;6866:53;6954:9;6941:23;6973:31;6998:5;6973:31;:::i;:::-;7023:5;-1:-1:-1;7080:2:21;7065:18;;7052:32;7093:33;7052:32;7093:33;:::i;:::-;7145:7;-1:-1:-1;7199:2:21;7184:18;;7171:32;;-1:-1:-1;7254:2:21;7239:18;;7226:32;-1:-1:-1;;;;;7270:30:21;;7267:50;;;7313:1;7310;7303:12;7267:50;7336:49;7377:7;7368:6;7357:9;7353:22;7336:49;:::i;:::-;7326:59;;;6726:665;;;;;;;:::o;7396:734::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7641:9;7628:23;7660:31;7685:5;7660:31;:::i;:::-;7710:5;-1:-1:-1;7767:2:21;7752:18;;7739:32;7780:33;7739:32;7780:33;:::i;:::-;7832:7;-1:-1:-1;7886:2:21;7871:18;;7858:32;;-1:-1:-1;7937:2:21;7922:18;;7909:32;;-1:-1:-1;7992:3:21;7977:19;;7964:33;-1:-1:-1;;;;;8009:30:21;;8006:50;;;8052:1;8049;8042:12;8006:50;8075:49;8116:7;8107:6;8096:9;8092:22;8075:49;:::i;8135:383::-;8212:6;8220;8228;8281:2;8269:9;8260:7;8256:23;8252:32;8249:52;;;8297:1;8294;8287:12;8249:52;8336:9;8323:23;8355:31;8380:5;8355:31;:::i;:::-;8405:5;8457:2;8442:18;;8429:32;;-1:-1:-1;8508:2:21;8493:18;;;8480:32;;8135:383;-1:-1:-1;;;8135:383:21:o;8523:1073::-;8725:6;8733;8741;8749;8802:3;8790:9;8781:7;8777:23;8773:33;8770:53;;;8819:1;8816;8809:12;8770:53;8859:9;8846:23;-1:-1:-1;;;;;8929:2:21;8921:6;8918:14;8915:34;;;8945:1;8942;8935:12;8915:34;8968:70;9030:7;9021:6;9010:9;9006:22;8968:70;:::i;:::-;8958:80;;9091:2;9080:9;9076:18;9063:32;9047:48;;9120:2;9110:8;9107:16;9104:36;;;9136:1;9133;9126:12;9104:36;9159:63;9214:7;9203:8;9192:9;9188:24;9159:63;:::i;:::-;9149:73;;9275:2;9264:9;9260:18;9247:32;9231:48;;9304:2;9294:8;9291:16;9288:36;;;9320:1;9317;9310:12;9288:36;9343:63;9398:7;9387:8;9376:9;9372:24;9343:63;:::i;:::-;9333:73;;9459:2;9448:9;9444:18;9431:32;9415:48;;9488:2;9478:8;9475:16;9472:36;;;9504:1;9501;9494:12;9472:36;;9527:63;9582:7;9571:8;9560:9;9556:24;9527:63;:::i;9601:1300::-;9837:6;9845;9853;9861;9869;9922:3;9910:9;9901:7;9897:23;9893:33;9890:53;;;9939:1;9936;9929:12;9890:53;9979:9;9966:23;-1:-1:-1;;;;;10049:2:21;10041:6;10038:14;10035:34;;;10065:1;10062;10055:12;10035:34;10088:70;10150:7;10141:6;10130:9;10126:22;10088:70;:::i;:::-;10078:80;;10211:2;10200:9;10196:18;10183:32;10167:48;;10240:2;10230:8;10227:16;10224:36;;;10256:1;10253;10246:12;10224:36;10279:63;10334:7;10323:8;10312:9;10308:24;10279:63;:::i;:::-;10269:73;;10395:2;10384:9;10380:18;10367:32;10351:48;;10424:2;10414:8;10411:16;10408:36;;;10440:1;10437;10430:12;10408:36;10463:63;10518:7;10507:8;10496:9;10492:24;10463:63;:::i;:::-;10453:73;;10579:2;10568:9;10564:18;10551:32;10535:48;;10608:2;10598:8;10595:16;10592:36;;;10624:1;10621;10614:12;10592:36;10647:63;10702:7;10691:8;10680:9;10676:24;10647:63;:::i;:::-;10637:73;;10763:3;10752:9;10748:19;10735:33;10719:49;;10793:2;10783:8;10780:16;10777:36;;;10809:1;10806;10799:12;10777:36;;10832:63;10887:7;10876:8;10865:9;10861:24;10832:63;:::i;10906:1965::-;11236:6;11244;11252;11260;11268;11276;11284;11292;11345:3;11333:9;11324:7;11320:23;11316:33;11313:53;;;11362:1;11359;11352:12;11313:53;11402:9;11389:23;-1:-1:-1;;;;;11472:2:21;11464:6;11461:14;11458:34;;;11488:1;11485;11478:12;11458:34;11511:70;11573:7;11564:6;11553:9;11549:22;11511:70;:::i;:::-;11501:80;;11634:2;11623:9;11619:18;11606:32;11590:48;;11663:2;11653:8;11650:16;11647:36;;;11679:1;11676;11669:12;11647:36;11702:63;11757:7;11746:8;11735:9;11731:24;11702:63;:::i;:::-;11692:73;;11818:2;11807:9;11803:18;11790:32;11774:48;;11847:2;11837:8;11834:16;11831:36;;;11863:1;11860;11853:12;11831:36;11886:63;11941:7;11930:8;11919:9;11915:24;11886:63;:::i;:::-;11876:73;;12002:2;11991:9;11987:18;11974:32;11958:48;;12031:2;12021:8;12018:16;12015:36;;;12047:1;12044;12037:12;12015:36;12070:63;12125:7;12114:8;12103:9;12099:24;12070:63;:::i;:::-;12060:73;;12186:3;12175:9;12171:19;12158:33;12142:49;;12216:2;12206:8;12203:16;12200:36;;;12232:1;12229;12222:12;12200:36;12255:61;12308:7;12297:8;12286:9;12282:24;12255:61;:::i;:::-;12245:71;;12369:3;12358:9;12354:19;12341:33;12325:49;;12399:2;12389:8;12386:16;12383:36;;;12415:1;12412;12405:12;12383:36;12438:62;12492:7;12481:8;12470:9;12466:24;12438:62;:::i;:::-;12428:72;;12553:3;12542:9;12538:19;12525:33;12509:49;;12583:2;12573:8;12570:16;12567:36;;;12599:1;12596;12589:12;12567:36;12622:61;12675:7;12664:8;12653:9;12649:24;12622:61;:::i;:::-;12612:71;;12736:3;12725:9;12721:19;12708:33;12692:49;;12766:2;12756:8;12753:16;12750:36;;;12782:1;12779;12772:12;12750:36;;12805:60;12857:7;12846:8;12835:9;12831:24;12805:60;:::i;:::-;12795:70;;;10906:1965;;;;;;;;;;;:::o;12876:1523::-;13144:6;13152;13160;13168;13176;13184;13237:3;13225:9;13216:7;13212:23;13208:33;13205:53;;;13254:1;13251;13244:12;13205:53;13294:9;13281:23;-1:-1:-1;;;;;13364:2:21;13356:6;13353:14;13350:34;;;13380:1;13377;13370:12;13350:34;13403:70;13465:7;13456:6;13445:9;13441:22;13403:70;:::i;:::-;13393:80;;13526:2;13515:9;13511:18;13498:32;13482:48;;13555:2;13545:8;13542:16;13539:36;;;13571:1;13568;13561:12;13539:36;13594:63;13649:7;13638:8;13627:9;13623:24;13594:63;:::i;:::-;13584:73;;13710:2;13699:9;13695:18;13682:32;13666:48;;13739:2;13729:8;13726:16;13723:36;;;13755:1;13752;13745:12;13723:36;13778:63;13833:7;13822:8;13811:9;13807:24;13778:63;:::i;:::-;13768:73;;13894:2;13883:9;13879:18;13866:32;13850:48;;13923:2;13913:8;13910:16;13907:36;;;13939:1;13936;13929:12;13907:36;13962:63;14017:7;14006:8;13995:9;13991:24;13962:63;:::i;:::-;13952:73;;14078:3;14067:9;14063:19;14050:33;14034:49;;14108:2;14098:8;14095:16;14092:36;;;14124:1;14121;14114:12;14092:36;14147:61;14200:7;14189:8;14178:9;14174:24;14147:61;:::i;:::-;14137:71;;14261:3;14250:9;14246:19;14233:33;14217:49;;14291:2;14281:8;14278:16;14275:36;;;14307:1;14304;14297:12;14275:36;;14330:63;14385:7;14374:8;14363:9;14359:24;14330:63;:::i;:::-;14320:73;;;12876:1523;;;;;;;;:::o;14404:241::-;14460:6;14513:2;14501:9;14492:7;14488:23;14484:32;14481:52;;;14529:1;14526;14519:12;14481:52;14568:9;14555:23;14587:28;14609:5;14587:28;:::i;14650:245::-;14717:6;14770:2;14758:9;14749:7;14745:23;14741:32;14738:52;;;14786:1;14783;14776:12;14738:52;14818:9;14812:16;14837:28;14859:5;14837:28;:::i;14900:184::-;14958:6;15011:2;14999:9;14990:7;14986:23;14982:32;14979:52;;;15027:1;15024;15017:12;14979:52;15050:28;15068:9;15050:28;:::i;15089:180::-;15148:6;15201:2;15189:9;15180:7;15176:23;15172:32;15169:52;;;15217:1;15214;15207:12;15169:52;-1:-1:-1;15240:23:21;;15089:180;-1:-1:-1;15089:180:21:o;15274:247::-;15342:6;15395:2;15383:9;15374:7;15370:23;15366:32;15363:52;;;15411:1;15408;15401:12;15363:52;15443:9;15437:16;15462:29;15485:5;15462:29;:::i;15526:435::-;15579:3;15617:5;15611:12;15644:6;15639:3;15632:19;15670:4;15699:2;15694:3;15690:12;15683:19;;15736:2;15729:5;15725:14;15757:1;15767:169;15781:6;15778:1;15775:13;15767:169;;;15842:13;;15830:26;;15876:12;;;;15911:15;;;;15803:1;15796:9;15767:169;;;-1:-1:-1;15952:3:21;;15526:435;-1:-1:-1;;;;;15526:435:21:o;15966:359::-;16171:2;16167:15;;;;-1:-1:-1;;16163:53:21;16151:66;;16242:2;16233:12;;16226:28;;;;16279:2;16270:12;;16263:28;16316:2;16307:12;;15966:359::o;16330:274::-;16459:3;16497:6;16491:13;16513:53;16559:6;16554:3;16547:4;16539:6;16535:17;16513:53;:::i;:::-;16582:16;;;;;16330:274;-1:-1:-1;;16330:274:21:o;16997:635::-;-1:-1:-1;;;;;17356:15:21;;;17338:34;;17408:15;;;;17403:2;17388:18;;17381:43;17455:2;17440:18;;17433:34;17498:2;17483:18;;17476:34;;;;17318:3;17541;17526:19;;17519:32;;;17281:4;17567:19;;;17560:30;17622:3;17607:19;;16997:635::o;17637:889::-;-1:-1:-1;;;;;18088:15:21;;;18070:34;;18140:15;;18135:2;18120:18;;18113:43;18050:3;18187:2;18172:18;;18165:31;;;18013:4;;18219:57;;18256:19;;18248:6;18219:57;:::i;:::-;18324:9;18316:6;18312:22;18307:2;18296:9;18292:18;18285:50;18358:44;18395:6;18387;18358:44;:::i;:::-;18439:22;;;18433:3;18418:19;;;18411:51;;;;-1:-1:-1;;18486:1:21;18471:17;;18517:2;18505:15;;17637:889;-1:-1:-1;;;;17637:889:21:o;20726:383::-;20875:2;20864:9;20857:21;20838:4;20907:6;20901:13;20950:6;20945:2;20934:9;20930:18;20923:34;20966:66;21025:6;21020:2;21009:9;21005:18;21000:2;20992:6;20988:15;20966:66;:::i;:::-;21093:2;21072:15;-1:-1:-1;;21068:29:21;21053:45;;;;21100:2;21049:54;;20726:383;-1:-1:-1;;20726:383:21:o;26149:351::-;26351:2;26333:21;;;26390:2;26370:18;;;26363:30;26429:29;26424:2;26409:18;;26402:57;26491:2;26476:18;;26149:351::o;26505:347::-;26707:2;26689:21;;;26746:2;26726:18;;;26719:30;26785:25;26780:2;26765:18;;26758:53;26843:2;26828:18;;26505:347::o;27555:349::-;27757:2;27739:21;;;27796:2;27776:18;;;27769:30;27835:27;27830:2;27815:18;;27808:55;27895:2;27880:18;;27555:349::o;32245:337::-;32447:2;32429:21;;;32486:2;32466:18;;;32459:30;-1:-1:-1;;;32520:2:21;32505:18;;32498:43;32573:2;32558:18;;32245:337::o;34050:340::-;34252:2;34234:21;;;34291:2;34271:18;;;34264:30;-1:-1:-1;;;34325:2:21;34310:18;;34303:46;34381:2;34366:18;;34050:340::o;36322:275::-;36393:2;36387:9;36458:2;36439:13;;-1:-1:-1;;36435:27:21;36423:40;;-1:-1:-1;;;;;36478:34:21;;36514:22;;;36475:62;36472:88;;;36540:18;;:::i;:::-;36576:2;36569:22;36322:275;;-1:-1:-1;36322:275:21:o;36602:183::-;36662:4;-1:-1:-1;;;;;36687:6:21;36684:30;36681:56;;;36717:18;;:::i;:::-;-1:-1:-1;36762:1:21;36758:14;36774:4;36754:25;;36602:183::o;36790:224::-;36829:3;36857:6;36890:2;36887:1;36883:10;36920:2;36917:1;36913:10;36951:3;36947:2;36943:12;36938:3;36935:21;36932:47;;;36959:18;;:::i;:::-;36995:13;;36790:224;-1:-1:-1;;;;36790:224:21:o;37019:128::-;37059:3;37090:1;37086:6;37083:1;37080:13;37077:39;;;37096:18;;:::i;:::-;-1:-1:-1;37132:9:21;;37019:128::o;37152:217::-;37192:1;37218;37208:132;;37262:10;37257:3;37253:20;37250:1;37243:31;37297:4;37294:1;37287:15;37325:4;37322:1;37315:15;37208:132;-1:-1:-1;37354:9:21;;37152:217::o;37374:422::-;37463:1;37506:5;37463:1;37520:270;37541:7;37531:8;37528:21;37520:270;;;37600:4;37596:1;37592:6;37588:17;37582:4;37579:27;37576:53;;;37609:18;;:::i;:::-;37659:7;37649:8;37645:22;37642:55;;;37679:16;;;;37642:55;37758:22;;;;37718:15;;;;37520:270;;;37524:3;37374:422;;;;;:::o;37801:131::-;37861:5;37890:36;37917:8;37911:4;37986:5;38016:8;38006:80;;-1:-1:-1;38057:1:21;38071:5;;38006:80;38105:4;38095:76;;-1:-1:-1;38142:1:21;38156:5;;38095:76;38187:4;38205:1;38200:59;;;;38273:1;38268:130;;;;38180:218;;38200:59;38230:1;38221:10;;38244:5;;;38268:130;38305:3;38295:8;38292:17;38289:43;;;38312:18;;:::i;:::-;-1:-1:-1;;38368:1:21;38354:16;;38383:5;;38180:218;;38482:2;38472:8;38469:16;38463:3;38457:4;38454:13;38450:36;38444:2;38434:8;38431:16;38426:2;38420:4;38417:12;38413:35;38410:77;38407:159;;;-1:-1:-1;38519:19:21;;;38551:5;;38407:159;38598:34;38623:8;38617:4;38598:34;:::i;:::-;38668:6;38664:1;38660:6;38656:19;38647:7;38644:32;38641:58;;;38679:18;;:::i;:::-;38717:20;;37937:806;-1:-1:-1;;;37937:806:21:o;38748:168::-;38788:7;38854:1;38850;38846:6;38842:14;38839:1;38836:21;38831:1;38824:9;38817:17;38813:45;38810:71;;;38861:18;;:::i;:::-;-1:-1:-1;38901:9:21;;38748:168::o;38921:217::-;38960:4;38989:6;39045:10;;;;39015;;39067:12;;;39064:38;;;39082:18;;:::i;:::-;39119:13;;38921:217;-1:-1:-1;;;38921:217:21:o;39143:125::-;39183:4;39211:1;39208;39205:8;39202:34;;;39216:18;;:::i;:::-;-1:-1:-1;39253:9:21;;39143:125::o;39273:258::-;39345:1;39355:113;39369:6;39366:1;39363:13;39355:113;;;39445:11;;;39439:18;39426:11;;;39419:39;39391:2;39384:10;39355:113;;;39486:6;39483:1;39480:13;39477:48;;;-1:-1:-1;;39521:1:21;39503:16;;39496:27;39273:258::o;39536:135::-;39575:3;-1:-1:-1;;39596:17:21;;39593:43;;;39616:18;;:::i;:::-;-1:-1:-1;39663:1:21;39652:13;;39536:135::o;39676:127::-;39737:10;39732:3;39728:20;39725:1;39718:31;39768:4;39765:1;39758:15;39792:4;39789:1;39782:15;39808:127;39869:10;39864:3;39860:20;39857:1;39850:31;39900:4;39897:1;39890:15;39924:4;39921:1;39914:15;39940:127;40001:10;39996:3;39992:20;39989:1;39982:31;40032:4;40029:1;40022:15;40056:4;40053:1;40046:15;40072:127;40133:10;40128:3;40124:20;40121:1;40114:31;40164:4;40161:1;40154:15;40188:4;40185:1;40178:15;40204:131;-1:-1:-1;;;;;40279:31:21;;40269:42;;40259:70;;40325:1;40322;40315:12;40340:118;40426:5;40419:13;40412:21;40405:5;40402:32;40392:60;;40448:1;40445;40438:12;40463:114;40547:4;40540:5;40536:16;40529:5;40526:27;40516:55;;40567:1;40564;40557:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "offset": [
    2113,
    28241
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x937821A1 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCBE55E54 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCBE55E54 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xDC68A142 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xFE46B7CD EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x937821A1 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xBF2B23EA EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xC9C40183 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C31F710 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1C31F710 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x296C21B7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x76774EA3 EQ PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x14B5685C EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x193 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x4865 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x438C JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x482B JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x42C2 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x445F JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP9 DUP10 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP9 ADD MSTORE SWAP5 DUP8 AND SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x118 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x4880 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x42DF JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x4494 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x4737 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x45F8 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x43F7 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x445F JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x124 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x400 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A PUSH2 0x7B0 PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4FB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x539 JUMPI PUSH2 0x539 PUSH2 0x4D47 JUMP JUMPDEST SWAP1 SLOAD SWAP1 SWAP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP4 DIV AND SWAP13 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV DUP2 AND SWAP13 POP PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL SWAP12 POP PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP5 DIV DUP2 AND SWAP12 POP PUSH1 0x1 PUSH1 0xE0 SHL DUP5 DIV AND SWAP10 POP PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A66656520657863656564732031303070637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AA2 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x1062 PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AA2 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x149F PUSH2 0x445 DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH2 0xD76 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AA2 JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0x185B PUSH2 0x445 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1FB1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4AA2 JUMP JUMPDEST PUSH2 0x728 PUSH2 0x20E2 PUSH2 0x445 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x26CF JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x74F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP10 PUSH1 0x1 PUSH1 0xC8 SHL DUP3 DIV PUSH2 0xFFFF AND SWAP10 POP PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH1 0xFF AND SWAP9 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x7DB JUMPI PUSH2 0x7DB PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F9 JUMPI PUSH2 0x7F9 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x818 JUMPI PUSH2 0x818 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x832 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x866 JUMPI PUSH2 0x866 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x884 JUMPI PUSH2 0x884 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A3 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8BD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH2 0x100 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x9AB SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x917 JUMPI PUSH2 0x917 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x928 JUMPI PUSH2 0x928 PUSH2 0x4D47 JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL DUP3 DIV PUSH1 0xE0 SWAP1 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP5 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL DUP4 DIV DUP3 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH2 0x2808 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA00 SWAP1 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA57 SWAP1 CALLER TIMESTAMP PUSH2 0x2911 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA6D JUMPI PUSH2 0xA6D PUSH2 0x4D47 JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xA83 JUMPI PUSH2 0xA83 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA9C PUSH2 0x4D47 JUMP JUMPDEST EQ PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x49FD JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB36 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x4CD3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE DUP5 SLOAD SWAP2 SWAP3 POP PUSH2 0xC53 SWAP2 DUP6 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB63 JUMPI PUSH2 0xB63 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB74 JUMPI PUSH2 0xB74 PUSH2 0x4D47 JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP1 DUP6 DIV DUP3 AND PUSH1 0x40 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP8 DIV PUSH1 0xE0 SWAP1 DUP2 SHL SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP10 DIV DUP2 AND PUSH1 0x80 DUP1 DUP13 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP11 DIV DUP3 AND PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL DUP11 DIV DUP8 AND PUSH1 0xC0 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP10 DIV DUP7 AND ISZERO ISZERO SWAP3 SWAP1 SWAP10 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP7 DUP8 ADD DUP3 MSTORE DUP12 SLOAD SWAP6 DUP7 AND DUP8 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP7 DIV SWAP1 SWAP4 AND SWAP4 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP5 DIV AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 PUSH2 0x29C6 JUMP JUMPDEST PUSH2 0xCDE DUP4 DUP4 DUP10 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xC72 JUMPI PUSH2 0xC72 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0x80 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0xCB2 JUMPI PUSH2 0xCB2 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH2 0x100 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0xCD1 JUMPI PUSH2 0xCD1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C4F JUMP JUMPDEST DUP7 PUSH2 0x120 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xCF5 JUMPI PUSH2 0xCF5 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD38 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0xD6A DUP2 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD7E PUSH2 0x3F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xDC3 JUMPI PUSH2 0xDC3 PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDEC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE1D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEBE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEEF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF20 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD MLOAD GT PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x52654E46543A3A6E6F206E667473 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD MLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH2 0x1055 JUMPI DUP1 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF9D JUMPI PUSH2 0xF9D PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xFC8 JUMPI PUSH2 0xFC8 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1018 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xFFD JUMPI PUSH2 0xFFD PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1016 PUSH2 0x4D47 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1035 JUMPI PUSH1 0x20 DUP2 ADD DUP1 MLOAD SWAP1 PUSH2 0x102D DUP3 PUSH2 0x4D16 JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x1042 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 PUSH2 0x102D DUP3 PUSH2 0x4D16 JUMP JUMPDEST PUSH2 0xD72 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x108D JUMPI PUSH2 0x108D PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10AB JUMPI PUSH2 0x10AB PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10CA JUMPI PUSH2 0x10CA PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1118 JUMPI PUSH2 0x1118 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1136 JUMPI PUSH2 0x1136 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x116F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH2 0x100 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x11C9 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x917 JUMPI PUSH2 0x917 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x121E SWAP1 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1274 SWAP1 TIMESTAMP PUSH2 0x2F4F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x138E SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x129F JUMPI PUSH2 0x129F PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12B0 JUMPI PUSH2 0x12B0 PUSH2 0x4D47 JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP1 DUP6 DIV DUP3 AND PUSH1 0x40 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP8 DIV PUSH1 0xE0 SWAP1 DUP2 SHL SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP10 DIV DUP2 AND PUSH1 0x80 DUP1 DUP13 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP11 DIV DUP3 AND PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL DUP11 DIV DUP8 AND PUSH1 0xC0 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP10 DIV DUP7 AND ISZERO ISZERO SWAP3 SWAP1 SWAP10 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP7 DUP8 ADD DUP3 MSTORE DUP11 SLOAD SWAP6 DUP7 AND DUP8 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP7 DIV SWAP1 SWAP4 AND SWAP4 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP5 DIV AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x2FA5 JUMP JUMPDEST PUSH2 0x140C DUP3 DUP3 DUP9 PUSH1 0x60 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x13AD JUMPI PUSH2 0x13AD PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD DUP11 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x13CF JUMPI PUSH2 0x13CF PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 PUSH1 0x80 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x13ED JUMPI PUSH2 0x13ED PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0xCD1 JUMPI PUSH2 0xCD1 PUSH2 0x4D5D JUMP JUMPDEST DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1466 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0x1497 DUP2 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1065 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x14B2 SWAP2 PUSH2 0x4CD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x14C9 JUMPI PUSH2 0x14C9 PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14F2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x1823 JUMPI PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1521 JUMPI PUSH2 0x1521 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x153F JUMPI PUSH2 0x153F PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x155E JUMPI PUSH2 0x155E PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1578 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH2 0x100 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH2 0x15C9 SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x917 JUMPI PUSH2 0x917 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH2 0x1689 SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F4 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1605 JUMPI PUSH2 0x1605 PUSH2 0x4D47 JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL DUP3 DIV PUSH1 0xE0 SWAP1 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP5 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL DUP4 DIV DUP3 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE CALLER PUSH2 0x3136 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x169F JUMPI PUSH2 0x169F PUSH2 0x4D47 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x16B5 JUMPI PUSH2 0x16B5 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16CE JUMPI PUSH2 0x16CE PUSH2 0x4D47 JUMP JUMPDEST EQ PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x49FD JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV AND EQ PUSH2 0x1749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995391950E8E9858DD1A5D995B1E481C995B9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 DUP6 SWAP1 PUSH2 0x1766 SWAP1 DUP7 PUSH2 0x4CD3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1776 JUMPI PUSH2 0x1776 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x100 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1799 JUMPI PUSH2 0x1799 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0xFC33A7C95EE492CB6247BD90B28BBE1F459D8F80F3DC65F934CD020CF1E83EFB TIMESTAMP DUP4 PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x40 MLOAD PUSH2 0x17F9 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH2 0xFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 PUSH2 0x181B DUP2 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14F9 JUMP JUMPDEST POP PUSH2 0xD72 DUP3 ADDRESS CALLER PUSH2 0x1843 DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x318F JUMP JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x1856 SWAP2 DUP9 SWAP2 DUP2 PUSH2 0x318F JUMP JUMPDEST PUSH2 0x324E JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1886 JUMPI PUSH2 0x1886 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x18A4 JUMPI PUSH2 0x18A4 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x18C3 JUMPI PUSH2 0x18C3 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1911 JUMPI PUSH2 0x1911 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x192F JUMPI PUSH2 0x192F PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x194C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH2 0x100 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x19A6 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x917 JUMPI PUSH2 0x917 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x19FB SWAP1 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x1ABD SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A26 JUMPI PUSH2 0x1A26 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A37 JUMPI PUSH2 0x1A37 PUSH2 0x4D47 JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL DUP3 DIV PUSH1 0xE0 SWAP1 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP5 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL DUP4 DIV DUP3 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE DUP8 DUP8 CALLER PUSH2 0x3477 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD3 PUSH2 0x4D47 JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1AE9 JUMPI PUSH2 0x1AE9 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B02 JUMPI PUSH2 0x1B02 PUSH2 0x4D47 JUMP JUMPDEST EQ PUSH2 0x1B1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x49FD JUMP JUMPDEST DUP2 SLOAD PUSH2 0x160 DUP8 ADD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x1B46 JUMPI PUSH2 0x1B46 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x1B9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP4 DIV PUSH1 0xFF AND PUSH1 0x4 DUP5 ADD DUP2 SWAP1 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x42A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x4899 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x1CAE DUP3 PUSH1 0xA PUSH2 0x4BE9 JUMP JUMPDEST DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1CCA SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xE0 SHL DUP4 PUSH2 0x36E2 JUMP JUMPDEST DUP12 PUSH2 0x140 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x1CE1 JUMPI PUSH2 0x1CE1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP13 PUSH2 0x160 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x1D03 JUMPI PUSH2 0x1D03 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D15 SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST PUSH2 0x1D1F SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4A6B JUMP JUMPDEST PUSH2 0x1D56 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP5 PUSH2 0x3771 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x140 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x1D89 JUMPI PUSH2 0x1D89 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x160 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x1DBC JUMPI PUSH2 0x1DBC PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP4 DUP7 ADD MLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xC8 SHL MUL PUSH2 0xFFFF PUSH1 0xC8 SHL NOT PUSH4 0xFFFFFFFF SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP6 SWAP1 SWAP6 AND PUSH6 0xFFFFFFFFFFFF PUSH1 0xA8 SHL NOT PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP3 SWAP1 SWAP3 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x160 DUP10 ADD MLOAD DUP1 MLOAD DUP10 SWAP1 DUP2 LT PUSH2 0x1E6C JUMPI PUSH2 0x1E6C PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1C SWAP1 PUSH2 0x1EA2 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x4CB0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 SLOAD DUP10 PUSH2 0x100 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x1ED6 JUMPI PUSH2 0x1ED6 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631 DUP13 PUSH2 0x160 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x1F20 JUMPI PUSH2 0x1F20 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP14 DUP2 MLOAD DUP2 LT PUSH2 0x1F3F JUMPI PUSH2 0x1F3F PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1F92 DUP4 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x1FA9 SWAP1 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x185E JUMP JUMPDEST PUSH2 0x1FB9 PUSH2 0x3F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1FFE JUMPI PUSH2 0x1FFE PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2027 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2058 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2089 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP10 ADD DUP4 MSTORE DUP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 MLOAD DUP6 DUP2 MSTORE DUP1 DUP8 ADD DUP6 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD SWAP5 DUP6 MSTORE SWAP5 DUP5 ADD SWAP1 SWAP3 MSTORE POP PUSH1 0xC0 SWAP1 SWAP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2693 JUMPI PUSH2 0x20FB DUP3 DUP3 PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2117 JUMPI PUSH2 0x2117 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2135 JUMPI PUSH2 0x2135 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2152 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH2 0x100 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH2 0x2237 SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x21A3 JUMPI PUSH2 0x21A3 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x21B4 JUMPI PUSH2 0x21B4 PUSH2 0x4D47 JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH2 0x100 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL DUP3 DIV PUSH1 0xE0 SWAP1 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP5 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL DUP4 DIV DUP3 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH2 0x399A JUMP JUMPDEST PUSH2 0x225E DUP5 PUSH2 0x180 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2251 JUMPI PUSH2 0x2251 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3A53 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2277 JUMPI PUSH2 0x2277 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2290 JUMPI PUSH2 0x2290 PUSH2 0x4D47 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0xA0 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x22AB JUMPI PUSH2 0x22AB PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP2 ISZERO PUSH2 0x231E JUMPI DUP1 PUSH2 0xFFFF AND PUSH1 0x1 EQ PUSH2 0x231E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E64416D6F756E742073686F756C642062652065717561 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6C20746F2031 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH1 0x40 ADD MLOAD DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x2340 JUMPI PUSH2 0x2340 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2359 JUMPI PUSH2 0x2359 PUSH2 0x4D47 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0xC0 ADD MLOAD DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x2383 JUMPI PUSH2 0x2383 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0xE0 ADD MLOAD DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x23A9 JUMPI PUSH2 0x23A9 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH2 0x180 ADD MLOAD DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x23EB JUMPI PUSH2 0x23EB PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH2 0x1A0 ADD MLOAD DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x2412 JUMPI PUSH2 0x2412 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ISZERO ISZERO SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244E PUSH2 0x4D47 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP1 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 SWAP10 DUP11 ADD MLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP8 AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND SWAP9 SWAP1 SWAP9 MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP8 SWAP1 SWAP8 OR PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF SWAP7 DUP8 AND MUL OR PUSH6 0xFFFFFFFFFFFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL SWAP5 SWAP1 SWAP10 SHR SWAP4 SWAP1 SWAP4 MUL PUSH2 0xFFFF PUSH1 0xD0 SHL NOT AND SWAP8 SWAP1 SWAP8 OR PUSH1 0x1 PUSH1 0xD0 SHL PUSH2 0xFFFF SWAP9 DUP10 AND MUL OR PUSH3 0xFFFFFF PUSH1 0xE0 SHL NOT AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP8 SWAP1 SWAP3 AND SWAP7 SWAP1 SWAP7 MUL PUSH1 0xFF PUSH1 0xF0 SHL NOT AND OR PUSH1 0x1 PUSH1 0xF0 SHL SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND PUSH1 0x1 PUSH1 0xF8 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP7 ADD MLOAD DUP1 MLOAD DUP7 SWAP1 DUP2 LT PUSH2 0x253B JUMPI PUSH2 0x253B PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x255D JUMPI PUSH2 0x255D PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF8D82FDBB496215C151D63910926322DCB6BA0F8CBD5FA216EF261106BB1AB46 DUP6 PUSH1 0x3 SLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x25B3 JUMPI PUSH2 0x25B3 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 PUSH1 0xE0 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x25D1 JUMPI PUSH2 0x25D1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP15 PUSH2 0x180 ADD MLOAD DUP15 DUP2 MLOAD DUP2 LT PUSH2 0x25F1 JUMPI PUSH2 0x25F1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH2 0x1A0 ADD MLOAD DUP16 DUP2 MLOAD DUP2 LT PUSH2 0x2610 JUMPI PUSH2 0x2610 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP9 ISZERO ISZERO DUP10 MSTORE SWAP2 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xFF SWAP5 DUP6 AND SWAP1 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xFFFF AND PUSH1 0x80 DUP6 ADD MSTORE AND PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x2677 DUP4 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0x268B SWAP1 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20E5 JUMP JUMPDEST POP PUSH2 0x26CC DUP2 CALLER ADDRESS PUSH2 0x26B3 DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x318F JUMP JUMPDEST PUSH2 0x1856 DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x318F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x26D7 PUSH2 0x3F1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x272E JUMPI PUSH2 0x272E PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2757 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2788 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x27B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x27EA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2815 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x3AA6 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A6475726174696F6E207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x26CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4A6B JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2896 SWAP1 PUSH2 0x3AA6 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x28BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4A34 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x26CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x296A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103932B73A32B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x2974 DUP4 DUP3 PUSH2 0x3AF2 JUMP JUMPDEST ISZERO PUSH2 0x29C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A706173742072657475726E2064617465000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4A SWAP2 SWAP1 PUSH2 0x42A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ABF SWAP2 SWAP1 PUSH2 0x4899 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2AD1 DUP3 PUSH1 0xA PUSH2 0x4BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2AE3 DUP9 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x36E2 JUMP JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x2AF6 SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 PUSH2 0x2B0D SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x15180 PUSH2 0x2B1F DUP5 DUP11 PUSH2 0x4C91 JUMP JUMPDEST PUSH2 0x2B29 SWAP2 SWAP1 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x2B87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65726F PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2BD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE3 DUP3 DUP5 PUSH2 0x4CD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x2C0B JUMPI PUSH1 0x0 PUSH2 0x2BFB DUP4 DUP10 PUSH2 0x3B80 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C07 DUP2 DUP5 PUSH2 0x4CD3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x2C25 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP5 PUSH2 0x3BB7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C42 JUMPI DUP10 MLOAD PUSH2 0x2C42 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP4 PUSH2 0x3BB7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2F02 JUMPI DUP5 SLOAD DUP7 SLOAD PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0x2D43 JUMPI DUP5 SLOAD DUP7 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV DUP3 AND SWAP2 DUP9 SWAP2 PUSH1 0x1A SWAP2 PUSH2 0x2CAB SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV AND PUSH2 0x4CB0 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 DUP5 EXP SWAP1 DUP2 MUL SWAP1 DUP4 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP3 SSTORE DUP9 SLOAD DUP9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP7 POP PUSH4 0xF242432A SWAP6 PUSH2 0x2D0C SWAP6 ADDRESS SWAP6 DIV SWAP1 SWAP2 AND SWAP3 DUP10 SWAP3 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4937 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2EB0 JUMP JUMPDEST DUP5 SLOAD DUP7 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x2EB0 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D77 JUMPI PUSH2 0x2D77 PUSH2 0x4D47 JUMP JUMPDEST EQ ISZERO PUSH2 0x2DF2 JUMPI DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2E6E JUMP JUMPDEST DUP6 SLOAD DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP4 PUSH4 0xF242432A SWAP4 PUSH2 0x2E3B SWAP4 ADDRESS SWAP4 PUSH2 0x100 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP2 DUP9 SWAP2 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4937 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E87 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SSTORE JUMPDEST DUP5 SLOAD PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND PUSH1 0x20 DUP4 ADD MSTORE DUP3 SWAP2 PUSH32 0xFC33A7C95EE492CB6247BD90B28BBE1F459D8F80F3DC65F934CD020CF1E83EFB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x6E7 JUMP JUMPDEST DUP5 SLOAD DUP7 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV DUP3 AND SWAP2 DUP9 SWAP2 PUSH1 0x1C SWAP2 PUSH2 0x2F2D SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV AND PUSH2 0x4B46 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F59 DUP3 DUP3 PUSH2 0x3AF2 JUMP JUMPDEST PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3005 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3029 SWAP2 SWAP1 PUSH2 0x42A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x307A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x309E SWAP2 SWAP1 PUSH2 0x4899 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x30B0 DUP3 PUSH1 0xA PUSH2 0x4BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30C2 DUP8 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x36E2 JUMP JUMPDEST DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x30D5 SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 PUSH2 0x30EC SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x3107 JUMPI PUSH2 0x3104 DUP3 DUP8 PUSH2 0x3B80 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x312B SWAP1 PUSH2 0x311A DUP4 DUP6 PUSH2 0x4CD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 PUSH2 0x3BB7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103632B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x319B DUP5 DUP5 PUSH2 0x4CD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x31B2 JUMPI PUSH2 0x31B2 PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x31DB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3245 JUMPI DUP6 PUSH2 0x31F3 DUP5 DUP4 PUSH2 0x4CD3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3203 JUMPI PUSH2 0x3203 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP7 DUP4 PUSH2 0x3218 SWAP2 SWAP1 PUSH2 0x4CD3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x3228 JUMPI PUSH2 0x3228 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x323D DUP2 PUSH2 0x4D16 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x31E0 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MLOAD DUP7 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x3267 JUMPI PUSH2 0x3267 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3280 JUMPI PUSH2 0x3280 PUSH2 0x4D47 JUMP JUMPDEST EQ ISZERO PUSH2 0x3346 JUMPI PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x329D JUMPI PUSH2 0x329D PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP6 DUP6 DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x32CF JUMPI PUSH2 0x32CF PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x333D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x44A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x335D JUMPI PUSH2 0x335D PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2EB2C2D6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3396 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x496F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x312B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x33CF SWAP1 PUSH2 0x3BE7 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x341F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x26CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x34DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x34F8 JUMPI PUSH2 0x34F8 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x3544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xA4CA9C8CA87474DCDEE840EAD2DCE87 PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x355D JUMPI PUSH2 0x355D PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x3585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4A34 JUMP JUMPDEST PUSH2 0xFFFF DUP1 AND DUP4 PUSH2 0x160 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x35A1 JUMPI PUSH2 0x35A1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x35EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103AB4B73A189B PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x160 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3604 JUMPI PUSH2 0x3604 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x3659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74416D6F756E74206973207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3678 JUMPI PUSH2 0x3678 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDEEECAC840DAC2F PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36EE DUP4 DUP4 PUSH2 0x3C3E JUMP JUMPDEST PUSH1 0xF0 DUP4 SWAP1 SHR PUSH2 0xFFFF PUSH1 0xE0 DUP6 SWAP1 SHR AND PUSH1 0x0 PUSH2 0x370A PUSH2 0x2710 DUP7 PUSH2 0x4B84 JUMP JUMPDEST SWAP1 POP PUSH2 0x270F DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x3720 JUMPI PUSH2 0x270F SWAP3 POP JUMPDEST PUSH2 0x270F DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x3734 JUMPI PUSH2 0x270F SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x3744 DUP7 PUSH2 0xFFFF DUP7 AND PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3756 DUP4 PUSH2 0xFFFF DUP7 AND PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3764 DUP3 DUP5 PUSH2 0x4B6C JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x6AA SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x37F4 JUMPI PUSH2 0x37F4 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x3849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0xFFFF DUP1 AND DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3864 JUMPI PUSH2 0x3864 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x38AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103AB4B73A189B PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38C6 JUMPI PUSH2 0x38C6 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x38EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4A34 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3908 JUMPI PUSH2 0x3908 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x3954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xA4CA9C8CA87474DCDEE840EAD2DCE87 PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x396C JUMPI PUSH2 0x396C PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 SHR PUSH4 0xFFFFFFFF AND GT PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4A6B JUMP JUMPDEST PUSH2 0x39A7 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x3BE7 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x39F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND ISZERO PUSH2 0x26CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND GT PUSH2 0x26CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x26CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x52654E46543A3A7A65726F2061646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP3 GT PUSH2 0x3B4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3B63 SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3B78 SWAP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH2 0x4CD3 JUMP JUMPDEST GT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x3B90 SWAP2 SWAP1 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B9E PUSH2 0x2710 DUP3 PUSH2 0x4B84 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x400 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x29C1 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x37A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x26CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xE0 DUP3 SWAP1 SHR PUSH2 0x3C86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207072696365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207363616C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D24 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DA1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x29C1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3D42 SWAP2 SWAP1 PUSH2 0x4848 JUMP JUMPDEST PUSH2 0x29C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3DB0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3DBA JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3E1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x3E69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3E85 SWAP2 SWAP1 PUSH2 0x491B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3EC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3EC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3ED7 DUP3 DUP3 DUP7 PUSH2 0x3EE2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3EF1 JUMPI POP DUP2 PUSH2 0x3DB3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3F01 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x49CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3FB0 PUSH2 0x3FAB DUP4 PUSH2 0x4B23 JUMP JUMPDEST PUSH2 0x4AF3 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3FD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FF8 JUMPI DUP2 CALLDATALOAD PUSH2 0x3FE6 DUP2 PUSH2 0x4D89 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3FD3 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4026 PUSH2 0x3FAB DUP4 PUSH2 0x4B23 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x4046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FF8 JUMPI DUP2 CALLDATALOAD PUSH2 0x405C DUP2 PUSH2 0x4D9E JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4049 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x407F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x408F PUSH2 0x3FAB DUP4 PUSH2 0x4B23 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x40AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FF8 JUMPI PUSH2 0x40C3 DUP3 PUSH2 0x4219 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x40B2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x40E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x40F6 PUSH2 0x3FAB DUP4 PUSH2 0x4B23 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x4116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x4142 JUMPI DUP3 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x4130 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x411A JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4171 PUSH2 0x3FAB DUP4 PUSH2 0x4B23 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x4191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FF8 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4194 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x41C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x41D1 PUSH2 0x3FAB DUP4 PUSH2 0x4B23 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x41F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FF8 JUMPI DUP2 CALLDATALOAD PUSH2 0x4207 DUP2 PUSH2 0x4DAC JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x41F4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x4231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4260 JUMPI PUSH2 0x4260 PUSH2 0x4D73 JUMP JUMPDEST PUSH2 0x4273 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4AF3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3DB3 DUP2 PUSH2 0x4D89 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3DB3 DUP2 PUSH2 0x4D89 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x42F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4302 DUP2 PUSH2 0x4D89 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4312 DUP2 PUSH2 0x4D89 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x432E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x433A DUP10 DUP4 DUP11 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x435C DUP10 DUP4 DUP11 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x437F DUP9 DUP3 DUP10 ADD PUSH2 0x4236 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x43A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x43AD DUP2 PUSH2 0x4D89 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x43BD DUP2 PUSH2 0x4D89 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x43DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43EB DUP8 DUP3 DUP9 ADD PUSH2 0x4236 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x440F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x441A DUP2 PUSH2 0x4D89 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x442A DUP2 PUSH2 0x4D89 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x437F DUP9 DUP3 DUP10 ADD PUSH2 0x4236 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x447F DUP2 PUSH2 0x4D89 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x44AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x44C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44CD DUP9 DUP4 DUP10 ADD PUSH2 0x40D5 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x44E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44EF DUP9 DUP4 DUP10 ADD PUSH2 0x3F8A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4511 DUP9 DUP4 DUP10 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43EB DUP8 DUP3 DUP9 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x454C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x456F DUP10 DUP4 DUP11 ADD PUSH2 0x40D5 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4591 DUP10 DUP4 DUP11 ADD PUSH2 0x3F8A JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x45A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45B3 DUP10 DUP4 DUP11 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x45C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45D5 DUP10 DUP4 DUP11 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x45EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x437F DUP9 DUP3 DUP10 ADD PUSH2 0x4150 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x4615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x462C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4638 DUP13 DUP4 DUP14 ADD PUSH2 0x40D5 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x464E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x465A DUP13 DUP4 DUP14 ADD PUSH2 0x3F8A JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x467C DUP13 DUP4 DUP14 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x469E DUP13 DUP4 DUP14 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x46B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C0 DUP13 DUP4 DUP14 ADD PUSH2 0x41B0 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x46D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46E2 DUP13 DUP4 DUP14 ADD PUSH2 0x406E JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x46F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4704 DUP13 DUP4 DUP14 ADD PUSH2 0x41B0 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x471A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4727 DUP12 DUP3 DUP13 ADD PUSH2 0x4005 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4773 DUP11 DUP4 DUP12 ADD PUSH2 0x40D5 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4795 DUP11 DUP4 DUP12 ADD PUSH2 0x3F8A JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x47AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47B7 DUP11 DUP4 DUP12 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x47CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47D9 DUP11 DUP4 DUP12 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x47EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47FB DUP11 DUP4 DUP12 ADD PUSH2 0x41B0 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x481E DUP10 DUP3 DUP11 ADD PUSH2 0x4150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x483D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3DB3 DUP2 PUSH2 0x4D9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x485A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3DB3 DUP2 PUSH2 0x4D9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DB3 DUP3 PUSH2 0x4219 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3DB3 DUP2 PUSH2 0x4DAC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x48E6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48CA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x492D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4CEA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x499B SWAP1 DUP4 ADD DUP6 PUSH2 0x48B6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x49AD DUP2 DUP6 PUSH2 0x48B6 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x49E9 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4CEA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x14995391950E8E9C185D5CD959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2932A7232A1D1D3737BA1030B236B4B7 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4B1B JUMPI PUSH2 0x4B1B PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4B3C JUMPI PUSH2 0x4B3C PUSH2 0x4D73 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4B63 JUMPI PUSH2 0x4B63 PUSH2 0x4D31 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4B7F JUMPI PUSH2 0x4B7F PUSH2 0x4D31 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4BA1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4BE1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4BC7 JUMPI PUSH2 0x4BC7 PUSH2 0x4D31 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x4BD4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4BAB JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB3 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x4BFF JUMPI POP PUSH1 0x1 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH2 0x4C0C JUMPI POP PUSH1 0x0 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4C22 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4C2C JUMPI PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x400 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4C3D JUMPI PUSH2 0x4C3D PUSH2 0x4D31 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x400 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4C6B JUMPI POP DUP2 DUP2 EXP PUSH2 0x400 JUMP JUMPDEST PUSH2 0x4C75 DUP4 DUP4 PUSH2 0x4BA6 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4C89 JUMPI PUSH2 0x4C89 PUSH2 0x4D31 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4CAB JUMPI PUSH2 0x4CAB PUSH2 0x4D31 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x4CCB JUMPI PUSH2 0x4CCB PUSH2 0x4D31 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4CE5 JUMPI PUSH2 0x4CE5 PUSH2 0x4D31 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D05 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4CED JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6AA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4D2A JUMPI PUSH2 0x4D2A PUSH2 0x4D31 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x26CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x26CC JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP11 0xA8 0x4D 0xC9 PUSH2 0x2489 KECCAK256 SDIV CALLDATALOAD 0xCA MUL PUSH18 0x8710F16C79EC7E39A0D76E55DC56FFC1572D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "LT",
      "path": "15"
    },
    "9": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF3"
    },
    "12": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "SHR",
      "path": "15"
    },
    "19": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "20": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x937821A1"
    },
    "25": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "GT",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "30": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "31": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCBE55E54"
    },
    "36": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "GT",
      "path": "15"
    },
    "37": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "41": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "42": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCBE55E54"
    },
    "47": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "48": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x315"
    },
    "51": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "52": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "53": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xDC68A142"
    },
    "58": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "59": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x328"
    },
    "62": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "63": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "64": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF23A6E61"
    },
    "69": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "70": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x348"
    },
    "73": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "74": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "75": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFE46B7CD"
    },
    "80": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "81": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x374"
    },
    "84": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "85": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "REVERT",
      "path": "15"
    },
    "89": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "90": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "91": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x937821A1"
    },
    "96": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "97": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x285"
    },
    "100": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "101": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "102": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBC197C81"
    },
    "107": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "108": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A5"
    },
    "111": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "112": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBF2B23EA"
    },
    "118": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "119": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D1"
    },
    "122": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "123": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC9C40183"
    },
    "129": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "130": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F5"
    },
    "133": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "134": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "REVERT",
      "path": "15"
    },
    "138": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "139": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "140": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1C31F710"
    },
    "145": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "GT",
      "path": "15"
    },
    "146": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "150": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "151": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1C31F710"
    },
    "156": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "157": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B3"
    },
    "160": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "161": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "162": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x296C21B7"
    },
    "167": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "168": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D3"
    },
    "171": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "172": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "173": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5C975ABB"
    },
    "178": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "179": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24B"
    },
    "182": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "183": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "184": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x76774EA3"
    },
    "189": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "190": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x265"
    },
    "193": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "194": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "REVERT",
      "path": "15"
    },
    "198": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "199": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "200": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1FFC9A7"
    },
    "205": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "206": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF8"
    },
    "209": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "210": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "211": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x14B5685C"
    },
    "216": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "217": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12D"
    },
    "220": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "221": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "222": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x150B7A02"
    },
    "227": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "228": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F"
    },
    "231": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "232": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "233": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x16C38B3C"
    },
    "238": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "EQ",
      "path": "15"
    },
    "239": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x193"
    },
    "242": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "243": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "244": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "246": {
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "247": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2113,
        28241
      ],
      "op": "REVERT",
      "path": "15"
    },
    "248": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "249": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "250": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "251": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "252": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "255": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "258": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "259": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "REVERT",
      "path": "3"
    },
    "260": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118"
    },
    "265": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x113"
    },
    "268": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "269": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "271": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4865"
    },
    "274": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "275": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "276": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CF"
    },
    "279": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "280": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "281": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "283": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "ISZERO"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "DUP2"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "293": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "297": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "298": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SUB",
      "path": "3"
    },
    "299": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "300": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "RETURN",
      "path": "3"
    },
    "301": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "302": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "303": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "DUP1",
      "path": "15"
    },
    "304": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "305": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x139"
    },
    "308": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "309": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "311": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "DUP1",
      "path": "15"
    },
    "312": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "REVERT",
      "path": "15"
    },
    "313": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "318": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x148"
    },
    "321": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "322": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "324": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4534"
    },
    "327": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "328": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "329": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x406"
    },
    "332": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "333": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "334": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "STOP",
      "path": "15"
    },
    "335": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "336": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "337": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "10"
    },
    "338": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "339": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15B"
    },
    "342": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "343": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "10"
    },
    "346": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "REVERT",
      "path": "10"
    },
    "347": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17A"
    },
    "352": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "355": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "356": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "358": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x438C"
    },
    "361": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "10"
    },
    "362": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "363": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "368": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "372": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "373": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "374": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "375": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "376": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "377": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "10"
    },
    "378": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "379": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "381": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "op": "NOT"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "SWAP2"
    },
    "393": {
      "op": "AND"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "404": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "405": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "DUP1",
      "path": "15"
    },
    "406": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "407": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19F"
    },
    "410": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "411": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "413": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "DUP1",
      "path": "15"
    },
    "414": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "REVERT",
      "path": "15"
    },
    "415": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "416": {
      "op": "POP"
    },
    "417": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "420": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AE"
    },
    "423": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "424": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "426": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x482B"
    },
    "429": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMP",
      "path": "15"
    },
    "430": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "431": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x451"
    },
    "434": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMP",
      "path": "15"
    },
    "435": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "436": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "437": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "DUP1",
      "path": "15"
    },
    "438": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "439": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BF"
    },
    "442": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "443": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "445": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "DUP1",
      "path": "15"
    },
    "446": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "REVERT",
      "path": "15"
    },
    "447": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "452": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CE"
    },
    "455": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "456": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "458": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42C2"
    },
    "461": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMP",
      "path": "15"
    },
    "462": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "463": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48E"
    },
    "466": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMP",
      "path": "15"
    },
    "467": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "468": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "469": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "DUP1",
      "path": "15"
    },
    "470": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "471": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DF"
    },
    "474": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "475": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "477": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "DUP1",
      "path": "15"
    },
    "478": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "REVERT",
      "path": "15"
    },
    "479": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F3"
    },
    "484": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EE"
    },
    "487": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "488": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "490": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445F"
    },
    "493": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMP",
      "path": "15"
    },
    "494": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "495": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4DA"
    },
    "498": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMP",
      "path": "15"
    },
    "499": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "500": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "502": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "DUP1",
      "path": "15"
    },
    "503": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "504": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "506": {
      "op": "SWAP9"
    },
    "507": {
      "op": "DUP10"
    },
    "508": {
      "op": "AND"
    },
    "509": {
      "op": "DUP2"
    },
    "510": {
      "op": "MSTORE"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "op": "SWAP1"
    },
    "520": {
      "op": "SWAP8"
    },
    "521": {
      "op": "AND"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "524": {
      "op": "DUP9"
    },
    "525": {
      "op": "ADD"
    },
    "526": {
      "op": "MSTORE"
    },
    "527": {
      "op": "SWAP5"
    },
    "528": {
      "op": "DUP8"
    },
    "529": {
      "op": "AND"
    },
    "530": {
      "op": "SWAP5"
    },
    "531": {
      "op": "DUP7"
    },
    "532": {
      "op": "ADD"
    },
    "533": {
      "op": "SWAP5"
    },
    "534": {
      "op": "SWAP1"
    },
    "535": {
      "op": "SWAP5"
    },
    "536": {
      "op": "MSTORE"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "op": "NOT"
    },
    "546": {
      "op": "SWAP1"
    },
    "547": {
      "op": "SWAP3"
    },
    "548": {
      "op": "AND"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "551": {
      "op": "DUP6"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "557": {
      "op": "SWAP1"
    },
    "558": {
      "op": "DUP2"
    },
    "559": {
      "op": "AND"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "562": {
      "op": "DUP6"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "AND"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "568": {
      "op": "DUP4"
    },
    "569": {
      "op": "ADD"
    },
    "570": {
      "op": "MSTORE"
    },
    "571": {
      "op": "SWAP2"
    },
    "572": {
      "op": "SWAP1"
    },
    "573": {
      "op": "SWAP2"
    },
    "574": {
      "op": "AND"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "577": {
      "op": "DUP3"
    },
    "578": {
      "op": "ADD"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "582": {
      "op": "ADD"
    },
    "583": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "586": {
      "op": "JUMP"
    },
    "587": {
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "588": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "589": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "590": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "591": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x257"
    },
    "594": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "595": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "597": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "598": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "REVERT",
      "path": "15"
    },
    "599": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "603": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "604": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x118"
    },
    "607": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "608": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "610": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "AND",
      "path": "15"
    },
    "611": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "612": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMP",
      "path": "15"
    },
    "613": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "614": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "615": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "DUP1",
      "path": "15"
    },
    "616": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "617": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x271"
    },
    "620": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "621": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "623": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "DUP1",
      "path": "15"
    },
    "624": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "REVERT",
      "path": "15"
    },
    "625": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "630": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x280"
    },
    "633": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "634": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "636": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4880"
    },
    "639": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMP",
      "path": "15"
    },
    "640": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "641": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x593"
    },
    "644": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMP",
      "path": "15"
    },
    "645": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "646": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "647": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "DUP1",
      "path": "15"
    },
    "648": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "649": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x291"
    },
    "652": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "653": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "655": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "DUP1",
      "path": "15"
    },
    "656": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "REVERT",
      "path": "15"
    },
    "657": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "662": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A0"
    },
    "665": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "666": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "668": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4534"
    },
    "671": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5021,
        5395
      ],
      "op": "JUMP",
      "path": "15"
    },
    "672": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "673": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x613"
    },
    "676": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5021,
        5395
      ],
      "op": "JUMP",
      "path": "15"
    },
    "677": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "678": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "679": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "2"
    },
    "680": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "681": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "684": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "685": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "687": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "2"
    },
    "688": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "REVERT",
      "path": "2"
    },
    "689": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "694": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0"
    },
    "697": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "698": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "700": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42DF"
    },
    "703": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "704": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "705": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "714": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "715": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "716": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "717": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "718": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "719": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "720": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "721": {
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "722": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "723": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "724": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "725": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DD"
    },
    "728": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "729": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "731": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "732": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "REVERT",
      "path": "15"
    },
    "733": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "734": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "POP",
      "path": "15"
    },
    "735": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E7"
    },
    "738": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "740": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "741": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP2",
      "path": "15"
    },
    "742": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "743": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "744": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "746": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "747": {
      "op": "SWAP1"
    },
    "748": {
      "op": "DUP2"
    },
    "749": {
      "op": "MSTORE"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "752": {
      "op": "ADD"
    },
    "753": {
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "756": {
      "op": "JUMP"
    },
    "757": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "758": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "759": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "DUP1",
      "path": "15"
    },
    "760": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "761": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x301"
    },
    "764": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "765": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "767": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "DUP1",
      "path": "15"
    },
    "768": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "REVERT",
      "path": "15"
    },
    "769": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "770": {
      "op": "POP"
    },
    "771": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "774": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x310"
    },
    "777": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "778": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "780": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4494"
    },
    "783": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMP",
      "path": "15"
    },
    "784": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "785": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x649"
    },
    "788": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMP",
      "path": "15"
    },
    "789": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "790": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "793": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x323"
    },
    "796": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "797": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "799": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4737"
    },
    "802": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4194,
        4637
      ],
      "op": "JUMP",
      "path": "15"
    },
    "803": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "804": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6B0"
    },
    "807": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4194,
        4637
      ],
      "op": "JUMP",
      "path": "15"
    },
    "808": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "809": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "810": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "DUP1",
      "path": "15"
    },
    "811": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "812": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x334"
    },
    "815": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "816": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "818": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "DUP1",
      "path": "15"
    },
    "819": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "REVERT",
      "path": "15"
    },
    "820": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "825": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x343"
    },
    "828": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "829": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "831": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45F8"
    },
    "834": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMP",
      "path": "15"
    },
    "835": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "836": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6EF"
    },
    "839": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMP",
      "path": "15"
    },
    "840": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "841": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "842": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "843": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "844": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "847": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "848": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "851": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "REVERT",
      "path": "2"
    },
    "852": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "857": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x363"
    },
    "860": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "861": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "863": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43F7"
    },
    "866": {
      "fn": "ERC1155Holder.onERC1155Received",
      "jump": "i",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "867": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "868": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "877": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "878": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "879": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "880": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "881": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "882": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "883": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "885": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "886": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "DUP1",
      "path": "15"
    },
    "887": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "888": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x380"
    },
    "891": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "892": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "894": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "DUP1",
      "path": "15"
    },
    "895": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "REVERT",
      "path": "15"
    },
    "896": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x394"
    },
    "901": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38F"
    },
    "904": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "905": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "907": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445F"
    },
    "910": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMP",
      "path": "15"
    },
    "911": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "912": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x732"
    },
    "915": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMP",
      "path": "15"
    },
    "916": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "917": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "919": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "DUP1",
      "path": "15"
    },
    "920": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "SUB"
    },
    "929": {
      "op": "SWAP1"
    },
    "930": {
      "op": "SWAP6"
    },
    "931": {
      "op": "AND"
    },
    "932": {
      "op": "DUP6"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "937": {
      "op": "SWAP1"
    },
    "938": {
      "op": "SWAP4"
    },
    "939": {
      "op": "AND"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "op": "DUP6"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "SWAP2"
    },
    "949": {
      "op": "AND"
    },
    "950": {
      "op": "SWAP2"
    },
    "951": {
      "op": "DUP4"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "SWAP2"
    },
    "954": {
      "op": "SWAP1"
    },
    "955": {
      "op": "SWAP2"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "962": {
      "op": "AND"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "974": {
      "op": "JUMP"
    },
    "975": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "976": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        414,
        418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "NOT"
    },
    "987": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 0
    },
    "988": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "AND",
      "path": "3"
    },
    "989": {
      "op": "PUSH4",
      "value": "0x2711897"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "EQ",
      "path": "3"
    },
    "998": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "999": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x400"
    },
    "1002": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "op": "NOT"
    },
    "1021": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 1
    },
    "1022": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "13"
    },
    "1023": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "13"
    },
    "1024": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        490,
        526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1025": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        430,
        526
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1026": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "o",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1030": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1031": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1033": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1034": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1036": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1037": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1038": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x432"
    },
    "1041": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1042": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1044": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1053": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1054": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1056": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1057": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1060": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1061": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA2"
    },
    "1064": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1065": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1066": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1068": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1069": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1070": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1071": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SUB",
      "path": "15"
    },
    "1072": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1073": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "15"
    },
    "1074": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1075": {
      "fn": "Registry.stopRent",
      "offset": [
        4902,
        5008
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 2,
      "value": "0x44A"
    },
    "1078": {
      "fn": "Registry.stopRent",
      "offset": [
        4913,
        4927
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7B0"
    },
    "1081": {
      "fn": "Registry.stopRent",
      "offset": [
        4929,
        5007
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1084": {
      "fn": "Registry.stopRent",
      "offset": [
        4950,
        4961
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1085": {
      "fn": "Registry.stopRent",
      "offset": [
        4963,
        4973
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1086": {
      "fn": "Registry.stopRent",
      "offset": [
        4975,
        4982
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1087": {
      "fn": "Registry.stopRent",
      "offset": [
        4984,
        4994
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1088": {
      "fn": "Registry.stopRent",
      "offset": [
        4996,
        5006
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1089": {
      "fn": "Registry.stopRent",
      "offset": [
        4929,
        4949
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD76"
    },
    "1092": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4929,
        5007
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1093": {
      "fn": "Registry.stopRent",
      "offset": [
        4929,
        5007
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1094": {
      "fn": "Registry.stopRent",
      "offset": [
        4902,
        4912
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF2D"
    },
    "1097": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4902,
        5008
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1098": {
      "fn": "Registry.stopRent",
      "offset": [
        4902,
        5008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1099": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "POP",
      "path": "15"
    },
    "1100": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "POP",
      "path": "15"
    },
    "1101": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "POP",
      "path": "15"
    },
    "1102": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "POP",
      "path": "15"
    },
    "1103": {
      "fn": "Registry.stopRent",
      "offset": [
        4643,
        5015
      ],
      "op": "POP",
      "path": "15"
    },
    "1104": {
      "fn": "Registry.stopRent",
      "jump": "o",
      "offset": [
        4643,
        5015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1105": {
      "fn": "Registry.setPaused",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1106": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1108": {
      "fn": "Registry.setPaused",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1118": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1119": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1120": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47B"
    },
    "1123": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1124": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1126": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1135": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1136": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1138": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1139": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1142": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1143": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AC9"
    },
    "1146": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1147": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1148": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28220
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0x5"
    },
    "1150": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1151": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1154": {
      "op": "NOT"
    },
    "1155": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "AND",
      "path": "15"
    },
    "1156": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1157": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1158": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1159": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1160": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1161": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1162": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "OR",
      "path": "15"
    },
    "1163": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1164": {
      "fn": "Registry.setPaused",
      "offset": [
        28214,
        28232
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1165": {
      "fn": "Registry.setPaused",
      "jump": "o",
      "offset": [
        28150,
        28239
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1166": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1167": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1169": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "op": "SUB"
    },
    "1178": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1179": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1180": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1181": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B8"
    },
    "1184": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1185": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1187": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1196": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1197": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1199": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1200": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1203": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1204": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AC9"
    },
    "1207": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1208": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1209": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28120
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x2"
    },
    "1211": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1212": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "NOT"
    },
    "1222": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "AND",
      "path": "15"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1232": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1233": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1234": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "AND",
      "path": "15"
    },
    "1235": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1236": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1237": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1238": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "OR",
      "path": "15"
    },
    "1239": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1240": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        28109,
        28137
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1241": {
      "fn": "Registry.setBeneficiary",
      "jump": "o",
      "offset": [
        28024,
        28144
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1242": {
      "fn": "Registry.getLending",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1243": {
      "fn": "Registry.getLending",
      "offset": [
        19158,
        19163
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1245": {
      "fn": "Registry.getLending",
      "offset": [
        19165,
        19172
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1246": {
      "fn": "Registry.getLending",
      "offset": [
        19174,
        19179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1248": {
      "fn": "Registry.getLending",
      "offset": [
        19181,
        19187
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1249": {
      "fn": "Registry.getLending",
      "offset": [
        19189,
        19195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1251": {
      "fn": "Registry.getLending",
      "offset": [
        19197,
        19203
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1252": {
      "fn": "Registry.getLending",
      "offset": [
        19205,
        19210
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1254": {
      "fn": "Registry.getLending",
      "offset": [
        19226,
        19244
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1255": {
      "fn": "Registry.getLending",
      "offset": [
        19274,
        19284
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1256": {
      "fn": "Registry.getLending",
      "offset": [
        19286,
        19293
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1257": {
      "fn": "Registry.getLending",
      "offset": [
        19295,
        19305
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1258": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1260": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1261": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1263": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "ADD",
      "path": "15"
    },
    "1264": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4FB"
    },
    "1267": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1268": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1269": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1270": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1271": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "1274": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19257,
        19306
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1275": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1276": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1278": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1279": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1282": {
      "op": "NOT"
    },
    "1283": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1284": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1285": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "SUB",
      "path": "15"
    },
    "1286": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "ADD",
      "path": "15"
    },
    "1287": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1288": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1289": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1290": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1291": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1292": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1293": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1294": {
      "fn": "Registry.getLending",
      "offset": [
        19257,
        19306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1296": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1297": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1298": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "ADD",
      "path": "15"
    },
    "1299": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1300": {
      "fn": "Registry.getLending",
      "offset": [
        19317,
        19350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1302": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1303": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1304": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1305": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "1307": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1308": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1309": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1310": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1311": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1312": {
      "fn": "Registry.getLending",
      "offset": [
        19410,
        19429
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 5
    },
    "1313": {
      "fn": "Registry.getLending",
      "offset": [
        19410,
        19429
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1314": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1315": {
      "fn": "Registry.getLending",
      "offset": [
        19247,
        19307
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "fn": "Registry.getLending",
      "offset": [
        19353,
        19373
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1318": {
      "fn": "Registry.getLending",
      "offset": [
        19410,
        19429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1320": {
      "fn": "Registry.getLending",
      "offset": [
        19410,
        19429
      ],
      "op": "AND",
      "path": "15"
    },
    "1321": {
      "fn": "Registry.getLending",
      "offset": [
        19410,
        19429
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1323": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1324": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "GT",
      "path": "15"
    },
    "1325": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1326": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x539"
    },
    "1329": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1330": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x539"
    },
    "1333": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "1336": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19404,
        19430
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1337": {
      "fn": "Registry.getLending",
      "offset": [
        19404,
        19430
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1338": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1339": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1340": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1341": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "SWAP13",
      "path": "15"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "SUB"
    },
    "1350": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "1353": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1354": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "DIV",
      "path": "15"
    },
    "1355": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "AND",
      "path": "15"
    },
    "1356": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "SWAP13",
      "path": "15"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "fn": "Registry.getLending",
      "offset": [
        19479,
        19502
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "fn": "Registry.getLending",
      "offset": [
        19479,
        19502
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1366": {
      "fn": "Registry.getLending",
      "offset": [
        19479,
        19502
      ],
      "op": "DIV",
      "path": "15"
    },
    "1367": {
      "fn": "Registry.getLending",
      "offset": [
        19479,
        19502
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1368": {
      "fn": "Registry.getLending",
      "offset": [
        19479,
        19502
      ],
      "op": "AND",
      "path": "15"
    },
    "1369": {
      "fn": "Registry.getLending",
      "offset": [
        19479,
        19502
      ],
      "op": "SWAP13",
      "path": "15"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "fn": "Registry.getLending",
      "offset": [
        19516,
        19538
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1377": {
      "fn": "Registry.getLending",
      "offset": [
        19516,
        19538
      ],
      "op": "DIV",
      "path": "15"
    },
    "1378": {
      "fn": "Registry.getLending",
      "offset": [
        19516,
        19538
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1380": {
      "fn": "Registry.getLending",
      "offset": [
        19516,
        19538
      ],
      "op": "SHL",
      "path": "15"
    },
    "1381": {
      "fn": "Registry.getLending",
      "offset": [
        19516,
        19538
      ],
      "op": "SWAP12",
      "path": "15"
    },
    "1382": {
      "op": "POP"
    },
    "1383": {
      "fn": "Registry.getLending",
      "offset": [
        19552,
        19570
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "fn": "Registry.getLending",
      "offset": [
        19552,
        19570
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1392": {
      "fn": "Registry.getLending",
      "offset": [
        19552,
        19570
      ],
      "op": "DIV",
      "path": "15"
    },
    "1393": {
      "fn": "Registry.getLending",
      "offset": [
        19552,
        19570
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1394": {
      "fn": "Registry.getLending",
      "offset": [
        19552,
        19570
      ],
      "op": "AND",
      "path": "15"
    },
    "1395": {
      "fn": "Registry.getLending",
      "offset": [
        19552,
        19570
      ],
      "op": "SWAP12",
      "path": "15"
    },
    "1396": {
      "op": "POP"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "fn": "Registry.getLending",
      "offset": [
        19584,
        19607
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1403": {
      "fn": "Registry.getLending",
      "offset": [
        19584,
        19607
      ],
      "op": "DIV",
      "path": "15"
    },
    "1404": {
      "fn": "Registry.getLending",
      "offset": [
        19584,
        19607
      ],
      "op": "AND",
      "path": "15"
    },
    "1405": {
      "fn": "Registry.getLending",
      "offset": [
        19584,
        19607
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "1406": {
      "op": "POP"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "fn": "Registry.getLending",
      "offset": [
        19627,
        19647
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1413": {
      "fn": "Registry.getLending",
      "offset": [
        19627,
        19647
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1414": {
      "fn": "Registry.getLending",
      "offset": [
        19627,
        19647
      ],
      "op": "DIV",
      "path": "15"
    },
    "1415": {
      "fn": "Registry.getLending",
      "offset": [
        19627,
        19647
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1416": {
      "fn": "Registry.getLending",
      "offset": [
        19627,
        19647
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1417": {
      "fn": "Registry.getLending",
      "offset": [
        19627,
        19647
      ],
      "op": "AND",
      "path": "15"
    },
    "1418": {
      "fn": "Registry.getLending",
      "offset": [
        19627,
        19647
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "1419": {
      "op": "POP"
    },
    "1420": {
      "fn": "Registry.getLending",
      "offset": [
        19444,
        19465
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "op": "POP"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "fn": "Registry.getLending",
      "jump": "o",
      "offset": [
        19034,
        19665
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1427": {
      "fn": "Registry.setRentFee",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1428": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1430": {
      "fn": "Registry.setRentFee",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "SUB"
    },
    "1439": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1440": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1441": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1442": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5BD"
    },
    "1445": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1446": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1448": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1457": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1458": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1460": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1461": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1464": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1465": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AC9"
    },
    "1468": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1469": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1470": {
      "fn": "Registry.setRentFee",
      "offset": [
        27946,
        27951
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 6,
      "value": "0x2710"
    },
    "1473": {
      "fn": "Registry.setRentFee",
      "offset": [
        27933,
        27943
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1474": {
      "branch": 138,
      "fn": "Registry.setRentFee",
      "offset": [
        27933,
        27951
      ],
      "op": "LT",
      "path": "15"
    },
    "1475": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x60E"
    },
    "1478": {
      "branch": 138,
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1479": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1481": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1490": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1495": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1496": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "ADD",
      "path": "15"
    },
    "1497": {
      "op": "MSTORE"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1502": {
      "op": "DUP3"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "MSTORE"
    },
    "1505": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A66656520657863656564732031303070637400000000000000"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1540": {
      "op": "DUP3"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "op": "MSTORE"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1549": {
      "op": "JUMP"
    },
    "1550": {
      "fn": "Registry.setRentFee",
      "offset": [
        27925,
        27981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1551": {
      "fn": "Registry.setRentFee",
      "offset": [
        27991,
        27998
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 7,
      "value": "0x6"
    },
    "1553": {
      "fn": "Registry.setRentFee",
      "offset": [
        27991,
        28011
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1554": {
      "fn": "Registry.setRentFee",
      "jump": "o",
      "offset": [
        27856,
        28018
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1555": {
      "fn": "Registry.claimRent",
      "offset": [
        5021,
        5395
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1556": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1558": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1559": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1561": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1562": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1563": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x636"
    },
    "1566": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1567": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1569": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1578": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1579": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1581": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1582": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1585": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1586": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA2"
    },
    "1589": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1590": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1591": {
      "fn": "Registry.claimRent",
      "offset": [
        5281,
        5388
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 8,
      "value": "0x44A"
    },
    "1594": {
      "fn": "Registry.claimRent",
      "offset": [
        5292,
        5307
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1062"
    },
    "1597": {
      "fn": "Registry.claimRent",
      "offset": [
        5309,
        5387
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1600": {
      "fn": "Registry.claimRent",
      "offset": [
        5330,
        5341
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1601": {
      "fn": "Registry.claimRent",
      "offset": [
        5343,
        5353
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1602": {
      "fn": "Registry.claimRent",
      "offset": [
        5355,
        5362
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1603": {
      "fn": "Registry.claimRent",
      "offset": [
        5364,
        5374
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1604": {
      "fn": "Registry.claimRent",
      "offset": [
        5376,
        5386
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1605": {
      "fn": "Registry.claimRent",
      "offset": [
        5309,
        5329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD76"
    },
    "1608": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5309,
        5387
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1609": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1610": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1612": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1613": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1615": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1616": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1617": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66C"
    },
    "1620": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1621": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1623": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1632": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1633": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1635": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1636": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1639": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1640": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA2"
    },
    "1643": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1644": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1645": {
      "fn": "Registry.stopLend",
      "offset": [
        4069,
        4181
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 9,
      "value": "0x6AA"
    },
    "1648": {
      "fn": "Registry.stopLend",
      "offset": [
        4080,
        4094
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x149F"
    },
    "1651": {
      "fn": "Registry.stopLend",
      "offset": [
        4096,
        4180
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1654": {
      "fn": "Registry.stopLend",
      "offset": [
        4117,
        4128
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1655": {
      "fn": "Registry.stopLend",
      "offset": [
        4130,
        4140
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1656": {
      "fn": "Registry.stopLend",
      "offset": [
        4142,
        4149
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1657": {
      "fn": "Registry.stopLend",
      "offset": [
        4151,
        4161
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1658": {
      "fn": "Registry.stopLend",
      "offset": [
        4177,
        4178
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1660": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1662": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1663": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1664": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1665": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1666": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1667": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1668": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1670": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "MUL",
      "path": "15"
    },
    "1671": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1673": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "ADD",
      "path": "15"
    },
    "1674": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1675": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "ADD",
      "path": "15"
    },
    "1676": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1678": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1679": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1680": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1681": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6A4"
    },
    "1684": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1685": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1686": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1688": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "ADD",
      "path": "15"
    },
    "1689": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1691": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1692": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "MUL",
      "path": "15"
    },
    "1693": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1694": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1695": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1696": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "1697": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "ADD",
      "path": "15"
    },
    "1698": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1701": {
      "fn": "Registry.stopLend",
      "offset": [
        4163,
        4179
      ],
      "op": "POP",
      "path": "15"
    },
    "1702": {
      "fn": "Registry.stopLend",
      "offset": [
        4096,
        4116
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD76"
    },
    "1705": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        4096,
        4180
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1706": {
      "fn": "Registry.stopLend",
      "offset": [
        4069,
        4181
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1707": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "POP",
      "path": "15"
    },
    "1708": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "POP",
      "path": "15"
    },
    "1709": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "POP",
      "path": "15"
    },
    "1710": {
      "fn": "Registry.stopLend",
      "offset": [
        3847,
        4188
      ],
      "op": "POP",
      "path": "15"
    },
    "1711": {
      "fn": "Registry.stopLend",
      "jump": "o",
      "offset": [
        3847,
        4188
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1712": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1713": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1715": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1716": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1718": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1719": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1720": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6D3"
    },
    "1723": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1724": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1726": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1727": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1735": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1736": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1738": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1739": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1742": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1743": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA2"
    },
    "1746": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1747": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1748": {
      "fn": "Registry.rent",
      "offset": [
        4494,
        4630
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 10,
      "value": "0x6E7"
    },
    "1751": {
      "fn": "Registry.rent",
      "offset": [
        4518,
        4528
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x185B"
    },
    "1754": {
      "fn": "Registry.rent",
      "offset": [
        4530,
        4620
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1757": {
      "fn": "Registry.rent",
      "offset": [
        4549,
        4560
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1758": {
      "fn": "Registry.rent",
      "offset": [
        4562,
        4572
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1759": {
      "fn": "Registry.rent",
      "offset": [
        4574,
        4581
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1760": {
      "fn": "Registry.rent",
      "offset": [
        4583,
        4593
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1761": {
      "fn": "Registry.rent",
      "offset": [
        4595,
        4607
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1762": {
      "fn": "Registry.rent",
      "offset": [
        4609,
        4619
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1763": {
      "fn": "Registry.rent",
      "offset": [
        4530,
        4548
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FB1"
    },
    "1766": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4530,
        4620
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1767": {
      "fn": "Registry.rent",
      "offset": [
        4494,
        4630
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1768": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "POP",
      "path": "15"
    },
    "1769": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "POP",
      "path": "15"
    },
    "1770": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "POP",
      "path": "15"
    },
    "1771": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "POP",
      "path": "15"
    },
    "1772": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "POP",
      "path": "15"
    },
    "1773": {
      "fn": "Registry.rent",
      "offset": [
        4194,
        4637
      ],
      "op": "POP",
      "path": "15"
    },
    "1774": {
      "fn": "Registry.rent",
      "jump": "o",
      "offset": [
        4194,
        4637
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1775": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1776": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1778": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1779": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1781": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1782": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1783": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x712"
    },
    "1786": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1787": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1789": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1798": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1799": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1801": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1802": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1805": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1806": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA2"
    },
    "1809": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1810": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1811": {
      "fn": "Registry.lend",
      "offset": [
        3508,
        3834
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 11,
      "value": "0x728"
    },
    "1814": {
      "fn": "Registry.lend",
      "offset": [
        3532,
        3542
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20E2"
    },
    "1817": {
      "fn": "Registry.lend",
      "offset": [
        3556,
        3824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1820": {
      "fn": "Registry.lend",
      "offset": [
        3592,
        3603
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1821": {
      "fn": "Registry.lend",
      "offset": [
        3621,
        3631
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1822": {
      "fn": "Registry.lend",
      "offset": [
        3649,
        3656
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1823": {
      "fn": "Registry.lend",
      "offset": [
        3674,
        3684
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1824": {
      "fn": "Registry.lend",
      "offset": [
        3702,
        3717
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1825": {
      "fn": "Registry.lend",
      "offset": [
        3735,
        3749
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1826": {
      "fn": "Registry.lend",
      "offset": [
        3767,
        3779
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1827": {
      "fn": "Registry.lend",
      "offset": [
        3797,
        3810
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1828": {
      "fn": "Registry.lend",
      "offset": [
        3556,
        3574
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CF"
    },
    "1831": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3556,
        3824
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1832": {
      "fn": "Registry.lend",
      "offset": [
        3508,
        3834
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1833": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1834": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1835": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1836": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1837": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1838": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1839": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1840": {
      "fn": "Registry.lend",
      "offset": [
        3136,
        3841
      ],
      "op": "POP",
      "path": "15"
    },
    "1841": {
      "fn": "Registry.lend",
      "jump": "o",
      "offset": [
        3136,
        3841
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1842": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1843": {
      "fn": "Registry.getRenting",
      "offset": [
        19795,
        19802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1845": {
      "fn": "Registry.getRenting",
      "offset": [
        19804,
        19810
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1846": {
      "fn": "Registry.getRenting",
      "offset": [
        19812,
        19817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1848": {
      "fn": "Registry.getRenting",
      "offset": [
        19819,
        19825
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1849": {
      "fn": "Registry.getRenting",
      "offset": [
        19841,
        19859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1851": {
      "fn": "Registry.getRenting",
      "offset": [
        19889,
        19899
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1852": {
      "fn": "Registry.getRenting",
      "offset": [
        19901,
        19908
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1853": {
      "fn": "Registry.getRenting",
      "offset": [
        19910,
        19920
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1854": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1856": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1857": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1859": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "ADD",
      "path": "15"
    },
    "1860": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x74F"
    },
    "1863": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1864": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1865": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1866": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1867": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "1870": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19872,
        19921
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1871": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1872": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1874": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1875": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1876": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1877": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1878": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "SUB",
      "path": "15"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1881": {
      "op": "NOT"
    },
    "1882": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "ADD",
      "path": "15"
    },
    "1883": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1884": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1885": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1886": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1887": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1888": {
      "fn": "Registry.getRenting",
      "offset": [
        19862,
        19922
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1889": {
      "fn": "Registry.getRenting",
      "offset": [
        19862,
        19922
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1890": {
      "fn": "Registry.getRenting",
      "offset": [
        19872,
        19921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1892": {
      "fn": "Registry.getRenting",
      "offset": [
        19862,
        19922
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1893": {
      "fn": "Registry.getRenting",
      "offset": [
        19862,
        19922
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1894": {
      "fn": "Registry.getRenting",
      "offset": [
        19862,
        19922
      ],
      "op": "ADD",
      "path": "15"
    },
    "1895": {
      "fn": "Registry.getRenting",
      "offset": [
        19862,
        19922
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1896": {
      "fn": "Registry.getRenting",
      "offset": [
        19932,
        19965
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1898": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1899": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1900": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1901": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19976
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1903": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1904": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1905": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1906": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1907": {
      "fn": "Registry.getRenting",
      "offset": [
        19968,
        19988
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1908": {
      "fn": "Registry.getRenting",
      "offset": [
        20006,
        20027
      ],
      "op": "SLOAD",
      "path": "15",
      "statement": 12
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "fn": "Registry.getRenting",
      "offset": [
        20006,
        20027
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1918": {
      "fn": "Registry.getRenting",
      "offset": [
        20006,
        20027
      ],
      "op": "AND",
      "path": "15"
    },
    "1919": {
      "fn": "Registry.getRenting",
      "offset": [
        20006,
        20027
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "fn": "Registry.getRenting",
      "offset": [
        20029,
        20047
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1926": {
      "fn": "Registry.getRenting",
      "offset": [
        20029,
        20047
      ],
      "op": "DIV",
      "path": "15"
    },
    "1927": {
      "fn": "Registry.getRenting",
      "offset": [
        20029,
        20047
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "1930": {
      "fn": "Registry.getRenting",
      "offset": [
        20029,
        20047
      ],
      "op": "AND",
      "path": "15"
    },
    "1931": {
      "fn": "Registry.getRenting",
      "offset": [
        20029,
        20047
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "1932": {
      "op": "POP"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "fn": "Registry.getRenting",
      "offset": [
        20049,
        20069
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1939": {
      "fn": "Registry.getRenting",
      "offset": [
        20049,
        20069
      ],
      "op": "DIV",
      "path": "15"
    },
    "1940": {
      "fn": "Registry.getRenting",
      "offset": [
        20049,
        20069
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1942": {
      "fn": "Registry.getRenting",
      "offset": [
        20049,
        20069
      ],
      "op": "AND",
      "path": "15"
    },
    "1943": {
      "fn": "Registry.getRenting",
      "offset": [
        20049,
        20069
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "fn": "Registry.getRenting",
      "offset": [
        20071,
        20087
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1951": {
      "fn": "Registry.getRenting",
      "offset": [
        20071,
        20087
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1952": {
      "fn": "Registry.getRenting",
      "offset": [
        20071,
        20087
      ],
      "op": "DIV",
      "path": "15"
    },
    "1953": {
      "fn": "Registry.getRenting",
      "offset": [
        20071,
        20087
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1958": {
      "fn": "Registry.getRenting",
      "offset": [
        20071,
        20087
      ],
      "op": "AND",
      "path": "15"
    },
    "1959": {
      "fn": "Registry.getRenting",
      "offset": [
        20071,
        20087
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "1960": {
      "op": "POP"
    },
    "1961": {
      "fn": "Registry.getRenting",
      "offset": [
        19671,
        20095
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1962": {
      "op": "POP"
    },
    "1963": {
      "op": "POP"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "op": "POP"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "fn": "Registry.getRenting",
      "jump": "o",
      "offset": [
        19671,
        20095
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1968": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10460,
        11800
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1969": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10549,
        10556
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1970": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10549,
        10556
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1971": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1972": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10562,
        10564
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1973": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10562,
        10570
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1975": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10562,
        10570
      ],
      "op": "ADD",
      "path": "15"
    },
    "1976": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10562,
        10570
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1977": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10558,
        10559
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1978": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10558,
        10570
      ],
      "op": "LT",
      "path": "15"
    },
    "1979": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1980": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD72"
    },
    "1983": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1984": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10591,
        10616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1986": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10664
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1987": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10675
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "1989": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10675
      ],
      "op": "ADD",
      "path": "15"
    },
    "1990": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10675
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1991": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10676,
        10678
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1992": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10676,
        10683
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1994": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10676,
        10683
      ],
      "op": "ADD",
      "path": "15"
    },
    "1995": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10676,
        10683
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1996": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1997": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1999": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "LT",
      "path": "15"
    },
    "2000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7DB"
    },
    "2003": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2004": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7DB"
    },
    "2007": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "2010": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10662,
        10684
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2012": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "MUL",
      "path": "15"
    },
    "2015": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2017": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "ADD",
      "path": "15"
    },
    "2018": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "ADD",
      "path": "15"
    },
    "2019": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10662,
        10684
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2020": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10688
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2021": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10696
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2023": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10696
      ],
      "op": "ADD",
      "path": "15"
    },
    "2024": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10696
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2025": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10697,
        10698
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2026": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2027": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2028": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2029": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "LT",
      "path": "15"
    },
    "2030": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F9"
    },
    "2033": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2034": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F9"
    },
    "2037": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "2040": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10686,
        10699
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2041": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2044": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "MUL",
      "path": "15"
    },
    "2045": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2047": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "ADD",
      "path": "15"
    },
    "2048": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "ADD",
      "path": "15"
    },
    "2049": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10686,
        10699
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10703
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2051": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10713
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2054": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10713
      ],
      "op": "ADD",
      "path": "15"
    },
    "2055": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10713
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2056": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10714,
        10715
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2057": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2058": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2059": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2060": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "LT",
      "path": "15"
    },
    "2061": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x818"
    },
    "2064": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2065": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x818"
    },
    "2068": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "2071": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10701,
        10716
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2073": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "MUL",
      "path": "15"
    },
    "2076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2078": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "ADD",
      "path": "15"
    },
    "2079": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "ADD",
      "path": "15"
    },
    "2080": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10701,
        10716
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2081": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2086": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "ADD",
      "path": "15"
    },
    "2087": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x832"
    },
    "2090": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2093": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2094": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "2097": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10645,
        10717
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2098": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2099": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2101": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2102": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2104": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2105": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "SUB",
      "path": "15"
    },
    "2107": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "SUB",
      "path": "15"
    },
    "2108": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2109": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2110": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2111": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10645,
        10717
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2114": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10635,
        10718
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2115": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10635,
        10718
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2116": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10635,
        10718
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2117": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10635,
        10718
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2119": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10635,
        10718
      ],
      "op": "ADD",
      "path": "15"
    },
    "2120": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10635,
        10718
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10591,
        10718
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2122": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10591,
        10718
      ],
      "op": "POP",
      "path": "15"
    },
    "2123": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10732,
        10757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2125": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10805
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10816
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10816
      ],
      "op": "ADD",
      "path": "15"
    },
    "2129": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10816
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2130": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10817,
        10819
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2131": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10817,
        10824
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2133": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10817,
        10824
      ],
      "op": "ADD",
      "path": "15"
    },
    "2134": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10817,
        10824
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2135": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2136": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2137": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2138": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "LT",
      "path": "15"
    },
    "2139": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x866"
    },
    "2142": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2143": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x866"
    },
    "2146": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "2149": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10803,
        10825
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2150": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2151": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2153": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "MUL",
      "path": "15"
    },
    "2154": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2156": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "ADD",
      "path": "15"
    },
    "2157": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "ADD",
      "path": "15"
    },
    "2158": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10803,
        10825
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2159": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10829
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2162": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10837
      ],
      "op": "ADD",
      "path": "15"
    },
    "2163": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10837
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2164": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10838,
        10839
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2165": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2166": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2167": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2168": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "LT",
      "path": "15"
    },
    "2169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x884"
    },
    "2172": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2173": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x884"
    },
    "2176": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "2179": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10827,
        10840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2180": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2181": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2183": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "MUL",
      "path": "15"
    },
    "2184": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2186": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "ADD",
      "path": "15"
    },
    "2187": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "ADD",
      "path": "15"
    },
    "2188": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10827,
        10840
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10844
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10854
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "2193": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10854
      ],
      "op": "ADD",
      "path": "15"
    },
    "2194": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10854
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10855,
        10856
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2196": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2197": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2198": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "LT",
      "path": "15"
    },
    "2200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A3"
    },
    "2203": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2204": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A3"
    },
    "2207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "2210": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10842,
        10857
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2211": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2212": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2214": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "MUL",
      "path": "15"
    },
    "2215": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2217": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "ADD",
      "path": "15"
    },
    "2218": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "ADD",
      "path": "15"
    },
    "2219": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10842,
        10857
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2220": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2222": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2225": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "ADD",
      "path": "15"
    },
    "2226": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BD"
    },
    "2229": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2230": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2231": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2232": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2233": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "2236": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10786,
        10858
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2237": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2238": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2240": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2241": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2244": {
      "op": "NOT"
    },
    "2245": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2246": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2247": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "SUB",
      "path": "15"
    },
    "2248": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "ADD",
      "path": "15"
    },
    "2249": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2250": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2251": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2252": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2253": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2254": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2255": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2256": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2258": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2259": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2260": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "ADD",
      "path": "15"
    },
    "2261": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2262": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10873,
        10906
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2264": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2266": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2267": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10917
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "2269": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2270": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2271": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2272": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2274": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2275": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2276": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2277": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        10994
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "2279": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2280": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2281": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2282": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2283": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2284": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10986,
        11013
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2285": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 13,
      "value": "0x100"
    },
    "2288": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2289": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2290": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2291": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2292": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2293": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2295": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10776,
        10859
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2299": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2300": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9AB"
    },
    "2303": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2305": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10909,
        10936
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2306": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2307": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10786,
        10858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2308": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2310": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2311": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2313": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2314": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "GT",
      "path": "15"
    },
    "2315": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2316": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "2319": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2320": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "2323": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "2326": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2327": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2328": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2330": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2331": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "GT",
      "path": "15"
    },
    "2332": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2333": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x928"
    },
    "2336": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2337": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x928"
    },
    "2340": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "2343": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2344": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2345": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2346": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2347": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2348": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2349": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2352": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2353": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DIV",
      "path": "15"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2363": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2365": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2366": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2367": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2374": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DIV",
      "path": "15"
    },
    "2375": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2377": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2378": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2379": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2380": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2382": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2383": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2384": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2389": {
      "op": "SHL"
    },
    "2390": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2391": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DIV",
      "path": "15"
    },
    "2392": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2394": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2395": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2396": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SHL",
      "path": "15"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2403": {
      "op": "SHL"
    },
    "2404": {
      "op": "SUB"
    },
    "2405": {
      "op": "NOT"
    },
    "2406": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2407": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2409": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2410": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2411": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2418": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DIV",
      "path": "15"
    },
    "2419": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2422": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2423": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2424": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2425": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2427": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2428": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2429": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2436": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DIV",
      "path": "15"
    },
    "2437": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2438": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "2440": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2441": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2442": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2447": {
      "op": "SHL"
    },
    "2448": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2449": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DIV",
      "path": "15"
    },
    "2450": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2451": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2452": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "2454": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2455": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2456": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2463": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2464": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "DIV",
      "path": "15"
    },
    "2465": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "AND",
      "path": "15"
    },
    "2466": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2467": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2468": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2469": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "ADD",
      "path": "15"
    },
    "2470": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2471": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11042
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2808"
    },
    "2474": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2475": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11027,
        11051
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2476": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 14,
      "value": "0x40"
    },
    "2478": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2479": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2480": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2482": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2483": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "ADD",
      "path": "15"
    },
    "2484": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2485": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2486": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2487": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2497": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "AND",
      "path": "15"
    },
    "2498": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2499": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2504": {
      "op": "SHL"
    },
    "2505": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2506": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DIV",
      "path": "15"
    },
    "2507": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2509": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "AND",
      "path": "15"
    },
    "2510": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2512": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2513": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "ADD",
      "path": "15"
    },
    "2514": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2521": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DIV",
      "path": "15"
    },
    "2522": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2527": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "AND",
      "path": "15"
    },
    "2528": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2529": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2530": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "ADD",
      "path": "15"
    },
    "2531": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2532": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2533": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2534": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2539": {
      "op": "SHL"
    },
    "2540": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2541": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2542": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DIV",
      "path": "15"
    },
    "2543": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2546": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "AND",
      "path": "15"
    },
    "2547": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2549": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2550": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "ADD",
      "path": "15"
    },
    "2551": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2552": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA00"
    },
    "2555": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2556": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x288B"
    },
    "2559": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11065,
        11089
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2560": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11065,
        11089
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2561": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 15,
      "value": "0x40"
    },
    "2563": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2564": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2565": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2567": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2568": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "ADD",
      "path": "15"
    },
    "2569": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2570": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2571": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2572": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "op": "SUB"
    },
    "2581": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2582": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "AND",
      "path": "15"
    },
    "2583": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2584": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2589": {
      "op": "SHL"
    },
    "2590": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2591": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DIV",
      "path": "15"
    },
    "2592": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2594": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "AND",
      "path": "15"
    },
    "2595": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2597": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2598": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "ADD",
      "path": "15"
    },
    "2599": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2604": {
      "op": "SHL"
    },
    "2605": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2606": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DIV",
      "path": "15"
    },
    "2607": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2612": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "AND",
      "path": "15"
    },
    "2613": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2614": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2615": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "ADD",
      "path": "15"
    },
    "2616": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2617": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2618": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2619": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2624": {
      "op": "SHL"
    },
    "2625": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2626": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2627": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DIV",
      "path": "15"
    },
    "2628": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2631": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "AND",
      "path": "15"
    },
    "2632": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2634": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2635": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "ADD",
      "path": "15"
    },
    "2636": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2637": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA57"
    },
    "2640": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2641": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11131,
        11141
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2642": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11143,
        11158
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2643": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11121
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2911"
    },
    "2646": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11103,
        11159
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2647": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11103,
        11159
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2648": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11202,
        11221
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 16
    },
    "2649": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11202,
        11221
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2650": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11202,
        11221
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2652": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11202,
        11221
      ],
      "op": "AND",
      "path": "15"
    },
    "2653": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11202,
        11221
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2655": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2656": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "GT",
      "path": "15"
    },
    "2657": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2658": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA6D"
    },
    "2661": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2662": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA6D"
    },
    "2665": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "2668": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11181,
        11221
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2669": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2670": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11183
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2671": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2673": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11195
      ],
      "op": "ADD",
      "path": "15"
    },
    "2674": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11195
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2675": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11196,
        11197
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2676": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2677": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2678": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2679": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "LT",
      "path": "15"
    },
    "2680": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA83"
    },
    "2683": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2684": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA83"
    },
    "2687": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "2690": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11181,
        11198
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2691": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2692": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2694": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "MUL",
      "path": "15"
    },
    "2695": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2697": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "ADD",
      "path": "15"
    },
    "2698": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "ADD",
      "path": "15"
    },
    "2699": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11198
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2700": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2702": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2703": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "GT",
      "path": "15"
    },
    "2704": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2705": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA9C"
    },
    "2708": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2709": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA9C"
    },
    "2712": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "2715": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11181,
        11221
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2716": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2717": {
      "branch": 139,
      "fn": "Registry.handleStopRent",
      "offset": [
        11181,
        11221
      ],
      "op": "EQ",
      "path": "15"
    },
    "2718": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAB9"
    },
    "2721": {
      "branch": 139,
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2722": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2724": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2725": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2731": {
      "op": "SHL"
    },
    "2732": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2733": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2734": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2736": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "ADD",
      "path": "15"
    },
    "2737": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "2740": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2741": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49FD"
    },
    "2744": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11173,
        11253
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2745": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11173,
        11253
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2746": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 17
    },
    "2747": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2748": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11293
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2749": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11293
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2756": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2757": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "DIV",
      "path": "15"
    },
    "2758": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2761": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2762": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2763": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11297,
        11315
      ],
      "op": "AND",
      "path": "15"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11293
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2770": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11293
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2771": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11293
      ],
      "op": "DIV",
      "path": "15"
    },
    "2772": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11293
      ],
      "op": "AND",
      "path": "15"
    },
    "2773": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11315
      ],
      "op": "GT",
      "path": "15"
    },
    "2774": {
      "branch": 140,
      "fn": "Registry.handleStopRent",
      "offset": [
        11275,
        11315
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2775": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB1A"
    },
    "2778": {
      "branch": 140,
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2779": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2781": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2782": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2788": {
      "op": "SHL"
    },
    "2789": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2790": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2793": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2795": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2796": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "ADD",
      "path": "15"
    },
    "2797": {
      "op": "MSTORE"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2802": {
      "op": "DUP3"
    },
    "2803": {
      "op": "ADD"
    },
    "2804": {
      "op": "MSTORE"
    },
    "2805": {
      "op": "PUSH21",
      "value": "0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2829": {
      "op": "SHL"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2832": {
      "op": "DUP3"
    },
    "2833": {
      "op": "ADD"
    },
    "2834": {
      "op": "MSTORE"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "2841": {
      "op": "JUMP"
    },
    "2842": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11267,
        11341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2843": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11405,
        11421
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2844": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11405,
        11421
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2845": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11355,
        11384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2847": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11355,
        11384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2848": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11387,
        11421
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB36"
    },
    "2851": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11387,
        11421
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11405,
        11421
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2858": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11405,
        11421
      ],
      "op": "DIV",
      "path": "15"
    },
    "2859": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11405,
        11421
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2864": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11405,
        11421
      ],
      "op": "AND",
      "path": "15"
    },
    "2865": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11387,
        11402
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2866": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11387,
        11421
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "2869": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11387,
        11421
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2870": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11387,
        11421
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2871": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 18,
      "value": "0x40"
    },
    "2873": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2874": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2875": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2878": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2879": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "2880": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2881": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2882": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2883": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2884": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2885": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11355,
        11421
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2886": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11355,
        11421
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC53"
    },
    "2891": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2892": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11454,
        11461
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2893": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11454,
        11461
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2894": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2895": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2896": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2898": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "2899": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2901": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2902": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "GT",
      "path": "15"
    },
    "2903": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2904": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB63"
    },
    "2907": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2908": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB63"
    },
    "2911": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "2914": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2915": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2916": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2918": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2919": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "GT",
      "path": "15"
    },
    "2920": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2921": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB74"
    },
    "2924": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2925": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB74"
    },
    "2928": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "2931": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2932": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2933": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2934": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2935": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2936": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2948": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2949": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "2950": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2951": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "2952": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2954": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2955": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2956": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "2957": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2958": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2959": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2960": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2961": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2969": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2970": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "2971": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2972": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "2973": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2975": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2976": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP9",
      "path": "15"
    },
    "2977": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "2978": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2979": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2980": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2981": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "op": "NOT"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2997": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "2998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3001": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3002": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SHL",
      "path": "15"
    },
    "3003": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3004": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3005": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3006": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3007": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3009": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3010": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP11",
      "path": "15"
    },
    "3011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3012": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3013": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3015": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3016": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3023": {
      "op": "SHL"
    },
    "3024": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP10",
      "path": "15"
    },
    "3025": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "3026": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3027": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3028": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "3030": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3031": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP13",
      "path": "15"
    },
    "3032": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3033": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3034": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3035": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3036": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3041": {
      "op": "SHL"
    },
    "3042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP11",
      "path": "15"
    },
    "3043": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "3044": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3045": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3046": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "3048": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP13",
      "path": "15"
    },
    "3049": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3055": {
      "op": "SHL"
    },
    "3056": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP11",
      "path": "15"
    },
    "3057": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "3058": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3059": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3060": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "3062": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP13",
      "path": "15"
    },
    "3063": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3064": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3069": {
      "op": "SHL"
    },
    "3070": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3071": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "3072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "3073": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3074": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3077": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3078": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3079": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "3080": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3081": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3082": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3085": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3086": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3087": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "3088": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3089": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3090": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP12",
      "path": "15"
    },
    "3093": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3094": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "3095": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3096": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3097": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3098": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3105": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "3106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3107": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3108": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3109": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3110": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3111": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3112": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3114": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3115": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3116": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3122": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3123": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "3124": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3125": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3127": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3129": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3130": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3131": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3138": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3139": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DIV",
      "path": "15"
    },
    "3140": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3141": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3142": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "AND",
      "path": "15"
    },
    "3143": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3144": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3145": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "ADD",
      "path": "15"
    },
    "3146": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3147": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3148": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3149": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3150": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11472,
        11493
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3151": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11453
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C6"
    },
    "3154": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3155": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11435,
        11494
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3156": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11508,
        11656
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 19,
      "value": "0xCDE"
    },
    "3159": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11545,
        11552
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11554,
        11561
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3161": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11565
      ],
      "op": "DUP10",
      "path": "15"
    },
    "3162": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11576
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3164": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11576
      ],
      "op": "ADD",
      "path": "15"
    },
    "3165": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11576
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3166": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11577,
        11579
      ],
      "op": "DUP11",
      "path": "15"
    },
    "3167": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11577,
        11584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11577,
        11584
      ],
      "op": "ADD",
      "path": "15"
    },
    "3170": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11577,
        11584
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3171": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3172": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3173": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3174": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "LT",
      "path": "15"
    },
    "3175": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC72"
    },
    "3178": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3179": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC72"
    },
    "3182": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "3185": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11563,
        11585
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3186": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3187": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "MUL",
      "path": "15"
    },
    "3190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3192": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "ADD",
      "path": "15"
    },
    "3193": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "ADD",
      "path": "15"
    },
    "3194": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11563,
        11585
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11589
      ],
      "op": "DUP11",
      "path": "15"
    },
    "3196": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11601
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3198": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11601
      ],
      "op": "ADD",
      "path": "15"
    },
    "3199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11601
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11602,
        11604
      ],
      "op": "DUP12",
      "path": "15"
    },
    "3201": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11602,
        11609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3203": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11602,
        11609
      ],
      "op": "ADD",
      "path": "15"
    },
    "3204": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11602,
        11609
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3205": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3206": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3208": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "LT",
      "path": "15"
    },
    "3209": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC94"
    },
    "3212": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3213": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC94"
    },
    "3216": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "3219": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11587,
        11610
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3220": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3221": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "MUL",
      "path": "15"
    },
    "3224": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3226": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "ADD",
      "path": "15"
    },
    "3227": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "ADD",
      "path": "15"
    },
    "3228": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11587,
        11610
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3229": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11614
      ],
      "op": "DUP12",
      "path": "15"
    },
    "3230": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11622
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "3232": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11622
      ],
      "op": "ADD",
      "path": "15"
    },
    "3233": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11622
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3234": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11623,
        11624
      ],
      "op": "DUP12",
      "path": "15"
    },
    "3235": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3236": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3237": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3238": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "LT",
      "path": "15"
    },
    "3239": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCB2"
    },
    "3242": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3243": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCB2"
    },
    "3246": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "3249": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11612,
        11625
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3250": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3251": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3253": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "MUL",
      "path": "15"
    },
    "3254": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3256": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "ADD",
      "path": "15"
    },
    "3257": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "ADD",
      "path": "15"
    },
    "3258": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11612,
        11625
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3259": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11629
      ],
      "op": "DUP13",
      "path": "15"
    },
    "3260": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11639
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3263": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11639
      ],
      "op": "ADD",
      "path": "15"
    },
    "3264": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11639
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11640,
        11641
      ],
      "op": "DUP13",
      "path": "15"
    },
    "3266": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3267": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3268": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3269": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "LT",
      "path": "15"
    },
    "3270": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCD1"
    },
    "3273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3274": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCD1"
    },
    "3277": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "3280": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11627,
        11642
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3281": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3282": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3284": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "MUL",
      "path": "15"
    },
    "3285": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3287": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "ADD",
      "path": "15"
    },
    "3288": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "ADD",
      "path": "15"
    },
    "3289": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11627,
        11642
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3290": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11508,
        11527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C4F"
    },
    "3293": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11508,
        11656
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11508,
        11656
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3295": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11696
      ],
      "op": "DUP7",
      "path": "15",
      "statement": 20
    },
    "3296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11706
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "3299": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11706
      ],
      "op": "ADD",
      "path": "15"
    },
    "3300": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11706
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3301": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11707,
        11708
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3302": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3303": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3305": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "LT",
      "path": "15"
    },
    "3306": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCF5"
    },
    "3309": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3310": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCF5"
    },
    "3313": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "3316": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11694,
        11709
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3317": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3318": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3320": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "MUL",
      "path": "15"
    },
    "3321": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3323": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "ADD",
      "path": "15"
    },
    "3324": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "ADD",
      "path": "15"
    },
    "3325": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11694,
        11709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3326": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D"
    },
    "3359": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11718,
        11733
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "3360": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3362": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3363": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD38"
    },
    "3366": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3367": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3368": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3373": {
      "op": "SWAP2"
    },
    "3374": {
      "op": "SWAP1"
    },
    "3375": {
      "op": "SWAP2"
    },
    "3376": {
      "op": "AND"
    },
    "3377": {
      "op": "DUP2"
    },
    "3378": {
      "op": "MSTORE"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3381": {
      "op": "ADD"
    },
    "3382": {
      "op": "SWAP1"
    },
    "3383": {
      "op": "JUMP"
    },
    "3384": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3385": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3387": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3388": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3389": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3390": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "SUB",
      "path": "15"
    },
    "3391": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3392": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11675,
        11735
      ],
      "op": "LOG2",
      "path": "15"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "op": "POP"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 21,
      "value": "0x0"
    },
    "3398": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3399": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3400": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3401": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "3403": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3405": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3406": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3408": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3409": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11756,
        11783
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3410": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11749,
        11783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3411": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11749,
        11783
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3418": {
      "op": "SHL"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "op": "NOT"
    },
    "3421": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11749,
        11783
      ],
      "op": "AND",
      "path": "15"
    },
    "3422": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11749,
        11783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3423": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11749,
        11783
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3424": {
      "op": "POP"
    },
    "3425": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 22
    },
    "3426": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6A"
    },
    "3429": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3430": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "3433": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        10572,
        10575
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3434": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3435": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3436": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "POP",
      "path": "15"
    },
    "3437": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10572,
        10575
      ],
      "op": "POP",
      "path": "15"
    },
    "3438": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7B3"
    },
    "3441": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3442": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3443": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10532,
        11794
      ],
      "op": "POP",
      "path": "15"
    },
    "3444": {
      "fn": "Registry.handleStopRent",
      "offset": [
        10460,
        11800
      ],
      "op": "POP",
      "path": "15"
    },
    "3445": {
      "fn": "Registry.handleStopRent",
      "jump": "o",
      "offset": [
        10460,
        11800
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3446": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22115,
        22949
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3447": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22370,
        22388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD7E"
    },
    "3450": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22370,
        22388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F1B"
    },
    "3453": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        22370,
        22388
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3454": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22370,
        22388
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3455": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 23,
      "value": "0x40"
    },
    "3457": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3458": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3459": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C0"
    },
    "3462": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3463": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3465": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3466": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3467": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22434,
        22435
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3469": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3470": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3471": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3473": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3474": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22456,
        22457
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3476": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3477": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3478": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3480": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3481": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22484,
        22495
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3482": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3483": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3484": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3486": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3487": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22521,
        22531
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3488": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3489": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3490": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3492": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3493": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22554,
        22561
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3494": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3495": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3496": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3498": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3499": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22601,
        22602
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3507": {
      "op": "SHL"
    },
    "3508": {
      "op": "SUB"
    },
    "3509": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3510": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "GT",
      "path": "15"
    },
    "3511": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3512": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDC3"
    },
    "3515": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3516": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDC3"
    },
    "3519": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D73"
    },
    "3522": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        22587,
        22603
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3523": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3524": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3526": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3527": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3528": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3529": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3530": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3531": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3532": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3534": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "MUL",
      "path": "15"
    },
    "3535": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3537": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "ADD",
      "path": "15"
    },
    "3538": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3539": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "ADD",
      "path": "15"
    },
    "3540": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3542": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3543": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3544": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3545": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDEC"
    },
    "3548": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3549": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3550": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3552": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "ADD",
      "path": "15"
    },
    "3553": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3555": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3556": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "MUL",
      "path": "15"
    },
    "3557": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3558": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3559": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3560": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3561": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "ADD",
      "path": "15"
    },
    "3562": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3563": {
      "op": "POP"
    },
    "3564": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22587,
        22603
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3565": {
      "op": "POP"
    },
    "3566": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3567": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3568": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3570": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3571": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22800,
        22801
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3573": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3575": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3576": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3577": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3578": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3579": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3580": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3581": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3583": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "MUL",
      "path": "15"
    },
    "3584": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3586": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "ADD",
      "path": "15"
    },
    "3587": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3588": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "ADD",
      "path": "15"
    },
    "3589": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3591": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3592": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3593": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3594": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE1D"
    },
    "3597": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3598": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3599": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3601": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "ADD",
      "path": "15"
    },
    "3602": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3604": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3605": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "MUL",
      "path": "15"
    },
    "3606": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3607": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3608": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3609": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3610": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "ADD",
      "path": "15"
    },
    "3611": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22788,
        22802
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3614": {
      "op": "POP"
    },
    "3615": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3616": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3617": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3619": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3620": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22845,
        22846
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3622": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3624": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3625": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3626": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3627": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3628": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3629": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3630": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3632": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "MUL",
      "path": "15"
    },
    "3633": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3635": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "ADD",
      "path": "15"
    },
    "3636": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3637": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "ADD",
      "path": "15"
    },
    "3638": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3640": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3641": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3642": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3643": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE4E"
    },
    "3646": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3647": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3648": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3650": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "ADD",
      "path": "15"
    },
    "3651": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3653": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3654": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "MUL",
      "path": "15"
    },
    "3655": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3656": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3657": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3658": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3659": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "ADD",
      "path": "15"
    },
    "3660": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3661": {
      "op": "POP"
    },
    "3662": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22832,
        22847
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3663": {
      "op": "POP"
    },
    "3664": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3665": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3666": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3668": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3669": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3670": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3671": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3672": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3673": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3675": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3676": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3677": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3678": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3679": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3680": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3682": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3685": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3687": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3688": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3689": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3690": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3691": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3692": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3693": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3695": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "MUL",
      "path": "15"
    },
    "3696": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3698": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "ADD",
      "path": "15"
    },
    "3699": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3700": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "ADD",
      "path": "15"
    },
    "3701": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3703": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3704": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3705": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3706": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE8D"
    },
    "3709": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3710": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3711": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3713": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "ADD",
      "path": "15"
    },
    "3714": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3716": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3717": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "MUL",
      "path": "15"
    },
    "3718": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3719": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3720": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3721": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3722": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "ADD",
      "path": "15"
    },
    "3723": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22701,
        22715
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3726": {
      "op": "POP"
    },
    "3727": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3728": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3729": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3731": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3732": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22755,
        22756
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3734": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3736": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3737": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3738": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3739": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3740": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3741": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3742": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3744": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "MUL",
      "path": "15"
    },
    "3745": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3747": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "ADD",
      "path": "15"
    },
    "3748": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3749": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "ADD",
      "path": "15"
    },
    "3750": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3752": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3753": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3754": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3755": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEBE"
    },
    "3758": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3759": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3760": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3762": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "ADD",
      "path": "15"
    },
    "3763": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3765": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3766": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "MUL",
      "path": "15"
    },
    "3767": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3768": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3769": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3770": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3771": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "ADD",
      "path": "15"
    },
    "3772": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22741,
        22757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3777": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3778": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3780": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3781": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22887,
        22888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3783": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3785": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3786": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3787": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3788": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3789": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3790": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3791": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3793": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "MUL",
      "path": "15"
    },
    "3794": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3796": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "ADD",
      "path": "15"
    },
    "3797": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3798": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "ADD",
      "path": "15"
    },
    "3799": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3801": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3802": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3803": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3804": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEEF"
    },
    "3807": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3808": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3809": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3811": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "ADD",
      "path": "15"
    },
    "3812": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3814": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3815": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "MUL",
      "path": "15"
    },
    "3816": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3817": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3818": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3819": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3820": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "ADD",
      "path": "15"
    },
    "3821": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22875,
        22889
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3824": {
      "op": "POP"
    },
    "3825": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3826": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3827": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3829": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3830": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22929,
        22930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3832": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3834": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3835": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3836": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3837": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3838": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3839": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3840": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3842": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "MUL",
      "path": "15"
    },
    "3843": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3845": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "ADD",
      "path": "15"
    },
    "3846": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3847": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "ADD",
      "path": "15"
    },
    "3848": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3850": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3851": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3852": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3853": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF20"
    },
    "3856": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3857": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3858": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3860": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "ADD",
      "path": "15"
    },
    "3861": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3863": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3864": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "MUL",
      "path": "15"
    },
    "3865": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3866": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3867": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3868": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3869": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "ADD",
      "path": "15"
    },
    "3870": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22918,
        22931
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3873": {
      "op": "POP"
    },
    "3874": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3875": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22405,
        22942
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3876": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22400,
        22942
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "3877": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22115,
        22949
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "op": "POP"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "POP"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "fn": "Registry.createActionCallData",
      "jump": "o",
      "offset": [
        22115,
        22949
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3885": {
      "fn": "Registry.bundleCall",
      "offset": [
        15676,
        16267
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3886": {
      "fn": "Registry.bundleCall",
      "offset": [
        15820,
        15821
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0x0"
    },
    "3888": {
      "fn": "Registry.bundleCall",
      "offset": [
        15797,
        15799
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3889": {
      "fn": "Registry.bundleCall",
      "offset": [
        15797,
        15810
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3891": {
      "fn": "Registry.bundleCall",
      "offset": [
        15797,
        15810
      ],
      "op": "ADD",
      "path": "15"
    },
    "3892": {
      "fn": "Registry.bundleCall",
      "offset": [
        15797,
        15810
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3893": {
      "fn": "Registry.bundleCall",
      "offset": [
        15797,
        15817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3894": {
      "branch": 141,
      "fn": "Registry.bundleCall",
      "offset": [
        15797,
        15821
      ],
      "op": "GT",
      "path": "15"
    },
    "3895": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF73"
    },
    "3898": {
      "branch": 141,
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3899": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3901": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3908": {
      "op": "SHL"
    },
    "3909": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3910": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3913": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3915": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3916": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "ADD",
      "path": "15"
    },
    "3917": {
      "op": "MSTORE"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3922": {
      "op": "DUP3"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "op": "PUSH14",
      "value": "0x52654E46543A3A6E6F206E667473"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3942": {
      "op": "SHL"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3945": {
      "op": "DUP3"
    },
    "3946": {
      "op": "ADD"
    },
    "3947": {
      "op": "MSTORE"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "3954": {
      "op": "JUMP"
    },
    "3955": {
      "fn": "Registry.bundleCall",
      "offset": [
        15789,
        15840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3956": {
      "fn": "Registry.bundleCall",
      "offset": [
        15869,
        15871
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3957": {
      "fn": "Registry.bundleCall",
      "offset": [
        15869,
        15882
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3959": {
      "fn": "Registry.bundleCall",
      "offset": [
        15869,
        15882
      ],
      "op": "ADD",
      "path": "15"
    },
    "3960": {
      "fn": "Registry.bundleCall",
      "offset": [
        15869,
        15882
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3961": {
      "fn": "Registry.bundleCall",
      "offset": [
        15869,
        15889
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3962": {
      "fn": "Registry.bundleCall",
      "offset": [
        15857,
        15859
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3963": {
      "fn": "Registry.bundleCall",
      "offset": [
        15857,
        15865
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3965": {
      "fn": "Registry.bundleCall",
      "offset": [
        15857,
        15865
      ],
      "op": "ADD",
      "path": "15"
    },
    "3966": {
      "fn": "Registry.bundleCall",
      "offset": [
        15857,
        15865
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3967": {
      "fn": "Registry.bundleCall",
      "offset": [
        15857,
        15889
      ],
      "op": "EQ",
      "path": "15"
    },
    "3968": {
      "fn": "Registry.bundleCall",
      "offset": [
        15850,
        16240
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1055"
    },
    "3971": {
      "fn": "Registry.bundleCall",
      "offset": [
        15850,
        16240
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3972": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15955
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3973": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15966
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3975": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15966
      ],
      "op": "ADD",
      "path": "15"
    },
    "3976": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15966
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3977": {
      "fn": "Registry.bundleCall",
      "offset": [
        15967,
        15969
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3978": {
      "fn": "Registry.bundleCall",
      "offset": [
        15967,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3980": {
      "fn": "Registry.bundleCall",
      "offset": [
        15967,
        15975
      ],
      "op": "ADD",
      "path": "15"
    },
    "3981": {
      "fn": "Registry.bundleCall",
      "offset": [
        15967,
        15975
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3982": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3983": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3984": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3985": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "LT",
      "path": "15"
    },
    "3986": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF9D"
    },
    "3989": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3990": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF9D"
    },
    "3993": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "3996": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15953,
        15976
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3997": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3998": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4000": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "MUL",
      "path": "15"
    },
    "4001": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4003": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "ADD",
      "path": "15"
    },
    "4004": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "ADD",
      "path": "15"
    },
    "4005": {
      "fn": "Registry.bundleCall",
      "offset": [
        15953,
        15976
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4012": {
      "op": "SHL"
    },
    "4013": {
      "op": "SUB"
    },
    "4014": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15976
      ],
      "op": "AND",
      "path": "15"
    },
    "4015": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15929
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4016": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15940
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4018": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15940
      ],
      "op": "ADD",
      "path": "15"
    },
    "4019": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15940
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4020": {
      "fn": "Registry.bundleCall",
      "offset": [
        15941,
        15943
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4021": {
      "fn": "Registry.bundleCall",
      "offset": [
        15941,
        15948
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4023": {
      "fn": "Registry.bundleCall",
      "offset": [
        15941,
        15948
      ],
      "op": "ADD",
      "path": "15"
    },
    "4024": {
      "fn": "Registry.bundleCall",
      "offset": [
        15941,
        15948
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4025": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4026": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4027": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4028": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "LT",
      "path": "15"
    },
    "4029": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC8"
    },
    "4032": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4033": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC8"
    },
    "4036": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4039": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15927,
        15949
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4040": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4041": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4043": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "MUL",
      "path": "15"
    },
    "4044": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4046": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "ADD",
      "path": "15"
    },
    "4047": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "ADD",
      "path": "15"
    },
    "4048": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15949
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4055": {
      "op": "SHL"
    },
    "4056": {
      "op": "SUB"
    },
    "4057": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15976
      ],
      "op": "AND",
      "path": "15"
    },
    "4058": {
      "fn": "Registry.bundleCall",
      "offset": [
        15927,
        15976
      ],
      "op": "EQ",
      "path": "15"
    },
    "4059": {
      "fn": "Registry.bundleCall",
      "offset": [
        15926,
        16058
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4060": {
      "fn": "Registry.bundleCall",
      "offset": [
        15926,
        16058
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4061": {
      "fn": "Registry.bundleCall",
      "offset": [
        15926,
        16058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1018"
    },
    "4064": {
      "fn": "Registry.bundleCall",
      "offset": [
        15926,
        16058
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4065": {
      "op": "POP"
    },
    "4066": {
      "fn": "Registry.bundleCall",
      "offset": [
        16030,
        16057
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4068": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16004
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4069": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16016
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4071": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16016
      ],
      "op": "ADD",
      "path": "15"
    },
    "4072": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16016
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4073": {
      "fn": "Registry.bundleCall",
      "offset": [
        16017,
        16019
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4074": {
      "fn": "Registry.bundleCall",
      "offset": [
        16017,
        16025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4076": {
      "fn": "Registry.bundleCall",
      "offset": [
        16017,
        16025
      ],
      "op": "ADD",
      "path": "15"
    },
    "4077": {
      "fn": "Registry.bundleCall",
      "offset": [
        16017,
        16025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4078": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4079": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4080": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4081": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "LT",
      "path": "15"
    },
    "4082": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFD"
    },
    "4085": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4086": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFD"
    },
    "4089": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4092": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        16002,
        16026
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4093": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4094": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4096": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "MUL",
      "path": "15"
    },
    "4097": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4099": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "ADD",
      "path": "15"
    },
    "4100": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "ADD",
      "path": "15"
    },
    "4101": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16026
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4102": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4104": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4105": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "GT",
      "path": "15"
    },
    "4106": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4107": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1016"
    },
    "4110": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4111": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1016"
    },
    "4114": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "4117": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        16002,
        16057
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4118": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4119": {
      "fn": "Registry.bundleCall",
      "offset": [
        16002,
        16057
      ],
      "op": "EQ",
      "path": "15"
    },
    "4120": {
      "fn": "Registry.bundleCall",
      "offset": [
        15926,
        16058
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4121": {
      "fn": "Registry.bundleCall",
      "offset": [
        15905,
        16230
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4122": {
      "fn": "Registry.bundleCall",
      "offset": [
        15905,
        16230
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1035"
    },
    "4125": {
      "fn": "Registry.bundleCall",
      "offset": [
        15905,
        16230
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4126": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16099
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 25,
      "value": "0x20"
    },
    "4128": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16099
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4129": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16099
      ],
      "op": "ADD",
      "path": "15"
    },
    "4130": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4131": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4132": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4133": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x102D"
    },
    "4136": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4137": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "4140": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        16091,
        16101
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4141": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4142": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4143": {
      "fn": "Registry.bundleCall",
      "offset": [
        16091,
        16101
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4144": {
      "op": "POP"
    },
    "4145": {
      "fn": "Registry.bundleCall",
      "offset": [
        15850,
        16240
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF73"
    },
    "4148": {
      "fn": "Registry.bundleCall",
      "offset": [
        15850,
        16240
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4149": {
      "fn": "Registry.bundleCall",
      "offset": [
        15905,
        16230
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4150": {
      "fn": "Registry.bundleCall",
      "offset": [
        16140,
        16151
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 26,
      "value": "0x1042"
    },
    "4153": {
      "fn": "Registry.bundleCall",
      "offset": [
        16148,
        16150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4154": {
      "fn": "Registry.bundleCall",
      "offset": [
        16140,
        16147
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4155": {
      "fn": "Registry.bundleCall",
      "offset": [
        16140,
        16151
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4160": {
      "fn": "Registry.bundleCall",
      "offset": [
        16140,
        16151
      ],
      "op": "AND",
      "path": "15"
    },
    "4161": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        16140,
        16151
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4162": {
      "fn": "Registry.bundleCall",
      "offset": [
        16140,
        16151
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4163": {
      "fn": "Registry.bundleCall",
      "offset": [
        16179,
        16187
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 27,
      "value": "0x20"
    },
    "4165": {
      "fn": "Registry.bundleCall",
      "offset": [
        16179,
        16187
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4166": {
      "fn": "Registry.bundleCall",
      "offset": [
        16179,
        16187
      ],
      "op": "ADD",
      "path": "15"
    },
    "4167": {
      "fn": "Registry.bundleCall",
      "offset": [
        16179,
        16187
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4168": {
      "fn": "Registry.bundleCall",
      "offset": [
        16179,
        16187
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4169": {
      "fn": "Registry.bundleCall",
      "offset": [
        16169,
        16187
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4170": {
      "fn": "Registry.bundleCall",
      "offset": [
        16169,
        16187
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4171": {
      "fn": "Registry.bundleCall",
      "offset": [
        16169,
        16187
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4172": {
      "fn": "Registry.bundleCall",
      "offset": [
        16179,
        16187
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4173": {
      "fn": "Registry.bundleCall",
      "offset": [
        16205,
        16215
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 28,
      "value": "0x102D"
    },
    "4176": {
      "fn": "Registry.bundleCall",
      "offset": [
        16179,
        16187
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4177": {
      "fn": "Registry.bundleCall",
      "offset": [
        16205,
        16215
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "4180": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        16205,
        16215
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4181": {
      "fn": "Registry.bundleCall",
      "offset": [
        15850,
        16240
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4182": {
      "fn": "Registry.bundleCall",
      "offset": [
        16249,
        16260
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 29,
      "value": "0xD72"
    },
    "4185": {
      "fn": "Registry.bundleCall",
      "offset": [
        16257,
        16259
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4186": {
      "fn": "Registry.bundleCall",
      "offset": [
        16249,
        16256
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4187": {
      "fn": "Registry.bundleCall",
      "offset": [
        16249,
        16260
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4192": {
      "fn": "Registry.bundleCall",
      "offset": [
        16249,
        16260
      ],
      "op": "AND",
      "path": "15"
    },
    "4193": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        16249,
        16260
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4194": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11806,
        12846
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4195": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11886,
        11893
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4196": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11886,
        11893
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4197": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11869,
        12840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4198": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11899,
        11901
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4199": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11899,
        11907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4201": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11899,
        11907
      ],
      "op": "ADD",
      "path": "15"
    },
    "4202": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11899,
        11907
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4203": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11895,
        11896
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4204": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11895,
        11907
      ],
      "op": "LT",
      "path": "15"
    },
    "4205": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11869,
        12840
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4206": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11869,
        12840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD72"
    },
    "4209": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11869,
        12840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4210": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11928,
        11953
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4212": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12001
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4213": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12012
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4215": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12012
      ],
      "op": "ADD",
      "path": "15"
    },
    "4216": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12012
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4217": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12013,
        12015
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4218": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12013,
        12020
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4220": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12013,
        12020
      ],
      "op": "ADD",
      "path": "15"
    },
    "4221": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12013,
        12020
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4222": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4223": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4224": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4225": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "LT",
      "path": "15"
    },
    "4226": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x108D"
    },
    "4229": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4230": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x108D"
    },
    "4233": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4236": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        11999,
        12021
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4237": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4238": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4240": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "MUL",
      "path": "15"
    },
    "4241": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4243": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "ADD",
      "path": "15"
    },
    "4244": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "ADD",
      "path": "15"
    },
    "4245": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11999,
        12021
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4246": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12025
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4247": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12033
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4249": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12033
      ],
      "op": "ADD",
      "path": "15"
    },
    "4250": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12033
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4251": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12034,
        12035
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4252": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4253": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4254": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4255": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "LT",
      "path": "15"
    },
    "4256": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10AB"
    },
    "4259": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4260": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10AB"
    },
    "4263": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4266": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12023,
        12036
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4267": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4268": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4270": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "MUL",
      "path": "15"
    },
    "4271": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4273": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "ADD",
      "path": "15"
    },
    "4274": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "ADD",
      "path": "15"
    },
    "4275": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12023,
        12036
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4276": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12040
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4277": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12050
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4280": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12050
      ],
      "op": "ADD",
      "path": "15"
    },
    "4281": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12050
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4282": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12051,
        12052
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4283": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4284": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4285": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4286": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "LT",
      "path": "15"
    },
    "4287": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10CA"
    },
    "4290": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4291": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10CA"
    },
    "4294": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4297": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12038,
        12053
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4298": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4299": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4301": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "MUL",
      "path": "15"
    },
    "4302": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4304": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "ADD",
      "path": "15"
    },
    "4305": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "ADD",
      "path": "15"
    },
    "4306": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12038,
        12053
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4307": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4309": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4310": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4312": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "ADD",
      "path": "15"
    },
    "4313": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10E4"
    },
    "4316": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4317": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4318": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4319": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4320": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "4323": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        11982,
        12054
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4324": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4325": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4327": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4328": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4330": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4331": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4332": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "SUB",
      "path": "15"
    },
    "4333": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "SUB",
      "path": "15"
    },
    "4334": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4335": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4336": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4337": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4339": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11982,
        12054
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4340": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11972,
        12055
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4341": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11972,
        12055
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4342": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11972,
        12055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4343": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11972,
        12055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4345": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11972,
        12055
      ],
      "op": "ADD",
      "path": "15"
    },
    "4346": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11972,
        12055
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4347": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11928,
        12055
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4348": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11928,
        12055
      ],
      "op": "POP",
      "path": "15"
    },
    "4349": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12069,
        12094
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4351": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12142
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4352": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12153
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4354": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12153
      ],
      "op": "ADD",
      "path": "15"
    },
    "4355": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12153
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4356": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12154,
        12156
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4357": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12154,
        12161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4359": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12154,
        12161
      ],
      "op": "ADD",
      "path": "15"
    },
    "4360": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12154,
        12161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4361": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4362": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4363": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4364": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "LT",
      "path": "15"
    },
    "4365": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1118"
    },
    "4368": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4369": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1118"
    },
    "4372": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4375": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12140,
        12162
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4376": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4377": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4379": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "MUL",
      "path": "15"
    },
    "4380": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4382": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "ADD",
      "path": "15"
    },
    "4383": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "ADD",
      "path": "15"
    },
    "4384": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12140,
        12162
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4385": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12166
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4386": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12174
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4388": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12174
      ],
      "op": "ADD",
      "path": "15"
    },
    "4389": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12174
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4390": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12175,
        12176
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4391": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4392": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4393": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4394": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "LT",
      "path": "15"
    },
    "4395": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1136"
    },
    "4398": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4399": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1136"
    },
    "4402": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4405": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12164,
        12177
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4406": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4407": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4409": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "MUL",
      "path": "15"
    },
    "4410": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4412": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "ADD",
      "path": "15"
    },
    "4413": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "ADD",
      "path": "15"
    },
    "4414": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12164,
        12177
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4415": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12181
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4416": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12191
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "4419": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12191
      ],
      "op": "ADD",
      "path": "15"
    },
    "4420": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12191
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4421": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12192,
        12193
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4422": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4423": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4424": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4425": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "LT",
      "path": "15"
    },
    "4426": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1155"
    },
    "4429": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4430": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1155"
    },
    "4433": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "4436": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12179,
        12194
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4437": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4438": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4440": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "MUL",
      "path": "15"
    },
    "4441": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4443": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "ADD",
      "path": "15"
    },
    "4444": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "ADD",
      "path": "15"
    },
    "4445": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12179,
        12194
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4446": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4448": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4449": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4451": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "ADD",
      "path": "15"
    },
    "4452": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116F"
    },
    "4455": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4456": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4457": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4458": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4459": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "4462": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12123,
        12195
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4463": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4464": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4466": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4467": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4470": {
      "op": "NOT"
    },
    "4471": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4472": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4473": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "SUB",
      "path": "15"
    },
    "4474": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "ADD",
      "path": "15"
    },
    "4475": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4476": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4477": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4478": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4479": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4480": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4481": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4482": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4484": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4485": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4486": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "ADD",
      "path": "15"
    },
    "4487": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4488": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12210,
        12243
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4490": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4491": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4492": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4493": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12254
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "4495": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4496": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4497": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4498": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4499": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4500": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4501": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4502": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4503": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12331
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "4505": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4506": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4507": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4508": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4509": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4510": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12323,
        12350
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4511": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 30,
      "value": "0x100"
    },
    "4514": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4515": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "ADD",
      "path": "15"
    },
    "4516": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4517": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4518": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4519": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4520": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4521": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4522": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12113,
        12196
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4525": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4526": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11C9"
    },
    "4529": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4530": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4531": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12246,
        12273
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4532": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4533": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12123,
        12195
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4534": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4536": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "AND",
      "path": "15"
    },
    "4537": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4539": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4540": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "GT",
      "path": "15"
    },
    "4541": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4542": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "4545": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4546": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "4549": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "4552": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12364,
        12388
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4553": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12364,
        12388
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4554": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 31,
      "value": "0x40"
    },
    "4556": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4557": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4558": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4560": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4561": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "ADD",
      "path": "15"
    },
    "4562": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4563": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4564": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4565": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "op": "SUB"
    },
    "4574": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4575": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "AND",
      "path": "15"
    },
    "4576": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4577": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4584": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DIV",
      "path": "15"
    },
    "4585": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4587": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "AND",
      "path": "15"
    },
    "4588": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4590": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4591": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "ADD",
      "path": "15"
    },
    "4592": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4597": {
      "op": "SHL"
    },
    "4598": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4599": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DIV",
      "path": "15"
    },
    "4600": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4605": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "AND",
      "path": "15"
    },
    "4606": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4607": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4608": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "ADD",
      "path": "15"
    },
    "4609": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4610": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4611": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4612": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4619": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4620": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DIV",
      "path": "15"
    },
    "4621": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4624": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "AND",
      "path": "15"
    },
    "4625": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4627": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4628": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "ADD",
      "path": "15"
    },
    "4629": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4630": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x121E"
    },
    "4633": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4634": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12417
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x288B"
    },
    "4637": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12402,
        12426
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4638": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12402,
        12426
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4639": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 32,
      "value": "0x40"
    },
    "4641": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4642": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4643": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4645": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4646": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "ADD",
      "path": "15"
    },
    "4647": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4648": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4649": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4650": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4657": {
      "op": "SHL"
    },
    "4658": {
      "op": "SUB"
    },
    "4659": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4660": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "AND",
      "path": "15"
    },
    "4661": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4662": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4667": {
      "op": "SHL"
    },
    "4668": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4669": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DIV",
      "path": "15"
    },
    "4670": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4672": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "AND",
      "path": "15"
    },
    "4673": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4675": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4676": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "ADD",
      "path": "15"
    },
    "4677": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4684": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DIV",
      "path": "15"
    },
    "4685": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4690": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "AND",
      "path": "15"
    },
    "4691": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4692": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4693": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "ADD",
      "path": "15"
    },
    "4694": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4695": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4696": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4697": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4702": {
      "op": "SHL"
    },
    "4703": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4704": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4705": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DIV",
      "path": "15"
    },
    "4706": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4709": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "AND",
      "path": "15"
    },
    "4710": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4712": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4713": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "ADD",
      "path": "15"
    },
    "4714": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4715": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1274"
    },
    "4718": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4719": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12467,
        12482
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "4720": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12457
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F4F"
    },
    "4723": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12440,
        12483
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4724": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12440,
        12483
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4725": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 33,
      "value": "0x40"
    },
    "4727": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4728": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4729": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4732": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4733": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4734": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4735": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4736": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4737": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4738": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4739": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x138E"
    },
    "4742": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4743": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4744": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12520,
        12527
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4745": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12520,
        12527
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4746": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4747": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4748": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4750": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4751": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4753": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4754": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "GT",
      "path": "15"
    },
    "4755": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4756": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x129F"
    },
    "4759": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4760": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x129F"
    },
    "4763": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "4766": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4767": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4768": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4770": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4771": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "GT",
      "path": "15"
    },
    "4772": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4773": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B0"
    },
    "4776": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4777": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B0"
    },
    "4780": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "4783": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4784": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4785": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4786": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4787": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4788": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4795": {
      "op": "SHL"
    },
    "4796": {
      "op": "SUB"
    },
    "4797": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4800": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4801": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4802": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4803": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4804": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4806": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4807": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4808": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4809": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4810": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4811": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4812": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4813": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4819": {
      "op": "SHL"
    },
    "4820": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4821": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4822": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4823": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4824": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4825": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4827": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4828": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4829": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4830": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4831": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4832": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4833": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4840": {
      "op": "SHL"
    },
    "4841": {
      "op": "SUB"
    },
    "4842": {
      "op": "NOT"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4847": {
      "op": "SHL"
    },
    "4848": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4849": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4850": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4852": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4853": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4854": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SHL",
      "path": "15"
    },
    "4855": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4856": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4857": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4858": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4859": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4861": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4862": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP11",
      "path": "15"
    },
    "4863": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4864": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4865": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4866": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4867": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4868": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4875": {
      "op": "SHL"
    },
    "4876": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP10",
      "path": "15"
    },
    "4877": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4878": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4879": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4880": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4882": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4883": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP13",
      "path": "15"
    },
    "4884": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4885": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4886": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4887": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4888": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4893": {
      "op": "SHL"
    },
    "4894": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP11",
      "path": "15"
    },
    "4895": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4896": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4897": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4898": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4900": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP13",
      "path": "15"
    },
    "4901": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4902": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4907": {
      "op": "SHL"
    },
    "4908": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP11",
      "path": "15"
    },
    "4909": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4910": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4911": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4912": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "4914": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP13",
      "path": "15"
    },
    "4915": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4916": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4921": {
      "op": "SHL"
    },
    "4922": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4923": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "4924": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4925": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4926": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4927": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4928": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4929": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4930": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4931": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "4932": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4933": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4934": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4935": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4936": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4937": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4938": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4939": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "4940": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4941": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4942": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4943": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4944": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP11",
      "path": "15"
    },
    "4945": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4946": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "4947": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4948": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4949": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4950": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4955": {
      "op": "SHL"
    },
    "4956": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4957": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4958": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4959": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4960": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4961": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4962": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4963": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4964": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4965": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4966": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4967": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4968": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4973": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4974": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4975": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4976": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4977": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4978": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4979": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4980": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4981": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4982": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4983": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4988": {
      "op": "SHL"
    },
    "4989": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4990": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4991": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DIV",
      "path": "15"
    },
    "4992": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4993": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4994": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "AND",
      "path": "15"
    },
    "4995": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4996": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4997": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "ADD",
      "path": "15"
    },
    "4998": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4999": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5000": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5001": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5002": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12519
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FA5"
    },
    "5005": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5006": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12497,
        12537
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5007": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12551,
        12699
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 34,
      "value": "0x140C"
    },
    "5010": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12588,
        12595
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5011": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12597,
        12604
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5012": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12608
      ],
      "op": "DUP9",
      "path": "15"
    },
    "5013": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12619
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5015": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12619
      ],
      "op": "ADD",
      "path": "15"
    },
    "5016": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12619
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5017": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12620,
        12622
      ],
      "op": "DUP10",
      "path": "15"
    },
    "5018": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12620,
        12627
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5020": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12620,
        12627
      ],
      "op": "ADD",
      "path": "15"
    },
    "5021": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12620,
        12627
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5022": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5023": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5024": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5025": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "LT",
      "path": "15"
    },
    "5026": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13AD"
    },
    "5029": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5030": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13AD"
    },
    "5033": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5036": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12606,
        12628
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5037": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5038": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5040": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "MUL",
      "path": "15"
    },
    "5041": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5043": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "ADD",
      "path": "15"
    },
    "5044": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "ADD",
      "path": "15"
    },
    "5045": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12606,
        12628
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5046": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12632
      ],
      "op": "DUP10",
      "path": "15"
    },
    "5047": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12644
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5049": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12644
      ],
      "op": "ADD",
      "path": "15"
    },
    "5050": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12644
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5051": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12645,
        12647
      ],
      "op": "DUP11",
      "path": "15"
    },
    "5052": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12645,
        12652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5054": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12645,
        12652
      ],
      "op": "ADD",
      "path": "15"
    },
    "5055": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12645,
        12652
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5056": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5057": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5058": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5059": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "LT",
      "path": "15"
    },
    "5060": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13CF"
    },
    "5063": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5064": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13CF"
    },
    "5067": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5070": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12630,
        12653
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5071": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5072": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5074": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "MUL",
      "path": "15"
    },
    "5075": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5077": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "ADD",
      "path": "15"
    },
    "5078": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "ADD",
      "path": "15"
    },
    "5079": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12630,
        12653
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5080": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12657
      ],
      "op": "DUP11",
      "path": "15"
    },
    "5081": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12665
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5083": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12665
      ],
      "op": "ADD",
      "path": "15"
    },
    "5084": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12665
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5085": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12666,
        12667
      ],
      "op": "DUP11",
      "path": "15"
    },
    "5086": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5087": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5088": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5089": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "LT",
      "path": "15"
    },
    "5090": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13ED"
    },
    "5093": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5094": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13ED"
    },
    "5097": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5100": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12655,
        12668
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5101": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5102": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5104": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "MUL",
      "path": "15"
    },
    "5105": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5107": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "ADD",
      "path": "15"
    },
    "5108": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "ADD",
      "path": "15"
    },
    "5109": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12655,
        12668
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5110": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12672
      ],
      "op": "DUP12",
      "path": "15"
    },
    "5111": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12682
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5114": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12682
      ],
      "op": "ADD",
      "path": "15"
    },
    "5115": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12682
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5116": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12683,
        12684
      ],
      "op": "DUP12",
      "path": "15"
    },
    "5117": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5118": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5119": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5120": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "LT",
      "path": "15"
    },
    "5121": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCD1"
    },
    "5124": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5125": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCD1"
    },
    "5128": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12670,
        12685
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5131": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12670,
        12685
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5132": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12551,
        12699
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5133": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12742
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 35
    },
    "5134": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12752
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "5137": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12752
      ],
      "op": "ADD",
      "path": "15"
    },
    "5138": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12752
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5139": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12753,
        12754
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5140": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5141": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5142": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5143": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "LT",
      "path": "15"
    },
    "5144": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1423"
    },
    "5147": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5148": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1423"
    },
    "5151": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5154": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        12740,
        12755
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5155": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5156": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5158": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "MUL",
      "path": "15"
    },
    "5159": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5161": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "ADD",
      "path": "15"
    },
    "5162": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "ADD",
      "path": "15"
    },
    "5163": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12740,
        12755
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5164": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94"
    },
    "5197": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12764,
        12779
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "5198": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5200": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5201": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1466"
    },
    "5204": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5205": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5206": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5211": {
      "op": "SWAP2"
    },
    "5212": {
      "op": "SWAP1"
    },
    "5213": {
      "op": "SWAP2"
    },
    "5214": {
      "op": "AND"
    },
    "5215": {
      "op": "DUP2"
    },
    "5216": {
      "op": "MSTORE"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5219": {
      "op": "ADD"
    },
    "5220": {
      "op": "SWAP1"
    },
    "5221": {
      "op": "JUMP"
    },
    "5222": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5223": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5225": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5226": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5227": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5228": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "SUB",
      "path": "15"
    },
    "5229": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5230": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12718,
        12781
      ],
      "op": "LOG2",
      "path": "15"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 36,
      "value": "0x0"
    },
    "5235": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5236": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5237": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5238": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12810
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "5240": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5242": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5243": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5245": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5246": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12802,
        12829
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5247": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12795,
        12829
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5248": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12795,
        12829
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5255": {
      "op": "SHL"
    },
    "5256": {
      "op": "SUB"
    },
    "5257": {
      "op": "NOT"
    },
    "5258": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12795,
        12829
      ],
      "op": "AND",
      "path": "15"
    },
    "5259": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12795,
        12829
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5260": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        12795,
        12829
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5261": {
      "op": "POP"
    },
    "5262": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 37
    },
    "5263": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1497"
    },
    "5266": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5267": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "5270": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        11909,
        11912
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5271": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5272": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5273": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "POP",
      "path": "15"
    },
    "5274": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11909,
        11912
      ],
      "op": "POP",
      "path": "15"
    },
    "5275": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11869,
        12840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1065"
    },
    "5278": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        11869,
        12840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5279": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7348,
        8466
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5280": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7476,
        7483
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5281": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7476,
        7483
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5282": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7473
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5284": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7473
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5285": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7473
      ],
      "op": "ADD",
      "path": "15"
    },
    "5286": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7473
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5287": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7420,
        7448
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5289": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7420,
        7448
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5290": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7483
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14B2"
    },
    "5293": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7483
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5294": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7483
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "5297": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7465,
        7483
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5298": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7465,
        7483
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5305": {
      "op": "SHL"
    },
    "5306": {
      "op": "SUB"
    },
    "5307": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5308": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "GT",
      "path": "15"
    },
    "5309": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5310": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14C9"
    },
    "5313": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5314": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14C9"
    },
    "5317": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D73"
    },
    "5320": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7451,
        7484
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5321": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5322": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5324": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5325": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5326": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5327": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5328": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5329": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5330": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5332": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "MUL",
      "path": "15"
    },
    "5333": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5335": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "ADD",
      "path": "15"
    },
    "5336": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5337": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "ADD",
      "path": "15"
    },
    "5338": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5340": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5341": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5342": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5343": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F2"
    },
    "5346": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5347": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5348": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5350": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "ADD",
      "path": "15"
    },
    "5351": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5353": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5354": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "MUL",
      "path": "15"
    },
    "5355": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5356": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5357": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5358": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5359": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "ADD",
      "path": "15"
    },
    "5360": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5361": {
      "op": "POP"
    },
    "5362": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7451,
        7484
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5363": {
      "op": "POP"
    },
    "5364": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7511,
        7518
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5365": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7511,
        7518
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5366": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7420,
        7484
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5367": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7420,
        7484
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5368": {
      "op": "POP"
    },
    "5369": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5370": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7524,
        7526
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5371": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7524,
        7532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5373": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7524,
        7532
      ],
      "op": "ADD",
      "path": "15"
    },
    "5374": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7524,
        7532
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5375": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7520,
        7521
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5376": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7520,
        7532
      ],
      "op": "LT",
      "path": "15"
    },
    "5377": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5378": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1823"
    },
    "5381": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5382": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7553,
        7578
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5384": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7626
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5385": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7637
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5387": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7637
      ],
      "op": "ADD",
      "path": "15"
    },
    "5388": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7637
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5389": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7638,
        7640
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5390": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7638,
        7645
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5392": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7638,
        7645
      ],
      "op": "ADD",
      "path": "15"
    },
    "5393": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7638,
        7645
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5394": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5395": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5396": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5397": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "LT",
      "path": "15"
    },
    "5398": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1521"
    },
    "5401": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5402": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1521"
    },
    "5405": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5408": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7624,
        7646
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5409": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5410": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5412": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "MUL",
      "path": "15"
    },
    "5413": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5415": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "ADD",
      "path": "15"
    },
    "5416": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "ADD",
      "path": "15"
    },
    "5417": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7624,
        7646
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5418": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7650
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5419": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5421": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7658
      ],
      "op": "ADD",
      "path": "15"
    },
    "5422": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7658
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5423": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7659,
        7660
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5424": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5425": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5426": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5427": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "LT",
      "path": "15"
    },
    "5428": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x153F"
    },
    "5431": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5432": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x153F"
    },
    "5435": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5438": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7648,
        7661
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5439": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5440": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5442": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "MUL",
      "path": "15"
    },
    "5443": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5445": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "ADD",
      "path": "15"
    },
    "5446": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "ADD",
      "path": "15"
    },
    "5447": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7648,
        7661
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5448": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7665
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5449": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7675
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5452": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7675
      ],
      "op": "ADD",
      "path": "15"
    },
    "5453": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7675
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5454": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7676,
        7677
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5455": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5456": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5457": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5458": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "LT",
      "path": "15"
    },
    "5459": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x155E"
    },
    "5462": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5463": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x155E"
    },
    "5466": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5469": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7663,
        7678
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5470": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5471": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5473": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "MUL",
      "path": "15"
    },
    "5474": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5476": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "ADD",
      "path": "15"
    },
    "5477": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "ADD",
      "path": "15"
    },
    "5478": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7663,
        7678
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5479": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5481": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5482": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5484": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "ADD",
      "path": "15"
    },
    "5485": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1578"
    },
    "5488": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5489": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5490": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5491": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5492": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "5495": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7607,
        7679
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5496": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5497": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5499": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5500": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5503": {
      "op": "NOT"
    },
    "5504": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5505": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5506": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "SUB",
      "path": "15"
    },
    "5507": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "ADD",
      "path": "15"
    },
    "5508": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5509": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5510": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5511": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5512": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5513": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5514": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5515": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5517": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5518": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5519": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "ADD",
      "path": "15"
    },
    "5520": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5521": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7694,
        7717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5523": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5524": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5525": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5526": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "5528": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5529": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5530": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5531": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5532": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5533": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5534": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5535": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 38,
      "value": "0x100"
    },
    "5538": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5539": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "ADD",
      "path": "15"
    },
    "5540": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5541": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5542": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5543": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5544": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5545": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5546": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7597,
        7680
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5549": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5550": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C9"
    },
    "5553": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5554": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5555": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7720,
        7747
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5556": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5557": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7607,
        7679
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5558": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5560": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "AND",
      "path": "15"
    },
    "5561": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5563": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5564": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "GT",
      "path": "15"
    },
    "5565": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5566": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "5569": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5570": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "5573": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "5576": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7761,
        7785
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5577": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7761,
        7785
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5578": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 39,
      "value": "0x40"
    },
    "5580": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5581": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5582": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5585": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5586": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5587": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5588": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5589": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5590": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5591": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5592": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1689"
    },
    "5595": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5596": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5597": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7817,
        7824
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5598": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7817,
        7824
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5599": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5600": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5601": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5603": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5604": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5606": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5607": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "GT",
      "path": "15"
    },
    "5608": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5609": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15F4"
    },
    "5612": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5613": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15F4"
    },
    "5616": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "5619": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5620": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5621": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5623": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5624": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "GT",
      "path": "15"
    },
    "5625": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5626": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1605"
    },
    "5629": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5630": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1605"
    },
    "5633": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "5636": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5637": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5638": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5639": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5640": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5641": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5642": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5645": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5646": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DIV",
      "path": "15"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5653": {
      "op": "SHL"
    },
    "5654": {
      "op": "SUB"
    },
    "5655": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5656": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5658": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5659": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5660": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5665": {
      "op": "SHL"
    },
    "5666": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5667": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DIV",
      "path": "15"
    },
    "5668": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5670": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5671": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5672": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5673": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5675": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5676": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5677": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5682": {
      "op": "SHL"
    },
    "5683": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5684": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DIV",
      "path": "15"
    },
    "5685": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "5687": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5688": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5689": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SHL",
      "path": "15"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "op": "SUB"
    },
    "5698": {
      "op": "NOT"
    },
    "5699": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5700": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5702": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5703": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5704": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5709": {
      "op": "SHL"
    },
    "5710": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5711": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DIV",
      "path": "15"
    },
    "5712": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "5715": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5716": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5717": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5718": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5720": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5721": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5722": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5729": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DIV",
      "path": "15"
    },
    "5730": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5731": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "5733": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5734": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5735": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5740": {
      "op": "SHL"
    },
    "5741": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5742": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DIV",
      "path": "15"
    },
    "5743": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5744": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5745": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "5747": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5748": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5749": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5754": {
      "op": "SHL"
    },
    "5755": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5756": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5757": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "DIV",
      "path": "15"
    },
    "5758": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "AND",
      "path": "15"
    },
    "5759": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5760": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5761": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5762": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "ADD",
      "path": "15"
    },
    "5763": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5764": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7826,
        7836
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5765": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7816
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3136"
    },
    "5768": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5769": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7799,
        7837
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5770": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7880,
        7899
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 40
    },
    "5771": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7880,
        7899
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5772": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7880,
        7899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5774": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7880,
        7899
      ],
      "op": "AND",
      "path": "15"
    },
    "5775": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7880,
        7899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5777": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5778": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "GT",
      "path": "15"
    },
    "5779": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5780": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x169F"
    },
    "5783": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5784": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x169F"
    },
    "5787": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "5790": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5791": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5792": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7861
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5793": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7873
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5795": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7873
      ],
      "op": "ADD",
      "path": "15"
    },
    "5796": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7873
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5797": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7874,
        7875
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5798": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5799": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5800": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5801": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "LT",
      "path": "15"
    },
    "5802": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16B5"
    },
    "5805": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5806": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16B5"
    },
    "5809": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "5812": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7859,
        7876
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5813": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5814": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5816": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "MUL",
      "path": "15"
    },
    "5817": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5819": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "ADD",
      "path": "15"
    },
    "5820": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "ADD",
      "path": "15"
    },
    "5821": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7876
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5822": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5824": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5825": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "GT",
      "path": "15"
    },
    "5826": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5827": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16CE"
    },
    "5830": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5831": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16CE"
    },
    "5834": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "5837": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5838": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5839": {
      "branch": 142,
      "fn": "Registry.handleStopLend",
      "offset": [
        7859,
        7899
      ],
      "op": "EQ",
      "path": "15"
    },
    "5840": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16EB"
    },
    "5843": {
      "branch": 142,
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5844": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5846": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5853": {
      "op": "SHL"
    },
    "5854": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5855": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5856": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5858": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "ADD",
      "path": "15"
    },
    "5859": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "5862": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5863": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49FD"
    },
    "5866": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7851,
        7931
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5867": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7851,
        7931
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5868": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7975,
        7998
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 41
    },
    "5869": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7975,
        7998
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5874": {
      "op": "SHL"
    },
    "5875": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7953,
        7971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5876": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7953,
        7971
      ],
      "op": "DIV",
      "path": "15"
    },
    "5877": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7975,
        7998
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "5880": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7953,
        7971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5881": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7953,
        7971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5882": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7953,
        7971
      ],
      "op": "AND",
      "path": "15"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5887": {
      "op": "SHL"
    },
    "5888": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7975,
        7998
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5889": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7975,
        7998
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5890": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7975,
        7998
      ],
      "op": "DIV",
      "path": "15"
    },
    "5891": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7975,
        7998
      ],
      "op": "AND",
      "path": "15"
    },
    "5892": {
      "branch": 143,
      "fn": "Registry.handleStopLend",
      "offset": [
        7953,
        7998
      ],
      "op": "EQ",
      "path": "15"
    },
    "5893": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1749"
    },
    "5896": {
      "branch": 143,
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5897": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5899": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5908": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5911": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5913": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5914": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "ADD",
      "path": "15"
    },
    "5915": {
      "op": "MSTORE"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5920": {
      "op": "DUP3"
    },
    "5921": {
      "op": "ADD"
    },
    "5922": {
      "op": "MSTORE"
    },
    "5923": {
      "op": "PUSH22",
      "value": "0x14995391950E8E9858DD1A5D995B1E481C995B9D1959"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "5948": {
      "op": "SHL"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5951": {
      "op": "DUP3"
    },
    "5952": {
      "op": "ADD"
    },
    "5953": {
      "op": "MSTORE"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5956": {
      "op": "ADD"
    },
    "5957": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "5960": {
      "op": "JUMP"
    },
    "5961": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7945,
        8025
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5962": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 42
    },
    "5963": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5964": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8055,
        8062
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5965": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8055,
        8062
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5970": {
      "op": "SHL"
    },
    "5971": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5972": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5973": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "DIV",
      "path": "15"
    },
    "5974": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "5977": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "AND",
      "path": "15"
    },
    "5978": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8066,
        8084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5979": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8050
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5980": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8050
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5981": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8051,
        8062
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1766"
    },
    "5984": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8051,
        8062
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5985": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8051,
        8052
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5986": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8051,
        8062
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "5989": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8051,
        8062
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5990": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8051,
        8062
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5991": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5992": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5993": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5994": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "LT",
      "path": "15"
    },
    "5995": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1776"
    },
    "5998": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5999": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1776"
    },
    "6002": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6005": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8039,
        8063
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6006": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6007": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6009": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "MUL",
      "path": "15"
    },
    "6010": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6012": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "ADD",
      "path": "15"
    },
    "6013": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8063
      ],
      "op": "ADD",
      "path": "15"
    },
    "6014": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8084
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6015": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8084
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6016": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8084
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6017": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8084
      ],
      "op": "POP",
      "path": "15"
    },
    "6018": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8039,
        8084
      ],
      "op": "POP",
      "path": "15"
    },
    "6019": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8124
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 43
    },
    "6020": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8134
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6023": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8134
      ],
      "op": "ADD",
      "path": "15"
    },
    "6024": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8134
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6025": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8135,
        8136
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6026": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6027": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6028": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6029": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "LT",
      "path": "15"
    },
    "6030": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1799"
    },
    "6033": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6034": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1799"
    },
    "6037": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6040": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8122,
        8137
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6041": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6042": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6044": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "MUL",
      "path": "15"
    },
    "6045": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6047": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "ADD",
      "path": "15"
    },
    "6048": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "ADD",
      "path": "15"
    },
    "6049": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8122,
        8137
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6050": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xFC33A7C95EE492CB6247BD90B28BBE1F459D8F80F3DC65F934CD020CF1E83EFB"
    },
    "6083": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8146,
        8161
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "6084": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8171
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6085": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6087": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "ADD",
      "path": "15"
    },
    "6088": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1A"
    },
    "6090": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6091": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6092": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6093": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6096": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "EXP",
      "path": "15"
    },
    "6097": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6098": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "DIV",
      "path": "15"
    },
    "6099": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6102": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8164,
        8182
      ],
      "op": "AND",
      "path": "15"
    },
    "6103": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6105": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6106": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17F9"
    },
    "6109": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6110": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6111": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6112": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6117": {
      "op": "SWAP3"
    },
    "6118": {
      "op": "SWAP1"
    },
    "6119": {
      "op": "SWAP3"
    },
    "6120": {
      "op": "AND"
    },
    "6121": {
      "op": "DUP3"
    },
    "6122": {
      "op": "MSTORE"
    },
    "6123": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6126": {
      "op": "AND"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6129": {
      "op": "DUP3"
    },
    "6130": {
      "op": "ADD"
    },
    "6131": {
      "op": "MSTORE"
    },
    "6132": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6134": {
      "op": "ADD"
    },
    "6135": {
      "op": "SWAP1"
    },
    "6136": {
      "op": "JUMP"
    },
    "6137": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6138": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6140": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6141": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6142": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6143": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "SUB",
      "path": "15"
    },
    "6144": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6145": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8103,
        8183
      ],
      "op": "LOG2",
      "path": "15"
    },
    "6146": {
      "op": "POP"
    },
    "6147": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 44,
      "value": "0x0"
    },
    "6149": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6150": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6151": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6152": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "6154": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6156": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6157": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6159": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6160": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8204,
        8231
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6161": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8197,
        8231
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6162": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 45
    },
    "6163": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x181B"
    },
    "6166": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6167": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "6170": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7534,
        7537
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6171": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6172": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6173": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "POP",
      "path": "15"
    },
    "6174": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7534,
        7537
      ],
      "op": "POP",
      "path": "15"
    },
    "6175": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F9"
    },
    "6178": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6179": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6180": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7494,
        8242
      ],
      "op": "POP",
      "path": "15"
    },
    "6181": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8251,
        8459
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 46,
      "value": "0xD72"
    },
    "6184": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8279
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6185": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8301,
        8305
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "6186": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8320,
        8330
      ],
      "op": "CALLER",
      "path": "15"
    },
    "6187": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8344,
        8386
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1843"
    },
    "6190": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8353,
        8355
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6191": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8353,
        8363
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6193": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8353,
        8363
      ],
      "op": "ADD",
      "path": "15"
    },
    "6194": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8353,
        8363
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6195": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8365,
        8367
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6196": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8365,
        8372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6198": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8365,
        8372
      ],
      "op": "ADD",
      "path": "15"
    },
    "6199": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8365,
        8372
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6200": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8374,
        8376
      ],
      "op": "DUP9",
      "path": "15"
    },
    "6201": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8374,
        8382
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6203": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8374,
        8382
      ],
      "op": "ADD",
      "path": "15"
    },
    "6204": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8374,
        8382
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6205": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8384,
        8385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6207": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8344,
        8352
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x318F"
    },
    "6210": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8344,
        8386
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6211": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8344,
        8386
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6212": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8422,
        8429
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6213": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8422,
        8429
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6214": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8431,
        8439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6216": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8431,
        8439
      ],
      "op": "DUP9",
      "path": "15"
    },
    "6217": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8431,
        8439
      ],
      "op": "ADD",
      "path": "15"
    },
    "6218": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8431,
        8439
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6219": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8400,
        8449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1856"
    },
    "6222": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8400,
        8449
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6223": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8409,
        8420
      ],
      "op": "DUP9",
      "path": "15"
    },
    "6224": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8409,
        8420
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6225": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8422,
        8429
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6226": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8400,
        8408
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x318F"
    },
    "6229": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8400,
        8449
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6230": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8400,
        8449
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6231": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8251,
        8263
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x324E"
    },
    "6234": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8251,
        8459
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6235": {
      "fn": "Registry.handleRent",
      "offset": [
        8472,
        10454
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6236": {
      "fn": "Registry.handleRent",
      "offset": [
        8557,
        8564
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6237": {
      "fn": "Registry.handleRent",
      "offset": [
        8557,
        8564
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6238": {
      "fn": "Registry.handleRent",
      "offset": [
        8540,
        10448
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6239": {
      "fn": "Registry.handleRent",
      "offset": [
        8570,
        8572
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6240": {
      "fn": "Registry.handleRent",
      "offset": [
        8570,
        8578
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6242": {
      "fn": "Registry.handleRent",
      "offset": [
        8570,
        8578
      ],
      "op": "ADD",
      "path": "15"
    },
    "6243": {
      "fn": "Registry.handleRent",
      "offset": [
        8570,
        8578
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6244": {
      "fn": "Registry.handleRent",
      "offset": [
        8566,
        8567
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6245": {
      "fn": "Registry.handleRent",
      "offset": [
        8566,
        8578
      ],
      "op": "LT",
      "path": "15"
    },
    "6246": {
      "fn": "Registry.handleRent",
      "offset": [
        8540,
        10448
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6247": {
      "fn": "Registry.handleRent",
      "offset": [
        8540,
        10448
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD72"
    },
    "6250": {
      "fn": "Registry.handleRent",
      "offset": [
        8540,
        10448
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6251": {
      "fn": "Registry.handleRent",
      "offset": [
        8599,
        8624
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6253": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8672
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6254": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8683
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6256": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8683
      ],
      "op": "ADD",
      "path": "15"
    },
    "6257": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8683
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6258": {
      "fn": "Registry.handleRent",
      "offset": [
        8684,
        8686
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6259": {
      "fn": "Registry.handleRent",
      "offset": [
        8684,
        8691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6261": {
      "fn": "Registry.handleRent",
      "offset": [
        8684,
        8691
      ],
      "op": "ADD",
      "path": "15"
    },
    "6262": {
      "fn": "Registry.handleRent",
      "offset": [
        8684,
        8691
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6263": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6264": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6265": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6266": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "LT",
      "path": "15"
    },
    "6267": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1886"
    },
    "6270": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6271": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1886"
    },
    "6274": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6277": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8670,
        8692
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6278": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6279": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6281": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "MUL",
      "path": "15"
    },
    "6282": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6284": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "ADD",
      "path": "15"
    },
    "6285": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "ADD",
      "path": "15"
    },
    "6286": {
      "fn": "Registry.handleRent",
      "offset": [
        8670,
        8692
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6287": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8696
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6288": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8704
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6290": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8704
      ],
      "op": "ADD",
      "path": "15"
    },
    "6291": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8704
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6292": {
      "fn": "Registry.handleRent",
      "offset": [
        8705,
        8706
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6293": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6294": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6295": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6296": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "LT",
      "path": "15"
    },
    "6297": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18A4"
    },
    "6300": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6301": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18A4"
    },
    "6304": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6307": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8694,
        8707
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6308": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6309": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6311": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "MUL",
      "path": "15"
    },
    "6312": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6314": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "ADD",
      "path": "15"
    },
    "6315": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "ADD",
      "path": "15"
    },
    "6316": {
      "fn": "Registry.handleRent",
      "offset": [
        8694,
        8707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6317": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8711
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6318": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8721
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6321": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8721
      ],
      "op": "ADD",
      "path": "15"
    },
    "6322": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8721
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6323": {
      "fn": "Registry.handleRent",
      "offset": [
        8722,
        8723
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6324": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6325": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6326": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6327": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "LT",
      "path": "15"
    },
    "6328": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18C3"
    },
    "6331": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6332": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18C3"
    },
    "6335": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6338": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8709,
        8724
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6339": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6340": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6342": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "MUL",
      "path": "15"
    },
    "6343": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6345": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "ADD",
      "path": "15"
    },
    "6346": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "ADD",
      "path": "15"
    },
    "6347": {
      "fn": "Registry.handleRent",
      "offset": [
        8709,
        8724
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6348": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6350": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6351": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6353": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "ADD",
      "path": "15"
    },
    "6354": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18DD"
    },
    "6357": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6358": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6359": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6360": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6361": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "6364": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8653,
        8725
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6365": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6366": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6368": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6369": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6371": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6372": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6373": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "SUB",
      "path": "15"
    },
    "6374": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "SUB",
      "path": "15"
    },
    "6375": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6376": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6377": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6378": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6380": {
      "fn": "Registry.handleRent",
      "offset": [
        8653,
        8725
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6381": {
      "fn": "Registry.handleRent",
      "offset": [
        8643,
        8726
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6382": {
      "fn": "Registry.handleRent",
      "offset": [
        8643,
        8726
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6383": {
      "fn": "Registry.handleRent",
      "offset": [
        8643,
        8726
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6384": {
      "fn": "Registry.handleRent",
      "offset": [
        8643,
        8726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6386": {
      "fn": "Registry.handleRent",
      "offset": [
        8643,
        8726
      ],
      "op": "ADD",
      "path": "15"
    },
    "6387": {
      "fn": "Registry.handleRent",
      "offset": [
        8643,
        8726
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6388": {
      "fn": "Registry.handleRent",
      "offset": [
        8599,
        8726
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6389": {
      "fn": "Registry.handleRent",
      "offset": [
        8599,
        8726
      ],
      "op": "POP",
      "path": "15"
    },
    "6390": {
      "fn": "Registry.handleRent",
      "offset": [
        8740,
        8765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6392": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8797
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6393": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8808
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6395": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8808
      ],
      "op": "ADD",
      "path": "15"
    },
    "6396": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8808
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6397": {
      "fn": "Registry.handleRent",
      "offset": [
        8809,
        8811
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6398": {
      "fn": "Registry.handleRent",
      "offset": [
        8809,
        8816
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6400": {
      "fn": "Registry.handleRent",
      "offset": [
        8809,
        8816
      ],
      "op": "ADD",
      "path": "15"
    },
    "6401": {
      "fn": "Registry.handleRent",
      "offset": [
        8809,
        8816
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6402": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6403": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6404": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6405": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "LT",
      "path": "15"
    },
    "6406": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1911"
    },
    "6409": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6410": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1911"
    },
    "6413": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6416": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8795,
        8817
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6417": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6418": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6420": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "MUL",
      "path": "15"
    },
    "6421": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6423": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "ADD",
      "path": "15"
    },
    "6424": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "ADD",
      "path": "15"
    },
    "6425": {
      "fn": "Registry.handleRent",
      "offset": [
        8795,
        8817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6426": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8821
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6427": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6429": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8829
      ],
      "op": "ADD",
      "path": "15"
    },
    "6430": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8829
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6431": {
      "fn": "Registry.handleRent",
      "offset": [
        8830,
        8831
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6432": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6433": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6434": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6435": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "LT",
      "path": "15"
    },
    "6436": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x192F"
    },
    "6439": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6440": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x192F"
    },
    "6443": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6446": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8819,
        8832
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6447": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6448": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6450": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "MUL",
      "path": "15"
    },
    "6451": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6453": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "ADD",
      "path": "15"
    },
    "6454": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "ADD",
      "path": "15"
    },
    "6455": {
      "fn": "Registry.handleRent",
      "offset": [
        8819,
        8832
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6456": {
      "fn": "Registry.handleRent",
      "offset": [
        8834,
        8843
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6458": {
      "fn": "Registry.handleRent",
      "offset": [
        8834,
        8843
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6459": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6461": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6462": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6464": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "ADD",
      "path": "15"
    },
    "6465": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x194C"
    },
    "6468": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6469": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6470": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6471": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6472": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "6475": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8778,
        8844
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6476": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6477": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6479": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6480": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6483": {
      "op": "NOT"
    },
    "6484": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6485": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6486": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "SUB",
      "path": "15"
    },
    "6487": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "ADD",
      "path": "15"
    },
    "6488": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6489": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6490": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6491": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6492": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6493": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6494": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6495": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6497": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6498": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6499": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "ADD",
      "path": "15"
    },
    "6500": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6501": {
      "fn": "Registry.handleRent",
      "offset": [
        8859,
        8892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6503": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6504": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6505": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6506": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8903
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "6508": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6509": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6510": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6511": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6512": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6513": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6514": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6515": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6516": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6518": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6519": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6520": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6521": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6522": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6523": {
      "fn": "Registry.handleRent",
      "offset": [
        8972,
        8999
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6524": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 47,
      "value": "0x100"
    },
    "6527": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6528": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "ADD",
      "path": "15"
    },
    "6529": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6530": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6531": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6532": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6533": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6534": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6535": {
      "fn": "Registry.handleRent",
      "offset": [
        8768,
        8845
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "6536": {
      "op": "POP"
    },
    "6537": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6538": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6539": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19A6"
    },
    "6542": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6543": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6544": {
      "fn": "Registry.handleRent",
      "offset": [
        8895,
        8922
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6545": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6546": {
      "fn": "Registry.handleRent",
      "offset": [
        8778,
        8844
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6547": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6549": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "AND",
      "path": "15"
    },
    "6550": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6552": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6553": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "GT",
      "path": "15"
    },
    "6554": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6555": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "6558": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6559": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x917"
    },
    "6562": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "6565": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9013,
        9037
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6566": {
      "fn": "Registry.handleRent",
      "offset": [
        9013,
        9037
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6567": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x40"
    },
    "6569": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6570": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6571": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6573": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6574": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "ADD",
      "path": "15"
    },
    "6575": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6576": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6577": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6578": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6585": {
      "op": "SHL"
    },
    "6586": {
      "op": "SUB"
    },
    "6587": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6588": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "AND",
      "path": "15"
    },
    "6589": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6590": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6595": {
      "op": "SHL"
    },
    "6596": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6597": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DIV",
      "path": "15"
    },
    "6598": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6600": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "AND",
      "path": "15"
    },
    "6601": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6603": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6604": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "ADD",
      "path": "15"
    },
    "6605": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6610": {
      "op": "SHL"
    },
    "6611": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6612": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DIV",
      "path": "15"
    },
    "6613": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6618": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "AND",
      "path": "15"
    },
    "6619": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6620": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6621": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "ADD",
      "path": "15"
    },
    "6622": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6623": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6624": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6625": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6630": {
      "op": "SHL"
    },
    "6631": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6632": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6633": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DIV",
      "path": "15"
    },
    "6634": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6637": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "AND",
      "path": "15"
    },
    "6638": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6640": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6641": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "ADD",
      "path": "15"
    },
    "6642": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6643": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19FB"
    },
    "6646": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6647": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9063
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33C4"
    },
    "6650": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9051,
        9072
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6651": {
      "fn": "Registry.handleRent",
      "offset": [
        9051,
        9072
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6652": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 49,
      "value": "0x40"
    },
    "6654": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6655": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6656": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6659": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6660": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6661": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6662": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6663": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6664": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6665": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6666": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1ABD"
    },
    "6669": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6670": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6671": {
      "fn": "Registry.handleRent",
      "offset": [
        9103,
        9110
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6672": {
      "fn": "Registry.handleRent",
      "offset": [
        9103,
        9110
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6673": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6674": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6675": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6677": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6678": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6680": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6681": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "GT",
      "path": "15"
    },
    "6682": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6683": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A26"
    },
    "6686": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6687": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A26"
    },
    "6690": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "6693": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6694": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6695": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6697": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6698": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "GT",
      "path": "15"
    },
    "6699": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6700": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A37"
    },
    "6703": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6704": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A37"
    },
    "6707": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "6710": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6711": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6712": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6713": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6714": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6715": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6716": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6719": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6720": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DIV",
      "path": "15"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6727": {
      "op": "SHL"
    },
    "6728": {
      "op": "SUB"
    },
    "6729": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6730": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6732": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6733": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6734": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6739": {
      "op": "SHL"
    },
    "6740": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6741": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DIV",
      "path": "15"
    },
    "6742": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6744": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6745": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6746": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6747": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6749": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6750": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6751": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6756": {
      "op": "SHL"
    },
    "6757": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6758": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DIV",
      "path": "15"
    },
    "6759": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "6761": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6762": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6763": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SHL",
      "path": "15"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6770": {
      "op": "SHL"
    },
    "6771": {
      "op": "SUB"
    },
    "6772": {
      "op": "NOT"
    },
    "6773": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6774": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6776": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6777": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6778": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6783": {
      "op": "SHL"
    },
    "6784": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6785": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DIV",
      "path": "15"
    },
    "6786": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6789": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6790": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6791": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6792": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6794": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6795": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6796": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6801": {
      "op": "SHL"
    },
    "6802": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6803": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DIV",
      "path": "15"
    },
    "6804": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6805": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "6807": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6808": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6809": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6814": {
      "op": "SHL"
    },
    "6815": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6816": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DIV",
      "path": "15"
    },
    "6817": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6818": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6819": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "6821": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6822": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6823": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6828": {
      "op": "SHL"
    },
    "6829": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6830": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6831": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "DIV",
      "path": "15"
    },
    "6832": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "AND",
      "path": "15"
    },
    "6833": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6834": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6835": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6836": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "ADD",
      "path": "15"
    },
    "6837": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6838": {
      "fn": "Registry.handleRent",
      "offset": [
        9112,
        9114
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6839": {
      "fn": "Registry.handleRent",
      "offset": [
        9116,
        9117
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6840": {
      "fn": "Registry.handleRent",
      "offset": [
        9119,
        9129
      ],
      "op": "CALLER",
      "path": "15"
    },
    "6841": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9102
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3477"
    },
    "6844": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6845": {
      "fn": "Registry.handleRent",
      "offset": [
        9086,
        9130
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6846": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        9192
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 50
    },
    "6847": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        9192
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6848": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        9192
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6850": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        9192
      ],
      "op": "AND",
      "path": "15"
    },
    "6851": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        9192
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6853": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6854": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "GT",
      "path": "15"
    },
    "6855": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6856": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AD3"
    },
    "6859": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6860": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AD3"
    },
    "6863": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "6866": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9152,
        9192
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6867": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6868": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9154
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6869": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6871": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9166
      ],
      "op": "ADD",
      "path": "15"
    },
    "6872": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9166
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6873": {
      "fn": "Registry.handleRent",
      "offset": [
        9167,
        9168
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6874": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6875": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6876": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6877": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "LT",
      "path": "15"
    },
    "6878": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AE9"
    },
    "6881": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6882": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AE9"
    },
    "6885": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6888": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9152,
        9169
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6889": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6890": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6892": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "MUL",
      "path": "15"
    },
    "6893": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6895": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "ADD",
      "path": "15"
    },
    "6896": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "ADD",
      "path": "15"
    },
    "6897": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9169
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6898": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6900": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6901": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "GT",
      "path": "15"
    },
    "6902": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6903": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B02"
    },
    "6906": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6907": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B02"
    },
    "6910": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "6913": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9152,
        9192
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6914": {
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6915": {
      "branch": 144,
      "fn": "Registry.handleRent",
      "offset": [
        9152,
        9192
      ],
      "op": "EQ",
      "path": "15"
    },
    "6916": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B1F"
    },
    "6919": {
      "branch": 144,
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6920": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6922": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6929": {
      "op": "SHL"
    },
    "6930": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6931": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6932": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6934": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "ADD",
      "path": "15"
    },
    "6935": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "6938": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6939": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49FD"
    },
    "6942": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9144,
        9224
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6943": {
      "fn": "Registry.handleRent",
      "offset": [
        9144,
        9224
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6944": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 51
    },
    "6945": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6946": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9259
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "6949": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9259
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6950": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9259
      ],
      "op": "ADD",
      "path": "15"
    },
    "6951": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9259
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6952": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6953": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6958": {
      "op": "SHL"
    },
    "6959": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6960": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6961": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "DIV",
      "path": "15"
    },
    "6962": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6965": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "AND",
      "path": "15"
    },
    "6966": {
      "fn": "Registry.handleRent",
      "offset": [
        9266,
        9289
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6967": {
      "fn": "Registry.handleRent",
      "offset": [
        9260,
        9261
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6968": {
      "fn": "Registry.handleRent",
      "offset": [
        9260,
        9261
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6969": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6970": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "LT",
      "path": "15"
    },
    "6971": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B46"
    },
    "6974": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6975": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B46"
    },
    "6978": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "6981": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9246,
        9262
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6982": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6983": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6985": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "MUL",
      "path": "15"
    },
    "6986": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6988": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "ADD",
      "path": "15"
    },
    "6989": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "ADD",
      "path": "15"
    },
    "6990": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9262
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6991": {
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9289
      ],
      "op": "GT",
      "path": "15"
    },
    "6992": {
      "branch": 145,
      "fn": "Registry.handleRent",
      "offset": [
        9246,
        9289
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6993": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B9C"
    },
    "6996": {
      "branch": 145,
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6997": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6999": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7006": {
      "op": "SHL"
    },
    "7007": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7008": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7011": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7013": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7014": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "ADD",
      "path": "15"
    },
    "7015": {
      "op": "MSTORE"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7020": {
      "op": "DUP3"
    },
    "7021": {
      "op": "ADD"
    },
    "7022": {
      "op": "MSTORE"
    },
    "7023": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7058": {
      "op": "DUP3"
    },
    "7059": {
      "op": "ADD"
    },
    "7060": {
      "op": "MSTORE"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7063": {
      "op": "ADD"
    },
    "7064": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "7067": {
      "op": "JUMP"
    },
    "7068": {
      "fn": "Registry.handleRent",
      "offset": [
        9238,
        9320
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7069": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7070": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7071": {
      "fn": "Registry.handleRent",
      "offset": [
        9334,
        9354
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7073": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9433
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7074": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9433
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7075": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7077": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7078": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "7083": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7085": {
      "op": "SHL"
    },
    "7086": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7087": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7092": {
      "op": "SHL"
    },
    "7093": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7094": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7095": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "DIV",
      "path": "15"
    },
    "7096": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7098": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "AND",
      "path": "15"
    },
    "7099": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7101": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7102": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ADD",
      "path": "15"
    },
    "7103": {
      "op": "DUP2"
    },
    "7104": {
      "op": "SWAP1"
    },
    "7105": {
      "op": "MSTORE"
    },
    "7106": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9383
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7113": {
      "op": "SHL"
    },
    "7114": {
      "op": "SUB"
    },
    "7115": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9433
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7116": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9433
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7117": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9433
      ],
      "op": "AND",
      "path": "15"
    },
    "7118": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9433
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7119": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9449
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "7124": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9449
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7127": {
      "op": "ADD"
    },
    "7128": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7130": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7132": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7133": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7134": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7135": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "SUB",
      "path": "15"
    },
    "7136": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7137": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7138": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7139": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "7140": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7141": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7142": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7143": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BEF"
    },
    "7146": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7147": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7149": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7150": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "REVERT",
      "path": "15"
    },
    "7151": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7152": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "POP",
      "path": "15"
    },
    "7153": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "GAS",
      "path": "15"
    },
    "7154": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "7155": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7156": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7157": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7158": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C03"
    },
    "7161": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7162": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "7163": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7165": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7166": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "7167": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "7168": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7170": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "REVERT",
      "path": "15"
    },
    "7171": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7172": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "POP",
      "path": "15"
    },
    "7173": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "POP",
      "path": "15"
    },
    "7174": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "POP",
      "path": "15"
    },
    "7175": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "POP",
      "path": "15"
    },
    "7176": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7178": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7179": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "7180": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "7182": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "NOT",
      "path": "15"
    },
    "7183": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "7185": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7186": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ADD",
      "path": "15"
    },
    "7187": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "AND",
      "path": "15"
    },
    "7188": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7189": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ADD",
      "path": "15"
    },
    "7190": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7191": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7193": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7194": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "POP",
      "path": "15"
    },
    "7195": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7196": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "ADD",
      "path": "15"
    },
    "7197": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7198": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C27"
    },
    "7201": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7202": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7203": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42A5"
    },
    "7206": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9425,
        9465
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7207": {
      "fn": "Registry.handleRent",
      "offset": [
        9425,
        9465
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7208": {
      "fn": "Registry.handleRent",
      "offset": [
        9398,
        9466
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7209": {
      "fn": "Registry.handleRent",
      "offset": [
        9398,
        9466
      ],
      "op": "POP",
      "path": "15"
    },
    "7210": {
      "fn": "Registry.handleRent",
      "offset": [
        9480,
        9496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7212": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9511
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7219": {
      "op": "SHL"
    },
    "7220": {
      "op": "SUB"
    },
    "7221": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9520
      ],
      "op": "AND",
      "path": "15"
    },
    "7222": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9520
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "7227": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7229": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7230": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7231": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "7236": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "AND",
      "path": "15"
    },
    "7237": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "7239": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "SHL",
      "path": "15"
    },
    "7240": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7241": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7242": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7244": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ADD",
      "path": "15"
    },
    "7245": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7247": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7249": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7250": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7251": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7252": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "SUB",
      "path": "15"
    },
    "7253": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7254": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7255": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7256": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "7257": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7258": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7259": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7260": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C64"
    },
    "7263": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7264": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7266": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7267": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "REVERT",
      "path": "15"
    },
    "7268": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7269": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "POP",
      "path": "15"
    },
    "7270": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "GAS",
      "path": "15"
    },
    "7271": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "7272": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7273": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7274": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7275": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C78"
    },
    "7278": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7279": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "7280": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7282": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7283": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "7284": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "7285": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7287": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "REVERT",
      "path": "15"
    },
    "7288": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7289": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "POP",
      "path": "15"
    },
    "7290": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "POP",
      "path": "15"
    },
    "7291": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "POP",
      "path": "15"
    },
    "7292": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "POP",
      "path": "15"
    },
    "7293": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7295": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7296": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "7297": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "7299": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "NOT",
      "path": "15"
    },
    "7300": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "7302": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7303": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ADD",
      "path": "15"
    },
    "7304": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "AND",
      "path": "15"
    },
    "7305": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7306": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ADD",
      "path": "15"
    },
    "7307": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7308": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7310": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7311": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "POP",
      "path": "15"
    },
    "7312": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7313": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "ADD",
      "path": "15"
    },
    "7314": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7315": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C9C"
    },
    "7318": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7319": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7320": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4899"
    },
    "7323": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9499,
        9522
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7324": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9522
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7325": {
      "fn": "Registry.handleRent",
      "offset": [
        9480,
        9522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7327": {
      "fn": "Registry.handleRent",
      "offset": [
        9480,
        9522
      ],
      "op": "AND",
      "path": "15"
    },
    "7328": {
      "fn": "Registry.handleRent",
      "offset": [
        9480,
        9522
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7329": {
      "op": "POP"
    },
    "7330": {
      "fn": "Registry.handleRent",
      "offset": [
        9554,
        9567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7332": {
      "fn": "Registry.handleRent",
      "offset": [
        9570,
        9584
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CAE"
    },
    "7335": {
      "fn": "Registry.handleRent",
      "offset": [
        9480,
        9522
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7336": {
      "fn": "Registry.handleRent",
      "offset": [
        9570,
        9572
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "7338": {
      "fn": "Registry.handleRent",
      "offset": [
        9570,
        9584
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4BE9"
    },
    "7341": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9570,
        9584
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7342": {
      "fn": "Registry.handleRent",
      "offset": [
        9570,
        9584
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7343": {
      "fn": "Registry.handleRent",
      "offset": [
        9674,
        9696
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7344": {
      "fn": "Registry.handleRent",
      "offset": [
        9674,
        9696
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7345": {
      "fn": "Registry.handleRent",
      "offset": [
        9554,
        9584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7346": {
      "fn": "Registry.handleRent",
      "offset": [
        9554,
        9584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7347": {
      "op": "POP"
    },
    "7348": {
      "fn": "Registry.handleRent",
      "offset": [
        9602,
        9619
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7350": {
      "fn": "Registry.handleRent",
      "offset": [
        9602,
        9619
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7351": {
      "fn": "Registry.handleRent",
      "offset": [
        9662,
        9704
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CCA"
    },
    "7354": {
      "fn": "Registry.handleRent",
      "offset": [
        9662,
        9704
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7359": {
      "op": "SHL"
    },
    "7360": {
      "fn": "Registry.handleRent",
      "offset": [
        9674,
        9696
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7361": {
      "fn": "Registry.handleRent",
      "offset": [
        9674,
        9696
      ],
      "op": "DIV",
      "path": "15"
    },
    "7362": {
      "fn": "Registry.handleRent",
      "offset": [
        9674,
        9696
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "7364": {
      "fn": "Registry.handleRent",
      "offset": [
        9674,
        9696
      ],
      "op": "SHL",
      "path": "15"
    },
    "7365": {
      "fn": "Registry.handleRent",
      "offset": [
        9554,
        9584
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7366": {
      "fn": "Registry.handleRent",
      "offset": [
        9662,
        9673
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36E2"
    },
    "7369": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9662,
        9704
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7370": {
      "fn": "Registry.handleRent",
      "offset": [
        9662,
        9704
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7371": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9643
      ],
      "op": "DUP12",
      "path": "15"
    },
    "7372": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9656
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "7375": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9656
      ],
      "op": "ADD",
      "path": "15"
    },
    "7376": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9656
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7377": {
      "fn": "Registry.handleRent",
      "offset": [
        9657,
        9658
      ],
      "op": "DUP12",
      "path": "15"
    },
    "7378": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7379": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7380": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7381": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "LT",
      "path": "15"
    },
    "7382": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CE1"
    },
    "7385": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7386": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CE1"
    },
    "7389": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7392": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9641,
        9659
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7393": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7394": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7396": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "MUL",
      "path": "15"
    },
    "7397": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7399": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "ADD",
      "path": "15"
    },
    "7400": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "ADD",
      "path": "15"
    },
    "7401": {
      "fn": "Registry.handleRent",
      "offset": [
        9641,
        9659
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7402": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9659
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7404": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9659
      ],
      "op": "AND",
      "path": "15"
    },
    "7405": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9624
      ],
      "op": "DUP13",
      "path": "15"
    },
    "7406": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "7409": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9635
      ],
      "op": "ADD",
      "path": "15"
    },
    "7410": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9635
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7411": {
      "fn": "Registry.handleRent",
      "offset": [
        9636,
        9637
      ],
      "op": "DUP13",
      "path": "15"
    },
    "7412": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7413": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7414": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7415": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "LT",
      "path": "15"
    },
    "7416": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D03"
    },
    "7419": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7420": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D03"
    },
    "7423": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7426": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9622,
        9638
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7427": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7428": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7430": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "MUL",
      "path": "15"
    },
    "7431": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7433": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "ADD",
      "path": "15"
    },
    "7434": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "ADD",
      "path": "15"
    },
    "7435": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9638
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7436": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9659
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D15"
    },
    "7439": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9659
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7440": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9659
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7441": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9659
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "7444": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9622,
        9659
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7445": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9659
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7446": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9704
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D1F"
    },
    "7449": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9704
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7450": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9704
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7451": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9704
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "7454": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9622,
        9704
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7455": {
      "fn": "Registry.handleRent",
      "offset": [
        9622,
        9704
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7456": {
      "fn": "Registry.handleRent",
      "offset": [
        9602,
        9704
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7457": {
      "fn": "Registry.handleRent",
      "offset": [
        9602,
        9704
      ],
      "op": "POP",
      "path": "15"
    },
    "7458": {
      "fn": "Registry.handleRent",
      "offset": [
        9742,
        9743
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 52,
      "value": "0x0"
    },
    "7460": {
      "fn": "Registry.handleRent",
      "offset": [
        9730,
        9739
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7461": {
      "branch": 146,
      "fn": "Registry.handleRent",
      "offset": [
        9730,
        9743
      ],
      "op": "GT",
      "path": "15"
    },
    "7462": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D41"
    },
    "7465": {
      "branch": 146,
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7466": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7468": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7475": {
      "op": "SHL"
    },
    "7476": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7477": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7478": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7480": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "ADD",
      "path": "15"
    },
    "7481": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "7484": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7485": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A6B"
    },
    "7488": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9722,
        9773
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7489": {
      "fn": "Registry.handleRent",
      "offset": [
        9722,
        9773
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7490": {
      "fn": "Registry.handleRent",
      "offset": [
        9791,
        9858
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 53,
      "value": "0x1D56"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7499": {
      "op": "SHL"
    },
    "7500": {
      "op": "SUB"
    },
    "7501": {
      "fn": "Registry.handleRent",
      "offset": [
        9791,
        9820
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7502": {
      "fn": "Registry.handleRent",
      "offset": [
        9791,
        9820
      ],
      "op": "AND",
      "path": "15"
    },
    "7503": {
      "fn": "Registry.handleRent",
      "offset": [
        9821,
        9831
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7504": {
      "fn": "Registry.handleRent",
      "offset": [
        9841,
        9845
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "7505": {
      "fn": "Registry.handleRent",
      "offset": [
        9848,
        9857
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7506": {
      "fn": "Registry.handleRent",
      "offset": [
        9791,
        9820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3771"
    },
    "7509": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9791,
        9858
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7510": {
      "fn": "Registry.handleRent",
      "offset": [
        9791,
        9858
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7511": {
      "fn": "Registry.handleRent",
      "offset": [
        9536,
        9873
      ],
      "op": "POP",
      "path": "15"
    },
    "7512": {
      "fn": "Registry.handleRent",
      "offset": [
        9536,
        9873
      ],
      "op": "POP",
      "path": "15"
    },
    "7513": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 54,
      "value": "0x40"
    },
    "7515": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7516": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7517": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7519": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7520": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7522": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7523": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7524": {
      "fn": "Registry.handleRent",
      "offset": [
        9975,
        9985
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7531": {
      "op": "SHL"
    },
    "7532": {
      "op": "SUB"
    },
    "7533": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7534": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7535": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7536": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7538": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7539": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10074
      ],
      "op": "DUP11",
      "path": "15"
    },
    "7540": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10087
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "7543": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10087
      ],
      "op": "ADD",
      "path": "15"
    },
    "7544": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10087
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7545": {
      "fn": "Registry.handleRent",
      "offset": [
        10088,
        10089
      ],
      "op": "DUP11",
      "path": "15"
    },
    "7546": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7547": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7548": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7549": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "LT",
      "path": "15"
    },
    "7550": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D89"
    },
    "7553": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7554": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D89"
    },
    "7557": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7560": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10072,
        10090
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7561": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7562": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7564": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "MUL",
      "path": "15"
    },
    "7565": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7567": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "ADD",
      "path": "15"
    },
    "7568": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "ADD",
      "path": "15"
    },
    "7569": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10090
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7570": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7572": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7573": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7574": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7575": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7577": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7578": {
      "fn": "Registry.handleRent",
      "offset": [
        10125,
        10140
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "7579": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "7584": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7585": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7586": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7587": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7589": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7590": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10025
      ],
      "op": "DUP11",
      "path": "15"
    },
    "7591": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "7594": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10036
      ],
      "op": "ADD",
      "path": "15"
    },
    "7595": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10036
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7596": {
      "fn": "Registry.handleRent",
      "offset": [
        10037,
        10038
      ],
      "op": "DUP11",
      "path": "15"
    },
    "7597": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7598": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7599": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7600": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "LT",
      "path": "15"
    },
    "7601": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DBC"
    },
    "7604": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7605": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DBC"
    },
    "7608": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7611": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10023,
        10039
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7612": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7613": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7615": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7616": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7617": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "MUL",
      "path": "15"
    },
    "7618": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7619": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7620": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7621": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "ADD",
      "path": "15"
    },
    "7622": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7623": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "ADD",
      "path": "15"
    },
    "7624": {
      "fn": "Registry.handleRent",
      "offset": [
        10023,
        10039
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7625": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7628": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7629": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7630": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7631": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7632": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7633": {
      "fn": "Registry.handleRent",
      "offset": [
        9916,
        10156
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7634": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7636": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7637": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7638": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7639": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "7641": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7642": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7643": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7645": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7646": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7647": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7648": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        9913
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7649": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7650": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7651": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7652": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7653": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7654": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7655": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7656": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7657": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7658": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7659": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7660": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7661": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "7663": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7664": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "7665": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7666": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7667": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7668": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "7669": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7674": {
      "op": "SHL"
    },
    "7675": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "MUL",
      "path": "15"
    },
    "7676": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7681": {
      "op": "SHL"
    },
    "7682": {
      "op": "NOT"
    },
    "7683": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "7688": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7689": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "7690": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7695": {
      "op": "SHL"
    },
    "7696": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "MUL",
      "path": "15"
    },
    "7697": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "7698": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7699": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "7700": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7701": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7710": {
      "op": "SHL"
    },
    "7711": {
      "op": "NOT"
    },
    "7712": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7714": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7715": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7716": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7721": {
      "op": "SHL"
    },
    "7722": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "MUL",
      "path": "15"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7729": {
      "op": "SHL"
    },
    "7730": {
      "op": "SUB"
    },
    "7731": {
      "op": "NOT"
    },
    "7732": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7733": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "7734": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7741": {
      "op": "SHL"
    },
    "7742": {
      "op": "SUB"
    },
    "7743": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7744": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "7745": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7746": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "7747": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7748": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "7749": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "OR",
      "path": "15"
    },
    "7750": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7751": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7752": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7753": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "OR",
      "path": "15"
    },
    "7754": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "AND",
      "path": "15"
    },
    "7755": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7756": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7757": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7758": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "OR",
      "path": "15"
    },
    "7759": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7760": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7761": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7762": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "OR",
      "path": "15"
    },
    "7763": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7764": {
      "fn": "Registry.handleRent",
      "offset": [
        9886,
        10156
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7765": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10237
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 55,
      "value": "0x160"
    },
    "7768": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10237
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7769": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10237
      ],
      "op": "ADD",
      "path": "15"
    },
    "7770": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10237
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7771": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7772": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7773": {
      "fn": "Registry.handleRent",
      "offset": [
        10238,
        10239
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7774": {
      "fn": "Registry.handleRent",
      "offset": [
        10238,
        10239
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7775": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7776": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "LT",
      "path": "15"
    },
    "7777": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E6C"
    },
    "7780": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7781": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E6C"
    },
    "7784": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7787": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10224,
        10240
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7788": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7789": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7791": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7792": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7793": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "MUL",
      "path": "15"
    },
    "7794": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7795": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7796": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7797": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "ADD",
      "path": "15"
    },
    "7798": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7799": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "ADD",
      "path": "15"
    },
    "7800": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7801": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7803": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7804": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7805": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7806": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10178
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "7808": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7809": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7810": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7811": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7813": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7814": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7815": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10197
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7816": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7817": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7818": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10213
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "7820": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10213
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7821": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EA2"
    },
    "7824": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7825": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7826": {
      "fn": "Registry.handleRent",
      "offset": [
        10224,
        10240
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7831": {
      "op": "SHL"
    },
    "7832": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7833": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "DIV",
      "path": "15"
    },
    "7834": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7837": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "AND",
      "path": "15"
    },
    "7838": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CB0"
    },
    "7841": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10170,
        10241
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7842": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7843": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7844": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "POP",
      "path": "15"
    },
    "7845": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7848": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "EXP",
      "path": "15"
    },
    "7849": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7850": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7851": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7852": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7855": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "MUL",
      "path": "15"
    },
    "7856": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "NOT",
      "path": "15"
    },
    "7857": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "AND",
      "path": "15"
    },
    "7858": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7859": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7860": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7863": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "AND",
      "path": "15"
    },
    "7864": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "MUL",
      "path": "15"
    },
    "7865": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "OR",
      "path": "15"
    },
    "7866": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7867": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7868": {
      "fn": "Registry.handleRent",
      "offset": [
        10170,
        10241
      ],
      "op": "POP",
      "path": "15"
    },
    "7869": {
      "fn": "Registry.handleRent",
      "offset": [
        10321,
        10330
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 56,
      "value": "0x4"
    },
    "7871": {
      "fn": "Registry.handleRent",
      "offset": [
        10321,
        10330
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7872": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10306
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7873": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10316
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7876": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10316
      ],
      "op": "ADD",
      "path": "15"
    },
    "7877": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10316
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7878": {
      "fn": "Registry.handleRent",
      "offset": [
        10317,
        10318
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7879": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7880": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7881": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7882": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "LT",
      "path": "15"
    },
    "7883": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1ED6"
    },
    "7886": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7887": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1ED6"
    },
    "7890": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7893": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10304,
        10319
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7894": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7895": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7897": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "MUL",
      "path": "15"
    },
    "7898": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7900": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "ADD",
      "path": "15"
    },
    "7901": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "ADD",
      "path": "15"
    },
    "7902": {
      "fn": "Registry.handleRent",
      "offset": [
        10304,
        10319
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7903": {
      "fn": "Registry.handleRent",
      "offset": [
        10292,
        10302
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7910": {
      "op": "SHL"
    },
    "7911": {
      "op": "SUB"
    },
    "7912": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "AND",
      "path": "15"
    },
    "7913": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631"
    },
    "7946": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10341
      ],
      "op": "DUP13",
      "path": "15"
    },
    "7947": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10352
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "7950": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10352
      ],
      "op": "ADD",
      "path": "15"
    },
    "7951": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10352
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7952": {
      "fn": "Registry.handleRent",
      "offset": [
        10353,
        10354
      ],
      "op": "DUP13",
      "path": "15"
    },
    "7953": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7954": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7955": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7956": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "LT",
      "path": "15"
    },
    "7957": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F20"
    },
    "7960": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7961": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F20"
    },
    "7964": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7967": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10339,
        10355
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7968": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7969": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7971": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "MUL",
      "path": "15"
    },
    "7972": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7974": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "ADD",
      "path": "15"
    },
    "7975": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "ADD",
      "path": "15"
    },
    "7976": {
      "fn": "Registry.handleRent",
      "offset": [
        10339,
        10355
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7977": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10360
      ],
      "op": "DUP14",
      "path": "15"
    },
    "7978": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10373
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "7981": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10373
      ],
      "op": "ADD",
      "path": "15"
    },
    "7982": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10373
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7983": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10375
      ],
      "op": "DUP14",
      "path": "15"
    },
    "7984": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7985": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7986": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7987": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "LT",
      "path": "15"
    },
    "7988": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F3F"
    },
    "7991": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7992": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F3F"
    },
    "7995": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "7998": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10358,
        10376
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7999": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8000": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8002": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8003": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8004": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "MUL",
      "path": "15"
    },
    "8005": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8006": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8007": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8008": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "ADD",
      "path": "15"
    },
    "8009": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8010": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "ADD",
      "path": "15"
    },
    "8011": {
      "fn": "Registry.handleRent",
      "offset": [
        10358,
        10376
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8012": {
      "fn": "Registry.handleRent",
      "offset": [
        10378,
        10394
      ],
      "op": "DUP11",
      "path": "15"
    },
    "8013": {
      "fn": "Registry.handleRent",
      "offset": [
        10378,
        10394
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8014": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8016": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8017": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8018": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8021": {
      "op": "SWAP1"
    },
    "8022": {
      "op": "SWAP6"
    },
    "8023": {
      "op": "AND"
    },
    "8024": {
      "op": "DUP6"
    },
    "8025": {
      "op": "MSTORE"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8028": {
      "op": "SWAP1"
    },
    "8029": {
      "op": "SWAP3"
    },
    "8030": {
      "op": "AND"
    },
    "8031": {
      "op": "SWAP3"
    },
    "8032": {
      "op": "DUP5"
    },
    "8033": {
      "op": "ADD"
    },
    "8034": {
      "op": "SWAP3"
    },
    "8035": {
      "op": "SWAP1"
    },
    "8036": {
      "op": "SWAP3"
    },
    "8037": {
      "op": "MSTORE"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8042": {
      "op": "SHL"
    },
    "8043": {
      "fn": "Registry.handleRent",
      "offset": [
        10378,
        10394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8044": {
      "fn": "Registry.handleRent",
      "offset": [
        10378,
        10394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8045": {
      "fn": "Registry.handleRent",
      "offset": [
        10378,
        10394
      ],
      "op": "DIV",
      "path": "15"
    },
    "8046": {
      "fn": "Registry.handleRent",
      "offset": [
        10378,
        10394
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "8051": {
      "fn": "Registry.handleRent",
      "offset": [
        10378,
        10394
      ],
      "op": "AND",
      "path": "15"
    },
    "8052": {
      "op": "SWAP1"
    },
    "8053": {
      "op": "DUP3"
    },
    "8054": {
      "op": "ADD"
    },
    "8055": {
      "op": "MSTORE"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8058": {
      "op": "ADD"
    },
    "8059": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8061": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8062": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8063": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8064": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "SUB",
      "path": "15"
    },
    "8065": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8066": {
      "fn": "Registry.handleRent",
      "offset": [
        10260,
        10412
      ],
      "op": "LOG4",
      "path": "15"
    },
    "8067": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10435
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 57,
      "value": "0x4"
    },
    "8069": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8070": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8071": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8072": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10435
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8074": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F92"
    },
    "8077": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8078": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "8081": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10426,
        10437
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8082": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8083": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8084": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8085": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "POP",
      "path": "15"
    },
    "8086": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "8087": {
      "fn": "Registry.handleRent",
      "offset": [
        10426,
        10437
      ],
      "op": "POP",
      "path": "15"
    },
    "8088": {
      "fn": "Registry.handleRent",
      "offset": [
        8585,
        10448
      ],
      "op": "POP",
      "path": "15"
    },
    "8089": {
      "fn": "Registry.handleRent",
      "offset": [
        8585,
        10448
      ],
      "op": "POP",
      "path": "15"
    },
    "8090": {
      "fn": "Registry.handleRent",
      "offset": [
        8585,
        10448
      ],
      "op": "POP",
      "path": "15"
    },
    "8091": {
      "fn": "Registry.handleRent",
      "offset": [
        8585,
        10448
      ],
      "op": "POP",
      "path": "15"
    },
    "8092": {
      "fn": "Registry.handleRent",
      "offset": [
        8585,
        10448
      ],
      "op": "POP",
      "path": "15"
    },
    "8093": {
      "fn": "Registry.handleRent",
      "offset": [
        8585,
        10448
      ],
      "op": "POP",
      "path": "15"
    },
    "8094": {
      "fn": "Registry.handleRent",
      "offset": [
        8585,
        10448
      ],
      "op": "POP",
      "path": "15"
    },
    "8095": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 58
    },
    "8096": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8097": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FA9"
    },
    "8100": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8101": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "8104": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        8580,
        8583
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8105": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8106": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8107": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "POP",
      "path": "15"
    },
    "8108": {
      "fn": "Registry.handleRent",
      "offset": [
        8580,
        8583
      ],
      "op": "POP",
      "path": "15"
    },
    "8109": {
      "fn": "Registry.handleRent",
      "offset": [
        8540,
        10448
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x185E"
    },
    "8112": {
      "fn": "Registry.handleRent",
      "offset": [
        8540,
        10448
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8113": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21242,
        22109
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8114": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21532,
        21550
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FB9"
    },
    "8117": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21532,
        21550
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F1B"
    },
    "8120": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21532,
        21550
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8121": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21532,
        21550
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8122": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 59,
      "value": "0x40"
    },
    "8124": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8125": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8126": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C0"
    },
    "8129": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8130": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8132": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8133": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8134": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21596,
        21597
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8136": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8137": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8138": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8140": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8141": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21618,
        21619
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8143": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8144": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8145": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8147": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8148": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21646,
        21657
      ],
      "op": "DUP9",
      "path": "15"
    },
    "8149": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8150": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8151": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8153": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8154": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21683,
        21693
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8155": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8156": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8157": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8159": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8160": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21716,
        21723
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8161": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8162": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8163": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8165": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8166": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21763,
        21764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8174": {
      "op": "SHL"
    },
    "8175": {
      "op": "SUB"
    },
    "8176": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8177": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "GT",
      "path": "15"
    },
    "8178": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8179": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FFE"
    },
    "8182": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8183": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FFE"
    },
    "8186": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D73"
    },
    "8189": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21749,
        21765
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8190": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8191": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8193": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8194": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8195": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8196": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8197": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8198": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8199": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8201": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "MUL",
      "path": "15"
    },
    "8202": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8204": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "ADD",
      "path": "15"
    },
    "8205": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8206": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "ADD",
      "path": "15"
    },
    "8207": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8209": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8210": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8211": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8212": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2027"
    },
    "8215": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8216": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8217": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8219": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "ADD",
      "path": "15"
    },
    "8220": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8222": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8223": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "MUL",
      "path": "15"
    },
    "8224": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8225": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8226": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8227": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "8228": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "ADD",
      "path": "15"
    },
    "8229": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8230": {
      "op": "POP"
    },
    "8231": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21749,
        21765
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8232": {
      "op": "POP"
    },
    "8233": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8234": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8235": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8237": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8238": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21960,
        21961
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8240": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8242": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8243": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8244": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8245": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8246": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8247": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8248": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8250": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "MUL",
      "path": "15"
    },
    "8251": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8253": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "ADD",
      "path": "15"
    },
    "8254": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8255": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "ADD",
      "path": "15"
    },
    "8256": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8258": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8259": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8260": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8261": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2058"
    },
    "8264": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8265": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8266": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8268": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "ADD",
      "path": "15"
    },
    "8269": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8271": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8272": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "MUL",
      "path": "15"
    },
    "8273": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8274": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8275": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8276": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "8277": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "ADD",
      "path": "15"
    },
    "8278": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8279": {
      "op": "POP"
    },
    "8280": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21948,
        21962
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8281": {
      "op": "POP"
    },
    "8282": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8283": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8284": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8286": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8287": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22005,
        22006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8289": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8291": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8292": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8293": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8294": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8295": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8296": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8297": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8299": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "MUL",
      "path": "15"
    },
    "8300": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8302": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "ADD",
      "path": "15"
    },
    "8303": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8304": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "ADD",
      "path": "15"
    },
    "8305": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8307": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8308": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8309": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8310": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2089"
    },
    "8313": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8314": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8315": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8317": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "ADD",
      "path": "15"
    },
    "8318": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8320": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8321": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "MUL",
      "path": "15"
    },
    "8322": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8323": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8324": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8325": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "8326": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "ADD",
      "path": "15"
    },
    "8327": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8328": {
      "op": "POP"
    },
    "8329": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21992,
        22007
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8330": {
      "op": "POP"
    },
    "8331": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8332": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8333": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8335": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8336": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8337": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8338": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "8339": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8340": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "8341": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8342": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8344": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8345": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8348": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8349": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8350": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8351": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8352": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "DUP10",
      "path": "15"
    },
    "8353": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "ADD",
      "path": "15"
    },
    "8354": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8355": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21825,
        21841
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8356": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8357": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8358": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8359": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8360": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8361": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8362": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8363": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8365": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8366": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8367": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "8368": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8369": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "8370": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8371": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8373": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8374": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8375": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "8376": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8377": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "8378": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8379": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8380": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8381": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8382": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8383": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8384": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8385": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8386": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "ADD",
      "path": "15"
    },
    "8387": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8388": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22035,
        22049
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8389": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "8391": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8392": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8393": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8394": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8395": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8396": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "8397": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8398": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8399": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "8400": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8401": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "ADD",
      "path": "15"
    },
    "8402": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8403": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8404": {
      "fn": "Registry.createRentCallData",
      "offset": [
        22078,
        22091
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8405": {
      "op": "POP"
    },
    "8406": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "8408": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8409": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8410": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "ADD",
      "path": "15"
    },
    "8411": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21567,
        22102
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8412": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21562,
        22102
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8413": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21562,
        22102
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8414": {
      "op": "POP"
    },
    "8415": {
      "op": "POP"
    },
    "8416": {
      "op": "POP"
    },
    "8417": {
      "fn": "Registry.createRentCallData",
      "jump": "o",
      "offset": [
        21242,
        22109
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8418": {
      "fn": "Registry.handleLend",
      "offset": [
        5583,
        7342
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8419": {
      "fn": "Registry.handleLend",
      "offset": [
        5668,
        5675
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8420": {
      "fn": "Registry.handleLend",
      "offset": [
        5668,
        5675
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8421": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8422": {
      "fn": "Registry.handleLend",
      "offset": [
        5681,
        5683
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8423": {
      "fn": "Registry.handleLend",
      "offset": [
        5681,
        5689
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8425": {
      "fn": "Registry.handleLend",
      "offset": [
        5681,
        5689
      ],
      "op": "ADD",
      "path": "15"
    },
    "8426": {
      "fn": "Registry.handleLend",
      "offset": [
        5681,
        5689
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8427": {
      "fn": "Registry.handleLend",
      "offset": [
        5677,
        5678
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8428": {
      "fn": "Registry.handleLend",
      "offset": [
        5677,
        5689
      ],
      "op": "LT",
      "path": "15"
    },
    "8429": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8430": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2693"
    },
    "8433": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8434": {
      "fn": "Registry.handleLend",
      "offset": [
        5710,
        5733
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 60,
      "value": "0x20FB"
    },
    "8437": {
      "fn": "Registry.handleLend",
      "offset": [
        5727,
        5729
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8438": {
      "fn": "Registry.handleLend",
      "offset": [
        5731,
        5732
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8439": {
      "fn": "Registry.handleLend",
      "offset": [
        5710,
        5726
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37DC"
    },
    "8442": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5710,
        5733
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8443": {
      "fn": "Registry.handleLend",
      "offset": [
        5710,
        5733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8444": {
      "fn": "Registry.handleLend",
      "offset": [
        5747,
        5765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8446": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5797
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8447": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5808
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8449": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5808
      ],
      "op": "ADD",
      "path": "15"
    },
    "8450": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5808
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8451": {
      "fn": "Registry.handleLend",
      "offset": [
        5809,
        5811
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8452": {
      "fn": "Registry.handleLend",
      "offset": [
        5809,
        5816
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8454": {
      "fn": "Registry.handleLend",
      "offset": [
        5809,
        5816
      ],
      "op": "ADD",
      "path": "15"
    },
    "8455": {
      "fn": "Registry.handleLend",
      "offset": [
        5809,
        5816
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8456": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8457": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8458": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8459": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "LT",
      "path": "15"
    },
    "8460": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2117"
    },
    "8463": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8464": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2117"
    },
    "8467": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "8470": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5795,
        5817
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8471": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8472": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8474": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "MUL",
      "path": "15"
    },
    "8475": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8477": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "ADD",
      "path": "15"
    },
    "8478": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "ADD",
      "path": "15"
    },
    "8479": {
      "fn": "Registry.handleLend",
      "offset": [
        5795,
        5817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8480": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5821
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8481": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8483": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5829
      ],
      "op": "ADD",
      "path": "15"
    },
    "8484": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5829
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8485": {
      "fn": "Registry.handleLend",
      "offset": [
        5830,
        5831
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8486": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8487": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8488": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8489": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "LT",
      "path": "15"
    },
    "8490": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2135"
    },
    "8493": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8494": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2135"
    },
    "8497": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "8500": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5819,
        5832
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8501": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8502": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8504": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "MUL",
      "path": "15"
    },
    "8505": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8507": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "ADD",
      "path": "15"
    },
    "8508": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "ADD",
      "path": "15"
    },
    "8509": {
      "fn": "Registry.handleLend",
      "offset": [
        5819,
        5832
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8510": {
      "fn": "Registry.handleLend",
      "offset": [
        5834,
        5843
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "8512": {
      "fn": "Registry.handleLend",
      "offset": [
        5834,
        5843
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8513": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8515": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8516": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8518": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "ADD",
      "path": "15"
    },
    "8519": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2152"
    },
    "8522": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8523": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8524": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8525": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8526": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "8529": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5778,
        5844
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8530": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8531": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8533": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8534": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8537": {
      "op": "NOT"
    },
    "8538": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8539": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8540": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "SUB",
      "path": "15"
    },
    "8541": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "ADD",
      "path": "15"
    },
    "8542": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8543": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8544": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8545": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8546": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8547": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8548": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8549": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8551": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8552": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8553": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "ADD",
      "path": "15"
    },
    "8554": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8555": {
      "fn": "Registry.handleLend",
      "offset": [
        5859,
        5892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8557": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8558": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8559": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8560": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5903
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "8562": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8563": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8564": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8565": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8566": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8567": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8568": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8569": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 61,
      "value": "0x100"
    },
    "8572": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8573": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8574": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8575": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8576": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8577": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8578": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8579": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8580": {
      "fn": "Registry.handleLend",
      "offset": [
        5768,
        5845
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8581": {
      "op": "POP"
    },
    "8582": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8583": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8584": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2237"
    },
    "8587": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8588": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8589": {
      "fn": "Registry.handleLend",
      "offset": [
        5895,
        5915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8590": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8591": {
      "fn": "Registry.handleLend",
      "offset": [
        5778,
        5844
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8592": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8594": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8595": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8597": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8598": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "GT",
      "path": "15"
    },
    "8599": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8600": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21A3"
    },
    "8603": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8604": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21A3"
    },
    "8607": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "8610": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8611": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8612": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8614": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8615": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "GT",
      "path": "15"
    },
    "8616": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8617": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21B4"
    },
    "8620": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8621": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21B4"
    },
    "8624": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "8627": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8628": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8629": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8630": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8631": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8632": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8633": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "8636": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8637": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DIV",
      "path": "15"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8644": {
      "op": "SHL"
    },
    "8645": {
      "op": "SUB"
    },
    "8646": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8647": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8649": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8650": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8651": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8656": {
      "op": "SHL"
    },
    "8657": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8658": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DIV",
      "path": "15"
    },
    "8659": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8661": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8662": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8663": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8664": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8666": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8667": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8668": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8673": {
      "op": "SHL"
    },
    "8674": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8675": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DIV",
      "path": "15"
    },
    "8676": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8678": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8679": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8680": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SHL",
      "path": "15"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8687": {
      "op": "SHL"
    },
    "8688": {
      "op": "SUB"
    },
    "8689": {
      "op": "NOT"
    },
    "8690": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8691": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8693": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8694": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8695": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8700": {
      "op": "SHL"
    },
    "8701": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8702": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DIV",
      "path": "15"
    },
    "8703": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8706": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8707": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8708": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8709": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8711": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8712": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8713": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8716": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8718": {
      "op": "SHL"
    },
    "8719": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8720": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DIV",
      "path": "15"
    },
    "8721": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8722": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "8724": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8725": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8726": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8731": {
      "op": "SHL"
    },
    "8732": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8733": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DIV",
      "path": "15"
    },
    "8734": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8735": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8736": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "8738": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8739": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8740": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8745": {
      "op": "SHL"
    },
    "8746": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8747": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8748": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "DIV",
      "path": "15"
    },
    "8749": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "AND",
      "path": "15"
    },
    "8750": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8751": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8752": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8753": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "ADD",
      "path": "15"
    },
    "8754": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8755": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5941
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x399A"
    },
    "8758": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8759": {
      "fn": "Registry.handleLend",
      "offset": [
        5929,
        5950
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8760": {
      "fn": "Registry.handleLend",
      "offset": [
        5964,
        6013
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 62,
      "value": "0x225E"
    },
    "8763": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        5995
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8764": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "8767": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6008
      ],
      "op": "ADD",
      "path": "15"
    },
    "8768": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6008
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8769": {
      "fn": "Registry.handleLend",
      "offset": [
        6009,
        6010
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8770": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8771": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8772": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8773": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "LT",
      "path": "15"
    },
    "8774": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2251"
    },
    "8777": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8778": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2251"
    },
    "8781": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "8784": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5993,
        6011
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8785": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8786": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8788": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "MUL",
      "path": "15"
    },
    "8789": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8791": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "ADD",
      "path": "15"
    },
    "8792": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "ADD",
      "path": "15"
    },
    "8793": {
      "fn": "Registry.handleLend",
      "offset": [
        5993,
        6011
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8794": {
      "fn": "Registry.handleLend",
      "offset": [
        5964,
        5986
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A53"
    },
    "8797": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5964,
        6013
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8798": {
      "fn": "Registry.handleLend",
      "offset": [
        5964,
        6013
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8799": {
      "fn": "Registry.handleLend",
      "offset": [
        6027,
        6037
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8801": {
      "fn": "Registry.handleLend",
      "offset": [
        6027,
        6037
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8802": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6042
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8803": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8805": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6054
      ],
      "op": "ADD",
      "path": "15"
    },
    "8806": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6054
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8807": {
      "fn": "Registry.handleLend",
      "offset": [
        6055,
        6056
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8808": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8809": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8810": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8811": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "LT",
      "path": "15"
    },
    "8812": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2277"
    },
    "8815": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8816": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2277"
    },
    "8819": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "8822": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6040,
        6057
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8823": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8824": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8826": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "MUL",
      "path": "15"
    },
    "8827": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8829": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "ADD",
      "path": "15"
    },
    "8830": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "ADD",
      "path": "15"
    },
    "8831": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6057
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8832": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8834": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8835": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "GT",
      "path": "15"
    },
    "8836": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8837": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2290"
    },
    "8840": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8841": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2290"
    },
    "8844": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "8847": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6040,
        6087
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8848": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8849": {
      "fn": "Registry.handleLend",
      "offset": [
        6040,
        6087
      ],
      "op": "EQ",
      "path": "15"
    },
    "8850": {
      "fn": "Registry.handleLend",
      "offset": [
        6027,
        6087
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8851": {
      "fn": "Registry.handleLend",
      "offset": [
        6027,
        6087
      ],
      "op": "POP",
      "path": "15"
    },
    "8852": {
      "fn": "Registry.handleLend",
      "offset": [
        6101,
        6119
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8854": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6131
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8855": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6142
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "8857": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6142
      ],
      "op": "ADD",
      "path": "15"
    },
    "8858": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6142
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8859": {
      "fn": "Registry.handleLend",
      "offset": [
        6143,
        6144
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8860": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8861": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8862": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8863": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "LT",
      "path": "15"
    },
    "8864": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22AB"
    },
    "8867": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8868": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22AB"
    },
    "8871": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "8874": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6129,
        6145
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8875": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8876": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8878": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "MUL",
      "path": "15"
    },
    "8879": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8881": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "ADD",
      "path": "15"
    },
    "8882": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "ADD",
      "path": "15"
    },
    "8883": {
      "fn": "Registry.handleLend",
      "offset": [
        6129,
        6145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8884": {
      "fn": "Registry.handleLend",
      "offset": [
        6101,
        6146
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8885": {
      "fn": "Registry.handleLend",
      "offset": [
        6101,
        6146
      ],
      "op": "POP",
      "path": "15"
    },
    "8886": {
      "branch": 147,
      "fn": "Registry.handleLend",
      "offset": [
        6164,
        6169
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8887": {
      "fn": "Registry.handleLend",
      "offset": [
        6160,
        6238
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8888": {
      "fn": "Registry.handleLend",
      "offset": [
        6160,
        6238
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x231E"
    },
    "8891": {
      "branch": 147,
      "fn": "Registry.handleLend",
      "offset": [
        6160,
        6238
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8892": {
      "fn": "Registry.handleLend",
      "offset": [
        6179,
        6190
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 63
    },
    "8893": {
      "fn": "Registry.handleLend",
      "offset": [
        6179,
        6195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8896": {
      "fn": "Registry.handleLend",
      "offset": [
        6179,
        6195
      ],
      "op": "AND",
      "path": "15"
    },
    "8897": {
      "fn": "Registry.handleLend",
      "offset": [
        6194,
        6195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8899": {
      "branch": 148,
      "fn": "Registry.handleLend",
      "offset": [
        6179,
        6195
      ],
      "op": "EQ",
      "path": "15"
    },
    "8900": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x231E"
    },
    "8903": {
      "branch": 148,
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8904": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8906": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8907": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8913": {
      "op": "SHL"
    },
    "8914": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8915": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8918": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8920": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8921": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "ADD",
      "path": "15"
    },
    "8922": {
      "op": "MSTORE"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8927": {
      "op": "DUP3"
    },
    "8928": {
      "op": "ADD"
    },
    "8929": {
      "op": "MSTORE"
    },
    "8930": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E64416D6F756E742073686F756C642062652065717561"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8965": {
      "op": "DUP3"
    },
    "8966": {
      "op": "ADD"
    },
    "8967": {
      "op": "MSTORE"
    },
    "8968": {
      "op": "PUSH6",
      "value": "0x6C20746F2031"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8977": {
      "op": "SHL"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8980": {
      "op": "DUP3"
    },
    "8981": {
      "op": "ADD"
    },
    "8982": {
      "op": "MSTORE"
    },
    "8983": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8985": {
      "op": "ADD"
    },
    "8986": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "8989": {
      "op": "JUMP"
    },
    "8990": {
      "fn": "Registry.handleLend",
      "offset": [
        6171,
        6238
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8991": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 64,
      "value": "0x40"
    },
    "8993": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8994": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8995": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "8998": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "8999": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9001": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9002": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9003": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6326
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9004": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6338
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9006": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6338
      ],
      "op": "ADD",
      "path": "15"
    },
    "9007": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6338
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9008": {
      "fn": "Registry.handleLend",
      "offset": [
        6339,
        6340
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9009": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9010": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9011": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9012": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "LT",
      "path": "15"
    },
    "9013": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2340"
    },
    "9016": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9017": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2340"
    },
    "9020": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9023": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6324,
        6341
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9024": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9025": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9027": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "MUL",
      "path": "15"
    },
    "9028": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9030": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "ADD",
      "path": "15"
    },
    "9031": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "ADD",
      "path": "15"
    },
    "9032": {
      "fn": "Registry.handleLend",
      "offset": [
        6324,
        6341
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9033": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9035": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9036": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "GT",
      "path": "15"
    },
    "9037": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9038": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2359"
    },
    "9041": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9042": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2359"
    },
    "9045": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "9048": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6275,
        6707
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9049": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9050": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9051": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9052": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9054": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9055": {
      "fn": "Registry.handleLend",
      "offset": [
        6382,
        6392
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9062": {
      "op": "SHL"
    },
    "9063": {
      "op": "SUB"
    },
    "9064": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9065": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9066": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9067": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9069": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9070": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6430
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9071": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6446
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "9073": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6446
      ],
      "op": "ADD",
      "path": "15"
    },
    "9074": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6446
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9075": {
      "fn": "Registry.handleLend",
      "offset": [
        6447,
        6448
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9076": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9077": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9078": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9079": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "LT",
      "path": "15"
    },
    "9080": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2383"
    },
    "9083": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9084": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2383"
    },
    "9087": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9090": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6428,
        6449
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9091": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9092": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9094": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "MUL",
      "path": "15"
    },
    "9095": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9097": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "ADD",
      "path": "15"
    },
    "9098": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "ADD",
      "path": "15"
    },
    "9099": {
      "fn": "Registry.handleLend",
      "offset": [
        6428,
        6449
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9100": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9102": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9103": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9104": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9105": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9107": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9108": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6485
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9109": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6500
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "9111": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6500
      ],
      "op": "ADD",
      "path": "15"
    },
    "9112": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6500
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9113": {
      "fn": "Registry.handleLend",
      "offset": [
        6501,
        6502
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9114": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9115": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9116": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9117": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "LT",
      "path": "15"
    },
    "9118": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A9"
    },
    "9121": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9122": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A9"
    },
    "9125": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9128": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6483,
        6503
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9129": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9130": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9132": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "MUL",
      "path": "15"
    },
    "9133": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9135": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "ADD",
      "path": "15"
    },
    "9136": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "ADD",
      "path": "15"
    },
    "9137": {
      "fn": "Registry.handleLend",
      "offset": [
        6483,
        6503
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9142": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9144": {
      "op": "SHL"
    },
    "9145": {
      "op": "SUB"
    },
    "9146": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "NOT",
      "path": "15"
    },
    "9147": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9148": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9149": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9150": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9152": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9153": {
      "fn": "Registry.handleLend",
      "offset": [
        6533,
        6544
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9154": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9157": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9158": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9159": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9160": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9162": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9163": {
      "fn": "Registry.handleLend",
      "offset": [
        6579,
        6590
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9164": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9167": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9168": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9169": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9170": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9172": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9173": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6624
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9174": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6637
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "9177": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6637
      ],
      "op": "ADD",
      "path": "15"
    },
    "9178": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6637
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9179": {
      "fn": "Registry.handleLend",
      "offset": [
        6638,
        6639
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9180": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9181": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9182": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9183": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "LT",
      "path": "15"
    },
    "9184": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23EB"
    },
    "9187": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9188": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23EB"
    },
    "9191": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9194": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6622,
        6640
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9195": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9196": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9198": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "MUL",
      "path": "15"
    },
    "9199": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9201": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "ADD",
      "path": "15"
    },
    "9202": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "ADD",
      "path": "15"
    },
    "9203": {
      "fn": "Registry.handleLend",
      "offset": [
        6622,
        6640
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9204": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9206": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9207": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9208": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9209": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9211": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9212": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6675
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9213": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6689
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "9216": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6689
      ],
      "op": "ADD",
      "path": "15"
    },
    "9217": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6689
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9218": {
      "fn": "Registry.handleLend",
      "offset": [
        6690,
        6691
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9219": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9220": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9221": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9222": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "LT",
      "path": "15"
    },
    "9223": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2412"
    },
    "9226": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9227": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2412"
    },
    "9230": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9233": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6673,
        6692
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9234": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9235": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9237": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9238": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9239": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "MUL",
      "path": "15"
    },
    "9240": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9241": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9242": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9243": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "ADD",
      "path": "15"
    },
    "9244": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9245": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "ADD",
      "path": "15"
    },
    "9246": {
      "fn": "Registry.handleLend",
      "offset": [
        6673,
        6692
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9247": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9248": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9249": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9250": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9251": {
      "fn": "Registry.handleLend",
      "offset": [
        6275,
        6707
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9252": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9254": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9255": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9256": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9257": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "9259": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9260": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9261": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9262": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9264": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9265": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "9266": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9267": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9268": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9269": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9270": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9271": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6272
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9274": {
      "op": "NOT"
    },
    "9275": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9276": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9278": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9279": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9280": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9281": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "GT",
      "path": "15"
    },
    "9282": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9283": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x244E"
    },
    "9286": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9287": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x244E"
    },
    "9290": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "9293": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6252,
        6707
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9294": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9295": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9296": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9297": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9298": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9299": {
      "op": "POP"
    },
    "9300": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9302": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9303": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9304": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9305": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9306": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9307": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9309": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9310": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9311": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9312": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "9314": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9315": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9316": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9317": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "9319": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9320": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9321": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9322": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9323": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "9325": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9326": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9327": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9328": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "9330": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9331": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9332": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9333": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "9335": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "9336": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9337": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ADD",
      "path": "15"
    },
    "9338": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9339": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9346": {
      "op": "SHL"
    },
    "9347": {
      "op": "SUB"
    },
    "9348": {
      "op": "NOT"
    },
    "9349": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9350": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "9351": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9352": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9361": {
      "op": "SHL"
    },
    "9362": {
      "op": "SUB"
    },
    "9363": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9364": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "9365": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9366": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "9367": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9368": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "9369": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9374": {
      "op": "SHL"
    },
    "9375": {
      "op": "NOT"
    },
    "9376": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9377": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "9378": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9379": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "9380": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9385": {
      "op": "SHL"
    },
    "9386": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9388": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9389": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9390": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9391": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9392": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9393": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "9400": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9402": {
      "op": "SHL"
    },
    "9403": {
      "op": "NOT"
    },
    "9404": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9409": {
      "op": "SHL"
    },
    "9410": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9411": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9412": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "9413": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SHR",
      "path": "15"
    },
    "9414": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9415": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9416": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9417": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9418": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9423": {
      "op": "SHL"
    },
    "9424": {
      "op": "NOT"
    },
    "9425": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9426": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "9427": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9428": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "9429": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9434": {
      "op": "SHL"
    },
    "9435": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9438": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "9439": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9440": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9441": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9442": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9443": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9449": {
      "op": "SHL"
    },
    "9450": {
      "op": "NOT"
    },
    "9451": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9456": {
      "op": "SHL"
    },
    "9457": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "9458": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9459": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9460": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9461": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9462": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9463": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9464": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9465": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9469": {
      "op": "SHL"
    },
    "9470": {
      "op": "NOT"
    },
    "9471": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9472": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9477": {
      "op": "SHL"
    },
    "9478": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9479": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9480": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9481": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9482": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9483": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9484": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9485": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9486": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9493": {
      "op": "SHL"
    },
    "9494": {
      "op": "SUB"
    },
    "9495": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "AND",
      "path": "15"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9500": {
      "op": "SHL"
    },
    "9501": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9502": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9503": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9504": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9505": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9506": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9507": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "MUL",
      "path": "15"
    },
    "9508": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "OR",
      "path": "15"
    },
    "9509": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9510": {
      "fn": "Registry.handleLend",
      "offset": [
        6252,
        6707
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9511": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6859
      ],
      "op": "DUP7",
      "path": "15",
      "statement": 65
    },
    "9512": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6859
      ],
      "op": "ADD",
      "path": "15"
    },
    "9513": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6859
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9514": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9515": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9516": {
      "fn": "Registry.handleLend",
      "offset": [
        6860,
        6861
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9517": {
      "fn": "Registry.handleLend",
      "offset": [
        6860,
        6861
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9518": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9519": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "LT",
      "path": "15"
    },
    "9520": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x253B"
    },
    "9523": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9524": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x253B"
    },
    "9527": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9530": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6849,
        6862
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9531": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9532": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9534": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "MUL",
      "path": "15"
    },
    "9535": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9537": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "ADD",
      "path": "15"
    },
    "9538": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "ADD",
      "path": "15"
    },
    "9539": {
      "fn": "Registry.handleLend",
      "offset": [
        6849,
        6862
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9540": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6811
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9541": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6822
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "9543": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6822
      ],
      "op": "ADD",
      "path": "15"
    },
    "9544": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6822
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9545": {
      "fn": "Registry.handleLend",
      "offset": [
        6823,
        6825
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9546": {
      "fn": "Registry.handleLend",
      "offset": [
        6823,
        6830
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9548": {
      "fn": "Registry.handleLend",
      "offset": [
        6823,
        6830
      ],
      "op": "ADD",
      "path": "15"
    },
    "9549": {
      "fn": "Registry.handleLend",
      "offset": [
        6823,
        6830
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9550": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9551": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9552": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9553": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "LT",
      "path": "15"
    },
    "9554": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x255D"
    },
    "9557": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9558": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x255D"
    },
    "9561": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9564": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6809,
        6831
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9565": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9566": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9568": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "MUL",
      "path": "15"
    },
    "9569": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9571": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "ADD",
      "path": "15"
    },
    "9572": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "ADD",
      "path": "15"
    },
    "9573": {
      "fn": "Registry.handleLend",
      "offset": [
        6809,
        6831
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9580": {
      "op": "SHL"
    },
    "9581": {
      "op": "SUB"
    },
    "9582": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "AND",
      "path": "15"
    },
    "9583": {
      "fn": "Registry.handleLend",
      "offset": [
        6781,
        6791
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9590": {
      "op": "SHL"
    },
    "9591": {
      "op": "SUB"
    },
    "9592": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "AND",
      "path": "15"
    },
    "9593": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xF8D82FDBB496215C151D63910926322DCB6BA0F8CBD5FA216EF261106BB1AB46"
    },
    "9626": {
      "fn": "Registry.handleLend",
      "offset": [
        6758,
        6763
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9627": {
      "fn": "Registry.handleLend",
      "offset": [
        6880,
        6889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "9629": {
      "fn": "Registry.handleLend",
      "offset": [
        6880,
        6889
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9630": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6909
      ],
      "op": "DUP12",
      "path": "15"
    },
    "9631": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "9633": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6925
      ],
      "op": "ADD",
      "path": "15"
    },
    "9634": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6925
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9635": {
      "fn": "Registry.handleLend",
      "offset": [
        6926,
        6927
      ],
      "op": "DUP12",
      "path": "15"
    },
    "9636": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9637": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9638": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9639": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "LT",
      "path": "15"
    },
    "9640": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25B3"
    },
    "9643": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9644": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25B3"
    },
    "9647": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9650": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6907,
        6928
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9651": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9652": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9654": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "MUL",
      "path": "15"
    },
    "9655": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9657": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "ADD",
      "path": "15"
    },
    "9658": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "ADD",
      "path": "15"
    },
    "9659": {
      "fn": "Registry.handleLend",
      "offset": [
        6907,
        6928
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9660": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6948
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9661": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6963
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "9663": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6963
      ],
      "op": "ADD",
      "path": "15"
    },
    "9664": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6963
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9665": {
      "fn": "Registry.handleLend",
      "offset": [
        6964,
        6965
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9666": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9667": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9668": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9669": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "LT",
      "path": "15"
    },
    "9670": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25D1"
    },
    "9673": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9674": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25D1"
    },
    "9677": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9680": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6946,
        6966
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9681": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9682": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9684": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "MUL",
      "path": "15"
    },
    "9685": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9687": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "ADD",
      "path": "15"
    },
    "9688": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "ADD",
      "path": "15"
    },
    "9689": {
      "fn": "Registry.handleLend",
      "offset": [
        6946,
        6966
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9690": {
      "fn": "Registry.handleLend",
      "offset": [
        6984,
        6995
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9691": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7015
      ],
      "op": "DUP15",
      "path": "15"
    },
    "9692": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7028
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "9695": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7028
      ],
      "op": "ADD",
      "path": "15"
    },
    "9696": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7028
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9697": {
      "fn": "Registry.handleLend",
      "offset": [
        7029,
        7030
      ],
      "op": "DUP15",
      "path": "15"
    },
    "9698": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9699": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9700": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9701": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "LT",
      "path": "15"
    },
    "9702": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25F1"
    },
    "9705": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9706": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25F1"
    },
    "9709": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9712": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7013,
        7031
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9713": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9714": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9716": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "MUL",
      "path": "15"
    },
    "9717": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9719": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "ADD",
      "path": "15"
    },
    "9720": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "ADD",
      "path": "15"
    },
    "9721": {
      "fn": "Registry.handleLend",
      "offset": [
        7013,
        7031
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9722": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7051
      ],
      "op": "DUP16",
      "path": "15"
    },
    "9723": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7065
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "9726": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7065
      ],
      "op": "ADD",
      "path": "15"
    },
    "9727": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7065
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9728": {
      "fn": "Registry.handleLend",
      "offset": [
        7066,
        7067
      ],
      "op": "DUP16",
      "path": "15"
    },
    "9729": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9730": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9731": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9732": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "LT",
      "path": "15"
    },
    "9733": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2610"
    },
    "9736": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9737": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2610"
    },
    "9740": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "9743": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7049,
        7068
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9744": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9745": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9747": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9748": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9749": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "MUL",
      "path": "15"
    },
    "9750": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9751": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9752": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9753": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "ADD",
      "path": "15"
    },
    "9754": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9755": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "ADD",
      "path": "15"
    },
    "9756": {
      "fn": "Registry.handleLend",
      "offset": [
        7049,
        7068
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9757": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9759": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9760": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9761": {
      "op": "SWAP9"
    },
    "9762": {
      "op": "ISZERO"
    },
    "9763": {
      "op": "ISZERO"
    },
    "9764": {
      "op": "DUP10"
    },
    "9765": {
      "op": "MSTORE"
    },
    "9766": {
      "op": "SWAP2"
    },
    "9767": {
      "op": "DUP9"
    },
    "9768": {
      "op": "ADD"
    },
    "9769": {
      "op": "SWAP7"
    },
    "9770": {
      "op": "SWAP1"
    },
    "9771": {
      "op": "SWAP7"
    },
    "9772": {
      "op": "MSTORE"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9775": {
      "op": "SWAP5"
    },
    "9776": {
      "op": "DUP6"
    },
    "9777": {
      "op": "AND"
    },
    "9778": {
      "op": "SWAP1"
    },
    "9779": {
      "op": "DUP8"
    },
    "9780": {
      "op": "ADD"
    },
    "9781": {
      "op": "MSTORE"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9788": {
      "op": "SHL"
    },
    "9789": {
      "op": "SUB"
    },
    "9790": {
      "op": "NOT"
    },
    "9791": {
      "op": "SWAP1"
    },
    "9792": {
      "op": "SWAP3"
    },
    "9793": {
      "op": "AND"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9796": {
      "op": "DUP7"
    },
    "9797": {
      "op": "ADD"
    },
    "9798": {
      "op": "MSTORE"
    },
    "9799": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9802": {
      "op": "AND"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9805": {
      "op": "DUP6"
    },
    "9806": {
      "op": "ADD"
    },
    "9807": {
      "op": "MSTORE"
    },
    "9808": {
      "op": "AND"
    },
    "9809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9811": {
      "op": "DUP4"
    },
    "9812": {
      "op": "ADD"
    },
    "9813": {
      "op": "MSTORE"
    },
    "9814": {
      "op": "ISZERO"
    },
    "9815": {
      "op": "ISZERO"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9818": {
      "op": "DUP3"
    },
    "9819": {
      "op": "ADD"
    },
    "9820": {
      "op": "MSTORE"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9823": {
      "op": "ADD"
    },
    "9824": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9826": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9827": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9828": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9829": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "SUB",
      "path": "15"
    },
    "9830": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9831": {
      "fn": "Registry.handleLend",
      "offset": [
        6726,
        7086
      ],
      "op": "LOG4",
      "path": "15"
    },
    "9832": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7109
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 66,
      "value": "0x3"
    },
    "9834": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9835": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9836": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9837": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7109
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9839": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2677"
    },
    "9842": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9843": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "9846": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7100,
        7111
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9847": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9848": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9849": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9850": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "POP",
      "path": "15"
    },
    "9851": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9852": {
      "fn": "Registry.handleLend",
      "offset": [
        7100,
        7111
      ],
      "op": "POP",
      "path": "15"
    },
    "9853": {
      "fn": "Registry.handleLend",
      "offset": [
        5696,
        7122
      ],
      "op": "POP",
      "path": "15"
    },
    "9854": {
      "fn": "Registry.handleLend",
      "offset": [
        5696,
        7122
      ],
      "op": "POP",
      "path": "15"
    },
    "9855": {
      "fn": "Registry.handleLend",
      "offset": [
        5696,
        7122
      ],
      "op": "POP",
      "path": "15"
    },
    "9856": {
      "fn": "Registry.handleLend",
      "offset": [
        5696,
        7122
      ],
      "op": "POP",
      "path": "15"
    },
    "9857": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 67
    },
    "9858": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9859": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x268B"
    },
    "9862": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9863": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "9866": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        5691,
        5694
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9867": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9868": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9869": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "POP",
      "path": "15"
    },
    "9870": {
      "fn": "Registry.handleLend",
      "offset": [
        5691,
        5694
      ],
      "op": "POP",
      "path": "15"
    },
    "9871": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20E5"
    },
    "9874": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9875": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9876": {
      "fn": "Registry.handleLend",
      "offset": [
        5651,
        7122
      ],
      "op": "POP",
      "path": "15"
    },
    "9877": {
      "fn": "Registry.handleLend",
      "offset": [
        7131,
        7335
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 68,
      "value": "0x26CC"
    },
    "9880": {
      "fn": "Registry.handleLend",
      "offset": [
        7157,
        7159
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9881": {
      "fn": "Registry.handleLend",
      "offset": [
        7173,
        7183
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9882": {
      "fn": "Registry.handleLend",
      "offset": [
        7205,
        7209
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "9883": {
      "fn": "Registry.handleLend",
      "offset": [
        7224,
        7266
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26B3"
    },
    "9886": {
      "fn": "Registry.handleLend",
      "offset": [
        7233,
        7235
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9887": {
      "fn": "Registry.handleLend",
      "offset": [
        7233,
        7243
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "9889": {
      "fn": "Registry.handleLend",
      "offset": [
        7233,
        7243
      ],
      "op": "ADD",
      "path": "15"
    },
    "9890": {
      "fn": "Registry.handleLend",
      "offset": [
        7233,
        7243
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9891": {
      "fn": "Registry.handleLend",
      "offset": [
        7245,
        7247
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9892": {
      "fn": "Registry.handleLend",
      "offset": [
        7245,
        7252
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9894": {
      "fn": "Registry.handleLend",
      "offset": [
        7245,
        7252
      ],
      "op": "ADD",
      "path": "15"
    },
    "9895": {
      "fn": "Registry.handleLend",
      "offset": [
        7245,
        7252
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9896": {
      "fn": "Registry.handleLend",
      "offset": [
        7254,
        7256
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9897": {
      "fn": "Registry.handleLend",
      "offset": [
        7254,
        7262
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9899": {
      "fn": "Registry.handleLend",
      "offset": [
        7254,
        7262
      ],
      "op": "ADD",
      "path": "15"
    },
    "9900": {
      "fn": "Registry.handleLend",
      "offset": [
        7254,
        7262
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9901": {
      "fn": "Registry.handleLend",
      "offset": [
        7264,
        7265
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9903": {
      "fn": "Registry.handleLend",
      "offset": [
        7224,
        7232
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x318F"
    },
    "9906": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7224,
        7266
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9907": {
      "fn": "Registry.handleLend",
      "offset": [
        7224,
        7266
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9908": {
      "fn": "Registry.handleLend",
      "offset": [
        7280,
        7325
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1856"
    },
    "9911": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7291
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9912": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "9914": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "ADD",
      "path": "15"
    },
    "9915": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9916": {
      "fn": "Registry.handleLend",
      "offset": [
        7304,
        7306
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9917": {
      "fn": "Registry.handleLend",
      "offset": [
        7304,
        7311
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9919": {
      "fn": "Registry.handleLend",
      "offset": [
        7304,
        7311
      ],
      "op": "ADD",
      "path": "15"
    },
    "9920": {
      "fn": "Registry.handleLend",
      "offset": [
        7304,
        7311
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9921": {
      "fn": "Registry.handleLend",
      "offset": [
        7313,
        7315
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9922": {
      "fn": "Registry.handleLend",
      "offset": [
        7313,
        7321
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9924": {
      "fn": "Registry.handleLend",
      "offset": [
        7313,
        7321
      ],
      "op": "ADD",
      "path": "15"
    },
    "9925": {
      "fn": "Registry.handleLend",
      "offset": [
        7313,
        7321
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9926": {
      "fn": "Registry.handleLend",
      "offset": [
        7323,
        7324
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9928": {
      "fn": "Registry.handleLend",
      "offset": [
        7280,
        7288
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x318F"
    },
    "9931": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7280,
        7325
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9932": {
      "fn": "Registry.handleLend",
      "offset": [
        7131,
        7335
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9933": {
      "fn": "Registry.handleLend",
      "offset": [
        5583,
        7342
      ],
      "op": "POP",
      "path": "15"
    },
    "9934": {
      "fn": "Registry.handleLend",
      "jump": "o",
      "offset": [
        5583,
        7342
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9935": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9936": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20653,
        20671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26D7"
    },
    "9939": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20653,
        20671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3F1B"
    },
    "9942": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20653,
        20671
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9943": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20653,
        20671
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9944": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 69,
      "value": "0x40"
    },
    "9946": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9947": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9948": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C0"
    },
    "9951": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "9952": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9954": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9955": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9956": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20718
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9958": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9959": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9960": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9962": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "9963": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20739,
        20740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9965": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9966": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9967": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9969": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "9970": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20767,
        20778
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9971": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9972": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9973": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9975": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "9976": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20804,
        20814
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9977": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9978": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9979": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9981": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "9982": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20837,
        20844
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9983": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9984": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9985": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9987": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "9988": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20870,
        20880
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9989": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9990": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9991": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9993": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "9994": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21077,
        21092
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9995": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9996": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9997": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9999": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "10000": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21122,
        21136
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10001": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10002": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10003": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10005": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "10006": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20919,
        20920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10014": {
      "op": "SHL"
    },
    "10015": {
      "op": "SUB"
    },
    "10016": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10017": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "GT",
      "path": "15"
    },
    "10018": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10019": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x272E"
    },
    "10022": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10023": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x272E"
    },
    "10026": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D73"
    },
    "10029": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20905,
        20921
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10030": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10031": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10033": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10034": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10035": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10036": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10037": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10038": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10039": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10041": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "MUL",
      "path": "15"
    },
    "10042": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10044": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "ADD",
      "path": "15"
    },
    "10045": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10046": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "ADD",
      "path": "15"
    },
    "10047": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10049": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10050": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10051": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10052": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2757"
    },
    "10055": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10056": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10057": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10059": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "ADD",
      "path": "15"
    },
    "10060": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10062": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10063": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "MUL",
      "path": "15"
    },
    "10064": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10065": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "10066": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10067": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "10068": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "ADD",
      "path": "15"
    },
    "10069": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10070": {
      "op": "POP"
    },
    "10071": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20905,
        20921
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10072": {
      "op": "POP"
    },
    "10073": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10074": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10075": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10077": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "10078": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20960,
        20961
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10080": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10082": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10083": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10084": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10085": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10086": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10087": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10088": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10090": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "MUL",
      "path": "15"
    },
    "10091": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10093": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "ADD",
      "path": "15"
    },
    "10094": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10095": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "ADD",
      "path": "15"
    },
    "10096": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10098": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10099": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10100": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10101": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2788"
    },
    "10104": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10105": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10106": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10108": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "ADD",
      "path": "15"
    },
    "10109": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10111": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10112": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "MUL",
      "path": "15"
    },
    "10113": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10114": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "10115": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10116": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "10117": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "ADD",
      "path": "15"
    },
    "10118": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10119": {
      "op": "POP"
    },
    "10120": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20946,
        20962
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10121": {
      "op": "POP"
    },
    "10122": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10123": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10124": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10126": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "10127": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21002,
        21003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10129": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10131": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10132": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10133": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10134": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10135": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10136": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10137": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10139": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "MUL",
      "path": "15"
    },
    "10140": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10142": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "ADD",
      "path": "15"
    },
    "10143": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10144": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "ADD",
      "path": "15"
    },
    "10145": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10147": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10148": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10149": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10150": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27B9"
    },
    "10153": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10154": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10155": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10157": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "ADD",
      "path": "15"
    },
    "10158": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10160": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10161": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "MUL",
      "path": "15"
    },
    "10162": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10163": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "10164": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10165": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "10166": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "ADD",
      "path": "15"
    },
    "10167": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10168": {
      "op": "POP"
    },
    "10169": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20990,
        21004
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10170": {
      "op": "POP"
    },
    "10171": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10172": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10173": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10175": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "10176": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21044,
        21045
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10178": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10180": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10181": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10182": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10183": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10184": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10185": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10186": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10188": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "MUL",
      "path": "15"
    },
    "10189": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10191": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "ADD",
      "path": "15"
    },
    "10192": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10193": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "ADD",
      "path": "15"
    },
    "10194": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10196": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10197": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10198": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10199": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27EA"
    },
    "10202": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10203": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10204": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10206": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "ADD",
      "path": "15"
    },
    "10207": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10209": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10210": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "MUL",
      "path": "15"
    },
    "10211": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10212": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "10213": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10214": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "10215": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "ADD",
      "path": "15"
    },
    "10216": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10217": {
      "op": "POP"
    },
    "10218": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10219": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21030,
        21046
      ],
      "op": "POP",
      "path": "15"
    },
    "10220": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10221": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10222": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10224": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "10225": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21164,
        21176
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10226": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10227": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10228": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10230": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "ADD",
      "path": "15"
    },
    "10231": {
      "fn": "Registry.createLendCallData",
      "offset": [
        21205,
        21218
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10232": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10233": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10234": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20688,
        21229
      ],
      "op": "POP",
      "path": "15"
    },
    "10235": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20683,
        21229
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10236": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20683,
        21229
      ],
      "op": "POP",
      "path": "15"
    },
    "10237": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "10238": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "10239": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10240": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10241": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10242": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10243": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10244": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10245": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10246": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20283,
        21236
      ],
      "op": "POP",
      "path": "15"
    },
    "10247": {
      "fn": "Registry.createLendCallData",
      "jump": "o",
      "offset": [
        20283,
        21236
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10248": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24551,
        24818
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10249": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24623,
        24665
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 70,
      "value": "0x2815"
    },
    "10252": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24643,
        24650
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10253": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24643,
        24664
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10255": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24643,
        24664
      ],
      "op": "ADD",
      "path": "15"
    },
    "10256": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24643,
        24664
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10257": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24623,
        24642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3AA6"
    },
    "10260": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24623,
        24665
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10261": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24623,
        24665
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10262": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24683,
        24706
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 71,
      "value": "0x40"
    },
    "10264": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24683,
        24706
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10265": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24683,
        24706
      ],
      "op": "ADD",
      "path": "15"
    },
    "10266": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24683,
        24706
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10267": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24683,
        24711
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10269": {
      "branch": 149,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24683,
        24711
      ],
      "op": "AND",
      "path": "15"
    },
    "10270": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2860"
    },
    "10273": {
      "branch": 149,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10274": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10276": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10283": {
      "op": "SHL"
    },
    "10284": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10285": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10288": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10290": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10291": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "ADD",
      "path": "15"
    },
    "10292": {
      "op": "MSTORE"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10297": {
      "op": "DUP3"
    },
    "10298": {
      "op": "ADD"
    },
    "10299": {
      "op": "MSTORE"
    },
    "10300": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A6475726174696F6E207A65726F"
    },
    "10321": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10323": {
      "op": "SHL"
    },
    "10324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10326": {
      "op": "DUP3"
    },
    "10327": {
      "op": "ADD"
    },
    "10328": {
      "op": "MSTORE"
    },
    "10329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10331": {
      "op": "ADD"
    },
    "10332": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10335": {
      "op": "JUMP"
    },
    "10336": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24736
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10337": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24754,
        24776
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 72,
      "value": "0x60"
    },
    "10339": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24754,
        24776
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10340": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24754,
        24776
      ],
      "op": "ADD",
      "path": "15"
    },
    "10341": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24754,
        24776
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10346": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10348": {
      "op": "SHL"
    },
    "10349": {
      "op": "SUB"
    },
    "10350": {
      "op": "NOT"
    },
    "10351": {
      "branch": 150,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24754,
        24781
      ],
      "op": "AND",
      "path": "15"
    },
    "10352": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CC"
    },
    "10355": {
      "branch": 150,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10356": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10358": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10365": {
      "op": "SHL"
    },
    "10366": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10367": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10368": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10370": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "ADD",
      "path": "15"
    },
    "10371": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10374": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10375": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24746,
        24811
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A6B"
    },
    "10378": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24746,
        24811
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10379": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25086,
        25346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10380": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25178,
        25199
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 73
    },
    "10381": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25178,
        25199
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10382": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25158,
        25200
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2896"
    },
    "10385": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25158,
        25200
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10386": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25158,
        25177
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3AA6"
    },
    "10389": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        25158,
        25200
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10390": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25158,
        25200
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10391": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25218,
        25238
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 74,
      "value": "0x20"
    },
    "10393": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25218,
        25238
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10394": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25218,
        25238
      ],
      "op": "ADD",
      "path": "15"
    },
    "10395": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25218,
        25238
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10396": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25218,
        25243
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10398": {
      "branch": 151,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25218,
        25243
      ],
      "op": "AND",
      "path": "15"
    },
    "10399": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28BA"
    },
    "10402": {
      "branch": 151,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10403": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10405": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10412": {
      "op": "SHL"
    },
    "10413": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10414": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10415": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10417": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "ADD",
      "path": "15"
    },
    "10418": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10421": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10422": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A34"
    },
    "10425": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        25210,
        25271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10426": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25210,
        25271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10427": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25289,
        25305
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 75,
      "value": "0x40"
    },
    "10429": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25289,
        25305
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10430": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25289,
        25305
      ],
      "op": "ADD",
      "path": "15"
    },
    "10431": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25289,
        25305
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10432": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25289,
        25310
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "10437": {
      "branch": 152,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25289,
        25310
      ],
      "op": "AND",
      "path": "15"
    },
    "10438": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CC"
    },
    "10441": {
      "branch": 152,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10442": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10444": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10451": {
      "op": "SHL"
    },
    "10452": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10453": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10456": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10458": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10459": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "ADD",
      "path": "15"
    },
    "10460": {
      "op": "MSTORE"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10465": {
      "op": "DUP3"
    },
    "10466": {
      "op": "ADD"
    },
    "10467": {
      "op": "MSTORE"
    },
    "10468": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10503": {
      "op": "DUP3"
    },
    "10504": {
      "op": "ADD"
    },
    "10505": {
      "op": "MSTORE"
    },
    "10506": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10508": {
      "op": "ADD"
    },
    "10509": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25281,
        25339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10512": {
      "op": "JUMP"
    },
    "10513": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26413,
        26690
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10514": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26564,
        26573
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 76
    },
    "10515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10521": {
      "op": "SHL"
    },
    "10522": {
      "op": "SUB"
    },
    "10523": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26539,
        26573
      ],
      "op": "AND",
      "path": "15"
    },
    "10524": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26539,
        26546
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10525": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26539,
        26560
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10527": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26539,
        26560
      ],
      "op": "ADD",
      "path": "15"
    },
    "10528": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26539,
        26560
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10535": {
      "op": "SHL"
    },
    "10536": {
      "op": "SUB"
    },
    "10537": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26539,
        26573
      ],
      "op": "AND",
      "path": "15"
    },
    "10538": {
      "branch": 153,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26539,
        26573
      ],
      "op": "EQ",
      "path": "15"
    },
    "10539": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x296A"
    },
    "10542": {
      "branch": 153,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10543": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10545": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10552": {
      "op": "SHL"
    },
    "10553": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10554": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10557": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10559": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10560": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "ADD",
      "path": "15"
    },
    "10561": {
      "op": "MSTORE"
    },
    "10562": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10566": {
      "op": "DUP3"
    },
    "10567": {
      "op": "ADD"
    },
    "10568": {
      "op": "MSTORE"
    },
    "10569": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103932B73A32B9"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10589": {
      "op": "SHL"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10592": {
      "op": "DUP3"
    },
    "10593": {
      "op": "ADD"
    },
    "10594": {
      "op": "MSTORE"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10597": {
      "op": "ADD"
    },
    "10598": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10601": {
      "op": "JUMP"
    },
    "10602": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26531,
        26595
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10603": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26614,
        26655
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 77,
      "value": "0x2974"
    },
    "10606": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26631,
        26638
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10607": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26640,
        26654
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10608": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26614,
        26630
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3AF2"
    },
    "10611": {
      "fn": "Registry.ensureIsReturnable",
      "jump": "i",
      "offset": [
        26614,
        26655
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10612": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26614,
        26655
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10613": {
      "branch": 154,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26613,
        26655
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10614": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29C1"
    },
    "10617": {
      "branch": 154,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10618": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10620": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10627": {
      "op": "SHL"
    },
    "10628": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10629": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10632": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10634": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10635": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "ADD",
      "path": "15"
    },
    "10636": {
      "op": "MSTORE"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10641": {
      "op": "DUP3"
    },
    "10642": {
      "op": "ADD"
    },
    "10643": {
      "op": "MSTORE"
    },
    "10644": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A706173742072657475726E2064617465000000000000000000"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10679": {
      "op": "DUP3"
    },
    "10680": {
      "op": "ADD"
    },
    "10681": {
      "op": "MSTORE"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10684": {
      "op": "ADD"
    },
    "10685": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10688": {
      "op": "JUMP"
    },
    "10689": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26605,
        26683
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10690": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26413,
        26690
      ],
      "op": "POP",
      "path": "15"
    },
    "10691": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26413,
        26690
      ],
      "op": "POP",
      "path": "15"
    },
    "10692": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26413,
        26690
      ],
      "op": "POP",
      "path": "15"
    },
    "10693": {
      "fn": "Registry.ensureIsReturnable",
      "jump": "o",
      "offset": [
        26413,
        26690
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10694": {
      "fn": "Registry.distributePayments",
      "offset": [
        16464,
        17660
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10695": {
      "fn": "Registry.distributePayments",
      "offset": [
        16668,
        16688
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "10697": {
      "fn": "Registry.distributePayments",
      "offset": [
        16668,
        16688
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10698": {
      "fn": "Registry.distributePayments",
      "offset": [
        16668,
        16688
      ],
      "op": "ADD",
      "path": "15"
    },
    "10699": {
      "fn": "Registry.distributePayments",
      "offset": [
        16668,
        16688
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10700": {
      "fn": "Registry.distributePayments",
      "offset": [
        16639,
        16659
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10702": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16734
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10703": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16734
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10704": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10706": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10707": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10714": {
      "op": "SHL"
    },
    "10715": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10716": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10719": {
      "op": "DUP5"
    },
    "10720": {
      "op": "AND"
    },
    "10721": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10723": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10724": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ADD",
      "path": "15"
    },
    "10725": {
      "op": "MSTORE"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10732": {
      "op": "SHL"
    },
    "10733": {
      "op": "SUB"
    },
    "10734": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16734
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10735": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16734
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10736": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16734
      ],
      "op": "AND",
      "path": "15"
    },
    "10737": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16734
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10738": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16750
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "10743": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16750
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10744": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10746": {
      "op": "ADD"
    },
    "10747": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10749": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10751": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10752": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10753": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10754": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "SUB",
      "path": "15"
    },
    "10755": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10756": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10757": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10758": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "10759": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10760": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10761": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10762": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A12"
    },
    "10765": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10766": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10768": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10769": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10770": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10771": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "POP",
      "path": "15"
    },
    "10772": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "GAS",
      "path": "15"
    },
    "10773": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "10774": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10775": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10776": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10777": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A26"
    },
    "10780": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10781": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10782": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10784": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10785": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "10786": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10787": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10789": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10790": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10791": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "POP",
      "path": "15"
    },
    "10792": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "POP",
      "path": "15"
    },
    "10793": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "POP",
      "path": "15"
    },
    "10794": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "POP",
      "path": "15"
    },
    "10795": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10797": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10798": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10799": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10801": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "NOT",
      "path": "15"
    },
    "10802": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10804": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10805": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ADD",
      "path": "15"
    },
    "10806": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "AND",
      "path": "15"
    },
    "10807": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10808": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ADD",
      "path": "15"
    },
    "10809": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10810": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10812": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10813": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "POP",
      "path": "15"
    },
    "10814": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10815": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "ADD",
      "path": "15"
    },
    "10816": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10817": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A4A"
    },
    "10820": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10821": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10822": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42A5"
    },
    "10825": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16726,
        16766
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10826": {
      "fn": "Registry.distributePayments",
      "offset": [
        16726,
        16766
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10827": {
      "fn": "Registry.distributePayments",
      "offset": [
        16699,
        16767
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10828": {
      "fn": "Registry.distributePayments",
      "offset": [
        16699,
        16767
      ],
      "op": "POP",
      "path": "15"
    },
    "10829": {
      "fn": "Registry.distributePayments",
      "offset": [
        16777,
        16793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10831": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16808
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10838": {
      "op": "SHL"
    },
    "10839": {
      "op": "SUB"
    },
    "10840": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16817
      ],
      "op": "AND",
      "path": "15"
    },
    "10841": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16817
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "10846": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10848": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10849": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10850": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "10855": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "AND",
      "path": "15"
    },
    "10856": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "10858": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "SHL",
      "path": "15"
    },
    "10859": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10860": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10861": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10863": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ADD",
      "path": "15"
    },
    "10864": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10866": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10868": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10869": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10870": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10871": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "SUB",
      "path": "15"
    },
    "10872": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10873": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10874": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10875": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "10876": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10877": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10878": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10879": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A87"
    },
    "10882": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10883": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10885": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10886": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10887": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10888": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10889": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "GAS",
      "path": "15"
    },
    "10890": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "10891": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10892": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10893": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10894": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A9B"
    },
    "10897": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10898": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10899": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10901": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10902": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "10903": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10904": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10906": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10907": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10908": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10909": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10910": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10911": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10912": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10914": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10915": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10916": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10918": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "NOT",
      "path": "15"
    },
    "10919": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10921": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10922": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ADD",
      "path": "15"
    },
    "10923": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "AND",
      "path": "15"
    },
    "10924": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10925": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ADD",
      "path": "15"
    },
    "10926": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10927": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10929": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10930": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10931": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10932": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "ADD",
      "path": "15"
    },
    "10933": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10934": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2ABF"
    },
    "10937": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10938": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10939": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4899"
    },
    "10942": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16796,
        16819
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10943": {
      "fn": "Registry.distributePayments",
      "offset": [
        16796,
        16819
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10944": {
      "fn": "Registry.distributePayments",
      "offset": [
        16777,
        16819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10946": {
      "fn": "Registry.distributePayments",
      "offset": [
        16777,
        16819
      ],
      "op": "AND",
      "path": "15"
    },
    "10947": {
      "fn": "Registry.distributePayments",
      "offset": [
        16777,
        16819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10948": {
      "op": "POP"
    },
    "10949": {
      "fn": "Registry.distributePayments",
      "offset": [
        16829,
        16842
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10951": {
      "fn": "Registry.distributePayments",
      "offset": [
        16845,
        16859
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AD1"
    },
    "10954": {
      "fn": "Registry.distributePayments",
      "offset": [
        16777,
        16819
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10955": {
      "fn": "Registry.distributePayments",
      "offset": [
        16845,
        16847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "10957": {
      "fn": "Registry.distributePayments",
      "offset": [
        16845,
        16859
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4BE9"
    },
    "10960": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16845,
        16859
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10961": {
      "fn": "Registry.distributePayments",
      "offset": [
        16845,
        16859
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10962": {
      "fn": "Registry.distributePayments",
      "offset": [
        16829,
        16859
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10963": {
      "fn": "Registry.distributePayments",
      "offset": [
        16829,
        16859
      ],
      "op": "POP",
      "path": "15"
    },
    "10964": {
      "fn": "Registry.distributePayments",
      "offset": [
        16869,
        16886
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10966": {
      "fn": "Registry.distributePayments",
      "offset": [
        16910,
        16952
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AE3"
    },
    "10969": {
      "fn": "Registry.distributePayments",
      "offset": [
        16922,
        16929
      ],
      "op": "DUP9",
      "path": "15"
    },
    "10970": {
      "fn": "Registry.distributePayments",
      "offset": [
        16922,
        16944
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "10972": {
      "fn": "Registry.distributePayments",
      "offset": [
        16922,
        16944
      ],
      "op": "ADD",
      "path": "15"
    },
    "10973": {
      "fn": "Registry.distributePayments",
      "offset": [
        16922,
        16944
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10974": {
      "fn": "Registry.distributePayments",
      "offset": [
        16946,
        16951
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10975": {
      "fn": "Registry.distributePayments",
      "offset": [
        16910,
        16921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36E2"
    },
    "10978": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16910,
        16952
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10979": {
      "fn": "Registry.distributePayments",
      "offset": [
        16910,
        16952
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10980": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16896
      ],
      "op": "DUP8",
      "path": "15"
    },
    "10981": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "10983": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16907
      ],
      "op": "ADD",
      "path": "15"
    },
    "10984": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16907
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10985": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16952
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "10988": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16952
      ],
      "op": "AND",
      "path": "15"
    },
    "10989": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16952
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AF6"
    },
    "10992": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16952
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10993": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16952
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10994": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16952
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "10997": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16889,
        16952
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10998": {
      "fn": "Registry.distributePayments",
      "offset": [
        16889,
        16952
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10999": {
      "fn": "Registry.distributePayments",
      "offset": [
        16869,
        16952
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11000": {
      "fn": "Registry.distributePayments",
      "offset": [
        16869,
        16952
      ],
      "op": "POP",
      "path": "15"
    },
    "11001": {
      "fn": "Registry.distributePayments",
      "offset": [
        16962,
        16984
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11003": {
      "fn": "Registry.distributePayments",
      "offset": [
        16999,
        17006
      ],
      "op": "DUP8",
      "path": "15"
    },
    "11004": {
      "fn": "Registry.distributePayments",
      "offset": [
        16999,
        17019
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11006": {
      "fn": "Registry.distributePayments",
      "offset": [
        16999,
        17019
      ],
      "op": "ADD",
      "path": "15"
    },
    "11007": {
      "fn": "Registry.distributePayments",
      "offset": [
        16999,
        17019
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11008": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        17019
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11010": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        17019
      ],
      "op": "AND",
      "path": "15"
    },
    "11011": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        16996
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11012": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        17019
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B0D"
    },
    "11015": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        17019
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11016": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        17019
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11017": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        17019
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "11020": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16987,
        17019
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11021": {
      "fn": "Registry.distributePayments",
      "offset": [
        16987,
        17019
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11022": {
      "fn": "Registry.distributePayments",
      "offset": [
        16962,
        17019
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11023": {
      "op": "POP"
    },
    "11024": {
      "fn": "Registry.distributePayments",
      "offset": [
        17029,
        17050
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11026": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x15180"
    },
    "11030": {
      "fn": "Registry.distributePayments",
      "offset": [
        17054,
        17087
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1F"
    },
    "11033": {
      "fn": "Registry.distributePayments",
      "offset": [
        17078,
        17087
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11034": {
      "fn": "Registry.distributePayments",
      "offset": [
        17054,
        17075
      ],
      "op": "DUP11",
      "path": "15"
    },
    "11035": {
      "fn": "Registry.distributePayments",
      "offset": [
        17054,
        17087
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "11038": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        17054,
        17087
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11039": {
      "fn": "Registry.distributePayments",
      "offset": [
        17054,
        17087
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11040": {
      "fn": "Registry.distributePayments",
      "offset": [
        17053,
        17105
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B29"
    },
    "11043": {
      "fn": "Registry.distributePayments",
      "offset": [
        17053,
        17105
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11044": {
      "fn": "Registry.distributePayments",
      "offset": [
        17053,
        17105
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11045": {
      "fn": "Registry.distributePayments",
      "offset": [
        17053,
        17105
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B84"
    },
    "11048": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        17053,
        17105
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11049": {
      "fn": "Registry.distributePayments",
      "offset": [
        17053,
        17105
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11050": {
      "fn": "Registry.distributePayments",
      "offset": [
        17029,
        17105
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11051": {
      "fn": "Registry.distributePayments",
      "offset": [
        17029,
        17105
      ],
      "op": "POP",
      "path": "15"
    },
    "11052": {
      "fn": "Registry.distributePayments",
      "offset": [
        17140,
        17141
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 78,
      "value": "0x0"
    },
    "11054": {
      "fn": "Registry.distributePayments",
      "offset": [
        17123,
        17137
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11055": {
      "branch": 155,
      "fn": "Registry.distributePayments",
      "offset": [
        17123,
        17141
      ],
      "op": "GT",
      "path": "15"
    },
    "11056": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B87"
    },
    "11059": {
      "branch": 155,
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11060": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11062": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11069": {
      "op": "SHL"
    },
    "11070": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11071": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11074": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11076": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11077": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "ADD",
      "path": "15"
    },
    "11078": {
      "op": "MSTORE"
    },
    "11079": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "11081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11083": {
      "op": "DUP3"
    },
    "11084": {
      "op": "ADD"
    },
    "11085": {
      "op": "MSTORE"
    },
    "11086": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11121": {
      "op": "DUP3"
    },
    "11122": {
      "op": "ADD"
    },
    "11123": {
      "op": "MSTORE"
    },
    "11124": {
      "op": "PUSH3",
      "value": "0x65726F"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "11130": {
      "op": "SHL"
    },
    "11131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11133": {
      "op": "DUP3"
    },
    "11134": {
      "op": "ADD"
    },
    "11135": {
      "op": "MSTORE"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11138": {
      "op": "ADD"
    },
    "11139": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11142": {
      "op": "JUMP"
    },
    "11143": {
      "fn": "Registry.distributePayments",
      "offset": [
        17115,
        17181
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11144": {
      "fn": "Registry.distributePayments",
      "offset": [
        17215,
        17216
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 79,
      "value": "0x0"
    },
    "11146": {
      "fn": "Registry.distributePayments",
      "offset": [
        17199,
        17212
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11147": {
      "branch": 156,
      "fn": "Registry.distributePayments",
      "offset": [
        17199,
        17216
      ],
      "op": "GT",
      "path": "15"
    },
    "11148": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD7"
    },
    "11151": {
      "branch": 156,
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11152": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11154": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11161": {
      "op": "SHL"
    },
    "11162": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11163": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11166": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11168": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11169": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "ADD",
      "path": "15"
    },
    "11170": {
      "op": "MSTORE"
    },
    "11171": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "11173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11175": {
      "op": "DUP3"
    },
    "11176": {
      "op": "ADD"
    },
    "11177": {
      "op": "MSTORE"
    },
    "11178": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11213": {
      "op": "DUP3"
    },
    "11214": {
      "op": "ADD"
    },
    "11215": {
      "op": "MSTORE"
    },
    "11216": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11218": {
      "op": "ADD"
    },
    "11219": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11222": {
      "op": "JUMP"
    },
    "11223": {
      "fn": "Registry.distributePayments",
      "offset": [
        17191,
        17250
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11224": {
      "fn": "Registry.distributePayments",
      "offset": [
        17260,
        17281
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11226": {
      "fn": "Registry.distributePayments",
      "offset": [
        17284,
        17314
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BE3"
    },
    "11229": {
      "fn": "Registry.distributePayments",
      "offset": [
        17301,
        17314
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11230": {
      "fn": "Registry.distributePayments",
      "offset": [
        17284,
        17298
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11231": {
      "fn": "Registry.distributePayments",
      "offset": [
        17284,
        17314
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "11234": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        17284,
        17314
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11235": {
      "fn": "Registry.distributePayments",
      "offset": [
        17284,
        17314
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11236": {
      "fn": "Registry.distributePayments",
      "offset": [
        17260,
        17314
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11237": {
      "fn": "Registry.distributePayments",
      "offset": [
        17260,
        17314
      ],
      "op": "POP",
      "path": "15"
    },
    "11238": {
      "fn": "Registry.distributePayments",
      "offset": [
        17328,
        17335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "11240": {
      "fn": "Registry.distributePayments",
      "offset": [
        17328,
        17335
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11241": {
      "fn": "Registry.distributePayments",
      "offset": [
        17339,
        17340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11243": {
      "branch": 157,
      "fn": "Registry.distributePayments",
      "offset": [
        17328,
        17340
      ],
      "op": "EQ",
      "path": "15"
    },
    "11244": {
      "fn": "Registry.distributePayments",
      "offset": [
        17324,
        17461
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C0B"
    },
    "11247": {
      "branch": 157,
      "fn": "Registry.distributePayments",
      "offset": [
        17324,
        17461
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11248": {
      "fn": "Registry.distributePayments",
      "offset": [
        17356,
        17372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11250": {
      "fn": "Registry.distributePayments",
      "offset": [
        17375,
        17411
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BFB"
    },
    "11253": {
      "fn": "Registry.distributePayments",
      "offset": [
        17383,
        17396
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11254": {
      "fn": "Registry.distributePayments",
      "offset": [
        17398,
        17410
      ],
      "op": "DUP10",
      "path": "15"
    },
    "11255": {
      "fn": "Registry.distributePayments",
      "offset": [
        17375,
        17382
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B80"
    },
    "11258": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        17375,
        17411
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11259": {
      "fn": "Registry.distributePayments",
      "offset": [
        17375,
        17411
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11260": {
      "fn": "Registry.distributePayments",
      "offset": [
        17356,
        17411
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11261": {
      "op": "POP"
    },
    "11262": {
      "fn": "Registry.distributePayments",
      "offset": [
        17425,
        17450
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 80,
      "value": "0x2C07"
    },
    "11265": {
      "fn": "Registry.distributePayments",
      "offset": [
        17356,
        17411
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11266": {
      "fn": "Registry.distributePayments",
      "offset": [
        17425,
        17450
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11267": {
      "fn": "Registry.distributePayments",
      "offset": [
        17425,
        17450
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "11270": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        17425,
        17450
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11271": {
      "fn": "Registry.distributePayments",
      "offset": [
        17425,
        17450
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11272": {
      "fn": "Registry.distributePayments",
      "offset": [
        17425,
        17450
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11273": {
      "fn": "Registry.distributePayments",
      "offset": [
        17425,
        17450
      ],
      "op": "POP",
      "path": "15"
    },
    "11274": {
      "fn": "Registry.distributePayments",
      "offset": [
        17342,
        17461
      ],
      "op": "POP",
      "path": "15"
    },
    "11275": {
      "fn": "Registry.distributePayments",
      "offset": [
        17324,
        17461
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11276": {
      "fn": "Registry.distributePayments",
      "offset": [
        17496,
        17517
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 81,
      "value": "0x20"
    },
    "11278": {
      "fn": "Registry.distributePayments",
      "offset": [
        17496,
        17517
      ],
      "op": "DUP12",
      "path": "15"
    },
    "11279": {
      "fn": "Registry.distributePayments",
      "offset": [
        17496,
        17517
      ],
      "op": "ADD",
      "path": "15"
    },
    "11280": {
      "fn": "Registry.distributePayments",
      "offset": [
        17496,
        17517
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11281": {
      "fn": "Registry.distributePayments",
      "offset": [
        17470,
        17533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C25"
    },
    "11284": {
      "fn": "Registry.distributePayments",
      "offset": [
        17470,
        17533
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11291": {
      "op": "SHL"
    },
    "11292": {
      "op": "SUB"
    },
    "11293": {
      "fn": "Registry.distributePayments",
      "offset": [
        17470,
        17495
      ],
      "op": "DUP10",
      "path": "15"
    },
    "11294": {
      "fn": "Registry.distributePayments",
      "offset": [
        17470,
        17495
      ],
      "op": "AND",
      "path": "15"
    },
    "11295": {
      "fn": "Registry.distributePayments",
      "offset": [
        17470,
        17495
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11296": {
      "fn": "Registry.distributePayments",
      "offset": [
        17519,
        17532
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11297": {
      "fn": "Registry.distributePayments",
      "offset": [
        17470,
        17495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BB7"
    },
    "11300": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        17470,
        17533
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11301": {
      "fn": "Registry.distributePayments",
      "offset": [
        17470,
        17533
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11302": {
      "fn": "Registry.distributePayments",
      "offset": [
        17547,
        17564
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11303": {
      "branch": 158,
      "fn": "Registry.distributePayments",
      "offset": [
        17547,
        17564
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11304": {
      "fn": "Registry.distributePayments",
      "offset": [
        17543,
        17654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C42"
    },
    "11307": {
      "branch": 158,
      "fn": "Registry.distributePayments",
      "offset": [
        17543,
        17654
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11308": {
      "fn": "Registry.distributePayments",
      "offset": [
        17606,
        17627
      ],
      "op": "DUP10",
      "path": "15",
      "statement": 82
    },
    "11309": {
      "fn": "Registry.distributePayments",
      "offset": [
        17606,
        17627
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11310": {
      "fn": "Registry.distributePayments",
      "offset": [
        17580,
        17643
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C42"
    },
    "11313": {
      "fn": "Registry.distributePayments",
      "offset": [
        17580,
        17643
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11320": {
      "op": "SHL"
    },
    "11321": {
      "op": "SUB"
    },
    "11322": {
      "fn": "Registry.distributePayments",
      "offset": [
        17580,
        17605
      ],
      "op": "DUP10",
      "path": "15"
    },
    "11323": {
      "fn": "Registry.distributePayments",
      "offset": [
        17580,
        17605
      ],
      "op": "AND",
      "path": "15"
    },
    "11324": {
      "fn": "Registry.distributePayments",
      "offset": [
        17580,
        17605
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11325": {
      "fn": "Registry.distributePayments",
      "offset": [
        17629,
        17642
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11326": {
      "fn": "Registry.distributePayments",
      "offset": [
        17580,
        17605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BB7"
    },
    "11329": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        17580,
        17643
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11330": {
      "fn": "Registry.distributePayments",
      "offset": [
        17580,
        17643
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11331": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11332": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11333": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11334": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11335": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11336": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11337": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11338": {
      "fn": "Registry.distributePayments",
      "offset": [
        16629,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11339": {
      "fn": "Registry.distributePayments",
      "offset": [
        16464,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11340": {
      "fn": "Registry.distributePayments",
      "offset": [
        16464,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11341": {
      "fn": "Registry.distributePayments",
      "offset": [
        16464,
        17660
      ],
      "op": "POP",
      "path": "15"
    },
    "11342": {
      "fn": "Registry.distributePayments",
      "jump": "o",
      "offset": [
        16464,
        17660
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11343": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13034,
        15670
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11344": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13300,
        13321
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11345": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13300,
        13321
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11348": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11350": {
      "op": "SHL"
    },
    "11351": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13300,
        13321
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11352": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13300,
        13321
      ],
      "op": "DIV",
      "path": "15"
    },
    "11353": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13300,
        13321
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11355": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13300,
        13321
      ],
      "op": "AND",
      "path": "15"
    },
    "11356": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13296,
        15664
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F02"
    },
    "11359": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13296,
        15664
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11360": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11361": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11362": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13831,
        13849
      ],
      "op": "DUP7",
      "path": "15"
    },
    "11363": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13831,
        13849
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11366": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11368": {
      "op": "SHL"
    },
    "11369": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11370": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11371": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "DIV",
      "path": "15"
    },
    "11372": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "11375": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11376": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11377": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13852,
        13870
      ],
      "op": "AND",
      "path": "15"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11380": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11382": {
      "op": "SHL"
    },
    "11383": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13831,
        13849
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11384": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13831,
        13849
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11385": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13831,
        13849
      ],
      "op": "DIV",
      "path": "15"
    },
    "11386": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13831,
        13849
      ],
      "op": "AND",
      "path": "15"
    },
    "11387": {
      "branch": 159,
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13831,
        13870
      ],
      "op": "GT",
      "path": "15"
    },
    "11388": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13827,
        15318
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11389": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13827,
        15318
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D43"
    },
    "11392": {
      "branch": 159,
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13827,
        15318
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11393": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 83
    },
    "11394": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11395": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "DUP7",
      "path": "15"
    },
    "11396": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11397": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "11400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11402": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11404": {
      "op": "SHL"
    },
    "11405": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11406": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11407": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "DIV",
      "path": "15"
    },
    "11408": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11409": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "AND",
      "path": "15"
    },
    "11410": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11411": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14082
      ],
      "op": "DUP9",
      "path": "15"
    },
    "11412": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14082
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11413": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14093
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1A"
    },
    "11415": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14093
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11416": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CAB"
    },
    "11419": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11420": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11421": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14097,
        14115
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11424": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11426": {
      "op": "SHL"
    },
    "11427": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11428": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11429": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "DIV",
      "path": "15"
    },
    "11430": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "AND",
      "path": "15"
    },
    "11431": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CB0"
    },
    "11434": {
      "fn": "Registry.manageWillAutoRenew",
      "jump": "i",
      "offset": [
        14075,
        14115
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11435": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11436": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11437": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11438": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "11441": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11442": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11443": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "AND",
      "path": "15"
    },
    "11444": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "11447": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11448": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11449": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "EXP",
      "path": "15"
    },
    "11450": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11451": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11452": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "MUL",
      "path": "15"
    },
    "11453": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11454": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11455": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "MUL",
      "path": "15"
    },
    "11456": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "NOT",
      "path": "15"
    },
    "11457": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11458": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11459": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "AND",
      "path": "15"
    },
    "11460": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "OR",
      "path": "15"
    },
    "11461": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11462": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11463": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14075,
        14115
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11464": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14258,
        14279
      ],
      "op": "DUP9",
      "path": "15",
      "statement": 84
    },
    "11465": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14258,
        14279
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11466": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "DUP9",
      "path": "15"
    },
    "11467": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11468": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11470": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11471": {
      "op": "PUSH4",
      "value": "0x79212195"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11478": {
      "op": "SHL"
    },
    "11479": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11480": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11487": {
      "op": "SHL"
    },
    "11488": {
      "op": "SUB"
    },
    "11489": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14221
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11490": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14221
      ],
      "op": "DUP12",
      "path": "15"
    },
    "11491": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14221
      ],
      "op": "AND",
      "path": "15"
    },
    "11492": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14221
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "11493": {
      "op": "POP"
    },
    "11494": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14221
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF242432A"
    },
    "11499": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14221
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "11500": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D0C"
    },
    "11503": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "11504": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14251,
        14255
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "11505": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14251,
        14255
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "11506": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14258,
        14279
      ],
      "op": "DIV",
      "path": "15"
    },
    "11507": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14258,
        14279
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11508": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14258,
        14279
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11509": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14258,
        14279
      ],
      "op": "AND",
      "path": "15"
    },
    "11510": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14258,
        14279
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11511": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14281,
        14288
      ],
      "op": "DUP10",
      "path": "15"
    },
    "11512": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14281,
        14288
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11515": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11517": {
      "op": "SHL"
    },
    "11518": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11519": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11520": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "DIV",
      "path": "15"
    },
    "11521": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11522": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11523": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "AND",
      "path": "15"
    },
    "11524": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14298,
        14316
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11525": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11527": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "ADD",
      "path": "15"
    },
    "11528": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4937"
    },
    "11531": {
      "fn": "Registry.manageWillAutoRenew",
      "jump": "i",
      "offset": [
        14184,
        14339
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11532": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11533": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11535": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11537": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11538": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11539": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11540": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "SUB",
      "path": "15"
    },
    "11541": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11542": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11544": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP8",
      "path": "15"
    },
    "11545": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11546": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "11547": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11548": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11549": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11550": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D26"
    },
    "11553": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11554": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11556": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11557": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11558": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11559": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "POP",
      "path": "15"
    },
    "11560": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "GAS",
      "path": "15"
    },
    "11561": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "CALL",
      "path": "15"
    },
    "11562": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11563": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11564": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11565": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D3A"
    },
    "11568": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11569": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "11570": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11572": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11573": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "11574": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "11575": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11577": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11578": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11579": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "POP",
      "path": "15"
    },
    "11580": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "POP",
      "path": "15"
    },
    "11581": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "POP",
      "path": "15"
    },
    "11582": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14184,
        14339
      ],
      "op": "POP",
      "path": "15"
    },
    "11583": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13827,
        15318
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB0"
    },
    "11586": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13827,
        15318
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11587": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13827,
        15318
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11588": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14744,
        14762
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11589": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14744,
        14762
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11590": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14740
      ],
      "op": "DUP7",
      "path": "15"
    },
    "11591": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14740
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11594": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11596": {
      "op": "SHL"
    },
    "11597": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14740
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11598": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14740
      ],
      "op": "DIV",
      "path": "15"
    },
    "11599": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14744,
        14762
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "11602": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14740
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11603": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14740
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11604": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14740
      ],
      "op": "AND",
      "path": "15"
    },
    "11605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11609": {
      "op": "SHL"
    },
    "11610": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14744,
        14762
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11611": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14744,
        14762
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11612": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14744,
        14762
      ],
      "op": "DIV",
      "path": "15"
    },
    "11613": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14744,
        14762
      ],
      "op": "AND",
      "path": "15"
    },
    "11614": {
      "branch": 160,
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14722,
        14762
      ],
      "op": "EQ",
      "path": "15"
    },
    "11615": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14718,
        15318
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11616": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14718,
        15318
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB0"
    },
    "11619": {
      "branch": 160,
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14718,
        15318
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11620": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14852,
        14878
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11622": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14848
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11623": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "11625": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11626": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "GT",
      "path": "15"
    },
    "11627": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11628": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D77"
    },
    "11631": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11632": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D77"
    },
    "11635": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "11638": {
      "fn": "Registry.manageWillAutoRenew",
      "jump": "i",
      "offset": [
        14837,
        14878
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11639": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11640": {
      "branch": 161,
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14837,
        14878
      ],
      "op": "EQ",
      "path": "15"
    },
    "11641": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14833,
        15210
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11642": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14833,
        15210
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DF2"
    },
    "11645": {
      "branch": 161,
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14833,
        15210
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11646": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 85
    },
    "11647": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11648": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11650": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11651": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "11656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11658": {
      "op": "SHL"
    },
    "11659": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11660": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11661": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14943,
        14947
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "11662": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11664": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11665": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "ADD",
      "path": "15"
    },
    "11666": {
      "op": "MSTORE"
    },
    "11667": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "11670": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11671": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11672": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "DIV",
      "path": "15"
    },
    "11673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11679": {
      "op": "SHL"
    },
    "11680": {
      "op": "SUB"
    },
    "11681": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11682": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11683": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14950,
        14971
      ],
      "op": "AND",
      "path": "15"
    },
    "11684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11686": {
      "op": "DUP4"
    },
    "11687": {
      "op": "ADD"
    },
    "11688": {
      "op": "MSTORE"
    },
    "11689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11691": {
      "op": "DUP3"
    },
    "11692": {
      "op": "ADD"
    },
    "11693": {
      "op": "DUP5"
    },
    "11694": {
      "op": "SWAP1"
    },
    "11695": {
      "op": "MSTORE"
    },
    "11696": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14934
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11697": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14934
      ],
      "op": "AND",
      "path": "15"
    },
    "11698": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14934
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11699": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14934
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "11704": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14934
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11705": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11707": {
      "op": "ADD"
    },
    "11708": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11710": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11712": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11713": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11714": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11715": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "SUB",
      "path": "15"
    },
    "11716": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11717": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11719": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP8",
      "path": "15"
    },
    "11720": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11721": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "11722": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11723": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11724": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11725": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DD5"
    },
    "11728": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11729": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11731": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11732": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11733": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11734": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "POP",
      "path": "15"
    },
    "11735": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "GAS",
      "path": "15"
    },
    "11736": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "CALL",
      "path": "15"
    },
    "11737": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11738": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11739": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11740": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DE9"
    },
    "11743": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11744": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "11745": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11747": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11748": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "11749": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "11750": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11752": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11753": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11754": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "POP",
      "path": "15"
    },
    "11755": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "POP",
      "path": "15"
    },
    "11756": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "POP",
      "path": "15"
    },
    "11757": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14902,
        14981
      ],
      "op": "POP",
      "path": "15"
    },
    "11758": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14833,
        15210
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E6E"
    },
    "11761": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14833,
        15210
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11762": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14833,
        15210
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11763": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 86
    },
    "11764": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11765": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15146,
        15164
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11766": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15146,
        15164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11767": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11769": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11770": {
      "op": "PUSH4",
      "value": "0x79212195"
    },
    "11775": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11777": {
      "op": "SHL"
    },
    "11778": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11779": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11786": {
      "op": "SHL"
    },
    "11787": {
      "op": "SUB"
    },
    "11788": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15065
      ],
      "op": "DUP8",
      "path": "15"
    },
    "11789": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15065
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11790": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15065
      ],
      "op": "AND",
      "path": "15"
    },
    "11791": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15065
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11792": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15065
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF242432A"
    },
    "11797": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15065
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11798": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E3B"
    },
    "11801": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11802": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15099,
        15103
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "11803": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15099,
        15103
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11804": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "11807": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11808": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11809": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "DIV",
      "path": "15"
    },
    "11810": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11811": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11812": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "AND",
      "path": "15"
    },
    "11813": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15106,
        15127
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11814": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15129,
        15136
      ],
      "op": "DUP9",
      "path": "15"
    },
    "11815": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15129,
        15136
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11818": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11820": {
      "op": "SHL"
    },
    "11821": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15146,
        15164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11822": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15146,
        15164
      ],
      "op": "DIV",
      "path": "15"
    },
    "11823": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15146,
        15164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "11826": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15146,
        15164
      ],
      "op": "AND",
      "path": "15"
    },
    "11827": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15146,
        15164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11828": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11830": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "ADD",
      "path": "15"
    },
    "11831": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4937"
    },
    "11834": {
      "fn": "Registry.manageWillAutoRenew",
      "jump": "i",
      "offset": [
        15028,
        15191
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11835": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11836": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11838": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11840": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11841": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11842": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11843": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "SUB",
      "path": "15"
    },
    "11844": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11845": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11847": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP8",
      "path": "15"
    },
    "11848": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11849": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "11850": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11851": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11852": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11853": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E55"
    },
    "11856": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11857": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11859": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11860": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11861": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11862": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "POP",
      "path": "15"
    },
    "11863": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "GAS",
      "path": "15"
    },
    "11864": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "CALL",
      "path": "15"
    },
    "11865": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11866": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11867": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11868": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E69"
    },
    "11871": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11872": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "11873": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11875": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11876": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "11877": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "11878": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11880": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11881": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11882": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "POP",
      "path": "15"
    },
    "11883": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "POP",
      "path": "15"
    },
    "11884": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "POP",
      "path": "15"
    },
    "11885": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15028,
        15191
      ],
      "op": "POP",
      "path": "15"
    },
    "11886": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14833,
        15210
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11887": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15242
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 87,
      "value": "0x7"
    },
    "11889": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11891": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15270,
        15280
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11892": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15282,
        15289
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11893": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15291,
        15300
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11894": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11896": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11897": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11899": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "ADD",
      "path": "15"
    },
    "11900": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E87"
    },
    "11903": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11904": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11905": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11906": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11907": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F1"
    },
    "11910": {
      "fn": "Registry.manageWillAutoRenew",
      "jump": "i",
      "offset": [
        15253,
        15301
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11911": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11912": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11914": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11915": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11918": {
      "op": "NOT"
    },
    "11919": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11920": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11921": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "SUB",
      "path": "15"
    },
    "11922": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "ADD",
      "path": "15"
    },
    "11923": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11924": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11925": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11926": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11927": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11928": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15243,
        15302
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11929": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15243,
        15302
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11930": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15253,
        15301
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11932": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15243,
        15302
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11933": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15243,
        15302
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11934": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15243,
        15302
      ],
      "op": "ADD",
      "path": "15"
    },
    "11935": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15243,
        15302
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "11936": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11937": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11938": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11939": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11940": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "ADD",
      "path": "15"
    },
    "11941": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11942": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11943": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11944": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11945": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "ADD",
      "path": "15"
    },
    "11946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11948": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11949": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11950": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15234,
        15303
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "11951": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15227,
        15303
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11952": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        14718,
        15318
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11953": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15477,
        15495
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 88
    },
    "11954": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15477,
        15495
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11955": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11957": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11958": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11959": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15459,
        15474
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "11960": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11965": {
      "op": "AND"
    },
    "11966": {
      "op": "DUP2"
    },
    "11967": {
      "op": "MSTORE"
    },
    "11968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11970": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "11972": {
      "op": "SHL"
    },
    "11973": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15477,
        15495
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11974": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15477,
        15495
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11975": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15477,
        15495
      ],
      "op": "DIV",
      "path": "15"
    },
    "11976": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15477,
        15495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "11979": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15477,
        15495
      ],
      "op": "AND",
      "path": "15"
    },
    "11980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11982": {
      "op": "DUP4"
    },
    "11983": {
      "op": "ADD"
    },
    "11984": {
      "op": "MSTORE"
    },
    "11985": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15441,
        15450
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11986": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15441,
        15450
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11987": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xFC33A7C95EE492CB6247BD90B28BBE1F459D8F80F3DC65F934CD020CF1E83EFB"
    },
    "12020": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12021": {
      "op": "ADD"
    },
    "12022": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12024": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12025": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12026": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12027": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "SUB",
      "path": "15"
    },
    "12028": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12029": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15422,
        15496
      ],
      "op": "LOG2",
      "path": "15"
    },
    "12030": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13296,
        15664
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6E7"
    },
    "12033": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13296,
        15664
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12034": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13296,
        15664
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12035": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 89
    },
    "12036": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12037": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12038": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12039": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "12042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12044": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "12046": {
      "op": "SHL"
    },
    "12047": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12048": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "12049": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "DIV",
      "path": "15"
    },
    "12050": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12051": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "AND",
      "path": "15"
    },
    "12052": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12053": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15615
      ],
      "op": "DUP9",
      "path": "15"
    },
    "12054": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15615
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12055": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15631
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "12057": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15631
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12058": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F2D"
    },
    "12061": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12062": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12063": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15635,
        15653
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12066": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12068": {
      "op": "SHL"
    },
    "12069": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12070": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12071": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "DIV",
      "path": "15"
    },
    "12072": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "AND",
      "path": "15"
    },
    "12073": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B46"
    },
    "12076": {
      "fn": "Registry.manageWillAutoRenew",
      "jump": "i",
      "offset": [
        15608,
        15653
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12077": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12078": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "12079": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "POP",
      "path": "15"
    },
    "12080": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "12083": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "EXP",
      "path": "15"
    },
    "12084": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12085": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12086": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12087": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "12090": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "MUL",
      "path": "15"
    },
    "12091": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "NOT",
      "path": "15"
    },
    "12092": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "AND",
      "path": "15"
    },
    "12093": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12094": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12095": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "12098": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "AND",
      "path": "15"
    },
    "12099": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "MUL",
      "path": "15"
    },
    "12100": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "OR",
      "path": "15"
    },
    "12101": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12102": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "12103": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        15608,
        15653
      ],
      "op": "POP",
      "path": "15"
    },
    "12104": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13034,
        15670
      ],
      "op": "POP",
      "path": "15"
    },
    "12105": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13034,
        15670
      ],
      "op": "POP",
      "path": "15"
    },
    "12106": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13034,
        15670
      ],
      "op": "POP",
      "path": "15"
    },
    "12107": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13034,
        15670
      ],
      "op": "POP",
      "path": "15"
    },
    "12108": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13034,
        15670
      ],
      "op": "POP",
      "path": "15"
    },
    "12109": {
      "fn": "Registry.manageWillAutoRenew",
      "offset": [
        13034,
        15670
      ],
      "op": "POP",
      "path": "15"
    },
    "12110": {
      "fn": "Registry.manageWillAutoRenew",
      "jump": "o",
      "offset": [
        13034,
        15670
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12111": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27206,
        27404
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12112": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27322,
        27363
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 90,
      "value": "0x2F59"
    },
    "12115": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27339,
        27346
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12116": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27348,
        27362
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12117": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27322,
        27338
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3AF2"
    },
    "12120": {
      "fn": "Registry.ensureIsClaimable",
      "jump": "i",
      "offset": [
        27322,
        27363
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12121": {
      "branch": 162,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27322,
        27363
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12122": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD72"
    },
    "12125": {
      "branch": 162,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12126": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12128": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12135": {
      "op": "SHL"
    },
    "12136": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12137": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12140": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12142": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12143": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "ADD",
      "path": "15"
    },
    "12144": {
      "op": "MSTORE"
    },
    "12145": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "12147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12149": {
      "op": "DUP3"
    },
    "12150": {
      "op": "ADD"
    },
    "12151": {
      "op": "MSTORE"
    },
    "12152": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000"
    },
    "12185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12187": {
      "op": "DUP3"
    },
    "12188": {
      "op": "ADD"
    },
    "12189": {
      "op": "MSTORE"
    },
    "12190": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12192": {
      "op": "ADD"
    },
    "12193": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27314,
        27397
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12196": {
      "op": "JUMP"
    },
    "12197": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17666,
        18368
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12198": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17813,
        17833
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "12200": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17813,
        17833
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12201": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17813,
        17833
      ],
      "op": "ADD",
      "path": "15"
    },
    "12202": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17813,
        17833
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12203": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17784,
        17804
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12205": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17879
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12206": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17879
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12207": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12209": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12210": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12217": {
      "op": "SHL"
    },
    "12218": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12219": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12220": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12222": {
      "op": "DUP5"
    },
    "12223": {
      "op": "AND"
    },
    "12224": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12226": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12227": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ADD",
      "path": "15"
    },
    "12228": {
      "op": "MSTORE"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12235": {
      "op": "SHL"
    },
    "12236": {
      "op": "SUB"
    },
    "12237": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17879
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12238": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17879
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12239": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17879
      ],
      "op": "AND",
      "path": "15"
    },
    "12240": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17879
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12241": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17895
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "12246": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17895
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12249": {
      "op": "ADD"
    },
    "12250": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12252": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12254": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12255": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12256": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12257": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "SUB",
      "path": "15"
    },
    "12258": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12259": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12260": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12261": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12262": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12263": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12264": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12265": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FF1"
    },
    "12268": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12269": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12271": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12272": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12273": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12274": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "POP",
      "path": "15"
    },
    "12275": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "GAS",
      "path": "15"
    },
    "12276": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "12277": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12278": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12279": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12280": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3005"
    },
    "12283": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12284": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12285": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12287": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12288": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12289": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12290": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12292": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12293": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12294": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "POP",
      "path": "15"
    },
    "12295": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "POP",
      "path": "15"
    },
    "12296": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "POP",
      "path": "15"
    },
    "12297": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "POP",
      "path": "15"
    },
    "12298": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12300": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12301": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12302": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12304": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "NOT",
      "path": "15"
    },
    "12305": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12307": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12308": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ADD",
      "path": "15"
    },
    "12309": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "AND",
      "path": "15"
    },
    "12310": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12311": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ADD",
      "path": "15"
    },
    "12312": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12313": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12315": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12316": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "POP",
      "path": "15"
    },
    "12317": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12318": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "ADD",
      "path": "15"
    },
    "12319": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12320": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3029"
    },
    "12323": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12324": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12325": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42A5"
    },
    "12328": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17871,
        17911
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12329": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17871,
        17911
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12330": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17844,
        17912
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12331": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17844,
        17912
      ],
      "op": "POP",
      "path": "15"
    },
    "12332": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17922,
        17938
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12334": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17953
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12341": {
      "op": "SHL"
    },
    "12342": {
      "op": "SUB"
    },
    "12343": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17962
      ],
      "op": "AND",
      "path": "15"
    },
    "12344": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17962
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "12349": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12351": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12352": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12353": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "12358": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "AND",
      "path": "15"
    },
    "12359": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "12361": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "SHL",
      "path": "15"
    },
    "12362": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12363": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12364": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12366": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ADD",
      "path": "15"
    },
    "12367": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12369": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12371": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12372": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12373": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12374": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "SUB",
      "path": "15"
    },
    "12375": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12376": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12377": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12378": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12379": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12380": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12381": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12382": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3066"
    },
    "12385": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12386": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12388": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12389": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12390": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12391": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "POP",
      "path": "15"
    },
    "12392": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "GAS",
      "path": "15"
    },
    "12393": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "12394": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12395": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12396": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12397": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x307A"
    },
    "12400": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12401": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12402": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12404": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12405": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12406": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12407": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12409": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12410": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12411": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "POP",
      "path": "15"
    },
    "12412": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "POP",
      "path": "15"
    },
    "12413": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "POP",
      "path": "15"
    },
    "12414": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "POP",
      "path": "15"
    },
    "12415": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12417": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12418": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12419": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12421": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "NOT",
      "path": "15"
    },
    "12422": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12424": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12425": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ADD",
      "path": "15"
    },
    "12426": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "AND",
      "path": "15"
    },
    "12427": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12428": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ADD",
      "path": "15"
    },
    "12429": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12430": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12432": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12433": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "POP",
      "path": "15"
    },
    "12434": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12435": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "ADD",
      "path": "15"
    },
    "12436": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12437": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x309E"
    },
    "12440": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12441": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12442": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4899"
    },
    "12445": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17941,
        17964
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12446": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17941,
        17964
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12447": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17922,
        17964
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12449": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17922,
        17964
      ],
      "op": "AND",
      "path": "15"
    },
    "12450": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17922,
        17964
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12451": {
      "op": "POP"
    },
    "12452": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17974,
        17987
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12454": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17990,
        18004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30B0"
    },
    "12457": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17922,
        17964
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12458": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17990,
        17992
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "12460": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17990,
        18004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4BE9"
    },
    "12463": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17990,
        18004
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12464": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17990,
        18004
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12465": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17974,
        18004
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12466": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17974,
        18004
      ],
      "op": "POP",
      "path": "15"
    },
    "12467": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18014,
        18031
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12469": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18055,
        18097
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30C2"
    },
    "12472": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18067,
        18074
      ],
      "op": "DUP8",
      "path": "15"
    },
    "12473": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18067,
        18089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "12475": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18067,
        18089
      ],
      "op": "ADD",
      "path": "15"
    },
    "12476": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18067,
        18089
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12477": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18091,
        18096
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12478": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18055,
        18066
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36E2"
    },
    "12481": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        18055,
        18097
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12482": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18055,
        18097
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12483": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18041
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12484": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18052
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "12486": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18052
      ],
      "op": "ADD",
      "path": "15"
    },
    "12487": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18052
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12488": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18097
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "12491": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18097
      ],
      "op": "AND",
      "path": "15"
    },
    "12492": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18097
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30D5"
    },
    "12495": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18097
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12496": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18097
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12497": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18097
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "12500": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        18034,
        18097
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12501": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18034,
        18097
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12502": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18014,
        18097
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12503": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18014,
        18097
      ],
      "op": "POP",
      "path": "15"
    },
    "12504": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18107,
        18123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12506": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18138,
        18145
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12507": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18138,
        18158
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12509": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18138,
        18158
      ],
      "op": "ADD",
      "path": "15"
    },
    "12510": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18138,
        18158
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12511": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18158
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12513": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18158
      ],
      "op": "AND",
      "path": "15"
    },
    "12514": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18135
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12515": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30EC"
    },
    "12518": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18158
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12519": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18158
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12520": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "12523": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        18126,
        18158
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12524": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18126,
        18158
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12525": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18107,
        18158
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12526": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18107,
        18158
      ],
      "op": "POP",
      "path": "15"
    },
    "12527": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18168,
        18184
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12529": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18202,
        18209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "12531": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18202,
        18209
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12532": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18213,
        18214
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12534": {
      "branch": 163,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18202,
        18214
      ],
      "op": "EQ",
      "path": "15"
    },
    "12535": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18198,
        18283
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3107"
    },
    "12538": {
      "branch": 163,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18198,
        18283
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12539": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18241,
        18272
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 91,
      "value": "0x3104"
    },
    "12542": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18249,
        18257
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12543": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18259,
        18271
      ],
      "op": "DUP8",
      "path": "15"
    },
    "12544": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18241,
        18248
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B80"
    },
    "12547": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        18241,
        18272
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12548": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18241,
        18272
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12549": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18230,
        18272
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12550": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18230,
        18272
      ],
      "op": "POP",
      "path": "15"
    },
    "12551": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18198,
        18283
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12552": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18318,
        18339
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 92,
      "value": "0x20"
    },
    "12554": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18318,
        18339
      ],
      "op": "DUP10",
      "path": "15"
    },
    "12555": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18318,
        18339
      ],
      "op": "ADD",
      "path": "15"
    },
    "12556": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18318,
        18339
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12557": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18361
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x312B"
    },
    "12560": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18361
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12561": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18341,
        18360
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x311A"
    },
    "12564": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18352,
        18360
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12565": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18341,
        18349
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12566": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18341,
        18360
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "12569": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        18341,
        18360
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12570": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18341,
        18360
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12577": {
      "op": "SHL"
    },
    "12578": {
      "op": "SUB"
    },
    "12579": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18317
      ],
      "op": "DUP10",
      "path": "15"
    },
    "12580": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18317
      ],
      "op": "AND",
      "path": "15"
    },
    "12581": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18317
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12582": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18361
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12583": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18317
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BB7"
    },
    "12586": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        18292,
        18361
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12587": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        18292,
        18361
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12588": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17774,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12589": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17774,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12590": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17774,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12591": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17774,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12592": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17774,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12593": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17774,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12594": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17774,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12595": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17666,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12596": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17666,
        18368
      ],
      "op": "POP",
      "path": "15"
    },
    "12597": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "o",
      "offset": [
        17666,
        18368
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12598": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26696,
        26860
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12599": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26822,
        26831
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 93
    },
    "12600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12606": {
      "op": "SHL"
    },
    "12607": {
      "op": "SUB"
    },
    "12608": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26797,
        26831
      ],
      "op": "AND",
      "path": "15"
    },
    "12609": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26797,
        26804
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12610": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26797,
        26818
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12612": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26797,
        26818
      ],
      "op": "ADD",
      "path": "15"
    },
    "12613": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26797,
        26818
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12620": {
      "op": "SHL"
    },
    "12621": {
      "op": "SUB"
    },
    "12622": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26797,
        26831
      ],
      "op": "AND",
      "path": "15"
    },
    "12623": {
      "branch": 164,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26797,
        26831
      ],
      "op": "EQ",
      "path": "15"
    },
    "12624": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD72"
    },
    "12627": {
      "branch": 164,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12628": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12630": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12637": {
      "op": "SHL"
    },
    "12638": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12639": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12642": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12644": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12645": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "ADD",
      "path": "15"
    },
    "12646": {
      "op": "MSTORE"
    },
    "12647": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12651": {
      "op": "DUP3"
    },
    "12652": {
      "op": "ADD"
    },
    "12653": {
      "op": "MSTORE"
    },
    "12654": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103632B73232B9"
    },
    "12672": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "12674": {
      "op": "SHL"
    },
    "12675": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12677": {
      "op": "DUP3"
    },
    "12678": {
      "op": "ADD"
    },
    "12679": {
      "op": "MSTORE"
    },
    "12680": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12682": {
      "op": "ADD"
    },
    "12683": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26789,
        26853
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12686": {
      "op": "JUMP"
    },
    "12687": {
      "fn": "Registry.sliceArr",
      "offset": [
        23514,
        23830
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12688": {
      "fn": "Registry.sliceArr",
      "offset": [
        23649,
        23667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "12690": {
      "fn": "Registry.sliceArr",
      "offset": [
        23701,
        23714
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 94,
      "value": "0x319B"
    },
    "12693": {
      "fn": "Registry.sliceArr",
      "offset": [
        23708,
        23714
      ],
      "op": "DUP5",
      "path": "15"
    },
    "12694": {
      "fn": "Registry.sliceArr",
      "offset": [
        23701,
        23705
      ],
      "op": "DUP5",
      "path": "15"
    },
    "12695": {
      "fn": "Registry.sliceArr",
      "offset": [
        23701,
        23714
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "12698": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23701,
        23714
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12699": {
      "fn": "Registry.sliceArr",
      "offset": [
        23701,
        23714
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12706": {
      "op": "SHL"
    },
    "12707": {
      "op": "SUB"
    },
    "12708": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12709": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "GT",
      "path": "15"
    },
    "12710": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12711": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31B2"
    },
    "12714": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12715": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31B2"
    },
    "12718": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D73"
    },
    "12721": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23687,
        23715
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12722": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12723": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12725": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12726": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12727": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12728": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12729": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12730": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12731": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12733": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "MUL",
      "path": "15"
    },
    "12734": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12736": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "ADD",
      "path": "15"
    },
    "12737": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12738": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "ADD",
      "path": "15"
    },
    "12739": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12741": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12742": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12743": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12744": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31DB"
    },
    "12747": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12748": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12749": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12751": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "ADD",
      "path": "15"
    },
    "12752": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12754": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12755": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "MUL",
      "path": "15"
    },
    "12756": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12757": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "12758": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12759": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "12760": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "ADD",
      "path": "15"
    },
    "12761": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12762": {
      "op": "POP"
    },
    "12763": {
      "fn": "Registry.sliceArr",
      "offset": [
        23687,
        23715
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12764": {
      "op": "POP"
    },
    "12765": {
      "fn": "Registry.sliceArr",
      "offset": [
        23683,
        23715
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12766": {
      "op": "POP"
    },
    "12767": {
      "fn": "Registry.sliceArr",
      "offset": [
        23742,
        23748
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12768": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12769": {
      "fn": "Registry.sliceArr",
      "offset": [
        23754,
        23758
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12770": {
      "fn": "Registry.sliceArr",
      "offset": [
        23750,
        23751
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12771": {
      "fn": "Registry.sliceArr",
      "offset": [
        23750,
        23758
      ],
      "op": "LT",
      "path": "15"
    },
    "12772": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12773": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3245"
    },
    "12776": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12777": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23798
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 95
    },
    "12778": {
      "fn": "Registry.sliceArr",
      "offset": [
        23799,
        23812
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31F3"
    },
    "12781": {
      "fn": "Registry.sliceArr",
      "offset": [
        23803,
        23812
      ],
      "op": "DUP5",
      "path": "15"
    },
    "12782": {
      "fn": "Registry.sliceArr",
      "offset": [
        23799,
        23800
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12783": {
      "fn": "Registry.sliceArr",
      "offset": [
        23799,
        23812
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "12786": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23799,
        23812
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12787": {
      "fn": "Registry.sliceArr",
      "offset": [
        23799,
        23812
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12788": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12789": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12790": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12791": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "LT",
      "path": "15"
    },
    "12792": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3203"
    },
    "12795": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12796": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3203"
    },
    "12799": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "12802": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23795,
        23813
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12803": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12804": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12806": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "MUL",
      "path": "15"
    },
    "12807": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12809": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "ADD",
      "path": "15"
    },
    "12810": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "ADD",
      "path": "15"
    },
    "12811": {
      "fn": "Registry.sliceArr",
      "offset": [
        23795,
        23813
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12812": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23780
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12813": {
      "fn": "Registry.sliceArr",
      "offset": [
        23785,
        23791
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12814": {
      "fn": "Registry.sliceArr",
      "offset": [
        23781,
        23782
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12815": {
      "fn": "Registry.sliceArr",
      "offset": [
        23781,
        23791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3218"
    },
    "12818": {
      "fn": "Registry.sliceArr",
      "offset": [
        23781,
        23791
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12819": {
      "fn": "Registry.sliceArr",
      "offset": [
        23781,
        23791
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12820": {
      "fn": "Registry.sliceArr",
      "offset": [
        23781,
        23791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "12823": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23781,
        23791
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12824": {
      "fn": "Registry.sliceArr",
      "offset": [
        23781,
        23791
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12825": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12826": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12827": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12828": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "LT",
      "path": "15"
    },
    "12829": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3228"
    },
    "12832": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12833": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3228"
    },
    "12836": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "12839": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23779,
        23792
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12840": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12841": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12843": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12844": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12845": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "MUL",
      "path": "15"
    },
    "12846": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12847": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12848": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12849": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "ADD",
      "path": "15"
    },
    "12850": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23792
      ],
      "op": "ADD",
      "path": "15"
    },
    "12851": {
      "fn": "Registry.sliceArr",
      "offset": [
        23779,
        23813
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12852": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 96
    },
    "12853": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x323D"
    },
    "12856": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12857": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D16"
    },
    "12860": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23760,
        23763
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12861": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12862": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12863": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "POP",
      "path": "15"
    },
    "12864": {
      "fn": "Registry.sliceArr",
      "offset": [
        23760,
        23763
      ],
      "op": "POP",
      "path": "15"
    },
    "12865": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31E0"
    },
    "12868": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12869": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12870": {
      "fn": "Registry.sliceArr",
      "offset": [
        23725,
        23824
      ],
      "op": "POP",
      "path": "15"
    },
    "12871": {
      "fn": "Registry.sliceArr",
      "offset": [
        23514,
        23830
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "12872": {
      "fn": "Registry.sliceArr",
      "offset": [
        23514,
        23830
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "12873": {
      "fn": "Registry.sliceArr",
      "offset": [
        23514,
        23830
      ],
      "op": "POP",
      "path": "15"
    },
    "12874": {
      "fn": "Registry.sliceArr",
      "offset": [
        23514,
        23830
      ],
      "op": "POP",
      "path": "15"
    },
    "12875": {
      "fn": "Registry.sliceArr",
      "offset": [
        23514,
        23830
      ],
      "op": "POP",
      "path": "15"
    },
    "12876": {
      "fn": "Registry.sliceArr",
      "offset": [
        23514,
        23830
      ],
      "op": "POP",
      "path": "15"
    },
    "12877": {
      "fn": "Registry.sliceArr",
      "jump": "o",
      "offset": [
        23514,
        23830
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12878": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18374,
        18846
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12879": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18592,
        18618
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12881": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12883": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18579
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12884": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18579
      ],
      "op": "ADD",
      "path": "15"
    },
    "12885": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18579
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12886": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18580,
        18587
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12887": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18580,
        18587
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12888": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12889": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12890": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12891": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "LT",
      "path": "15"
    },
    "12892": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3267"
    },
    "12895": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12896": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3267"
    },
    "12899": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "12902": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18565,
        18588
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12903": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12904": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12906": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "MUL",
      "path": "15"
    },
    "12907": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12909": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "ADD",
      "path": "15"
    },
    "12910": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "ADD",
      "path": "15"
    },
    "12911": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18588
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12912": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "12914": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12915": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "GT",
      "path": "15"
    },
    "12916": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12917": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3280"
    },
    "12920": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12921": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3280"
    },
    "12924": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D47"
    },
    "12927": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18565,
        18618
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12928": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12929": {
      "branch": 165,
      "fn": "Registry.safeTransfer",
      "offset": [
        18565,
        18618
      ],
      "op": "EQ",
      "path": "15"
    },
    "12930": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18561,
        18840
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12931": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18561,
        18840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3346"
    },
    "12934": {
      "branch": 165,
      "fn": "Registry.safeTransfer",
      "offset": [
        18561,
        18840
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12935": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18655
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 97,
      "value": "0x60"
    },
    "12937": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18655
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12938": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18655
      ],
      "op": "ADD",
      "path": "15"
    },
    "12939": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18655
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12940": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18656,
        18663
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12941": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18656,
        18663
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12942": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12943": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12944": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12945": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "LT",
      "path": "15"
    },
    "12946": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x329D"
    },
    "12949": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12950": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x329D"
    },
    "12953": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "12956": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18642,
        18664
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12957": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12958": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12960": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "MUL",
      "path": "15"
    },
    "12961": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12963": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "ADD",
      "path": "15"
    },
    "12964": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "ADD",
      "path": "15"
    },
    "12965": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18642,
        18664
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12972": {
      "op": "SHL"
    },
    "12973": {
      "op": "SUB"
    },
    "12974": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18678
      ],
      "op": "AND",
      "path": "15"
    },
    "12975": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18678
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "12980": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18679,
        18683
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12981": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18685,
        18687
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12982": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18691
      ],
      "op": "DUP9",
      "path": "15"
    },
    "12983": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18699
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "12985": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18699
      ],
      "op": "ADD",
      "path": "15"
    },
    "12986": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18699
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12987": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18700,
        18702
      ],
      "op": "DUP10",
      "path": "15"
    },
    "12988": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18700,
        18707
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12990": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18700,
        18707
      ],
      "op": "ADD",
      "path": "15"
    },
    "12991": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18700,
        18707
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12992": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12993": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12994": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12995": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "LT",
      "path": "15"
    },
    "12996": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32CF"
    },
    "12999": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13000": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32CF"
    },
    "13003": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "13006": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18689,
        18708
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13007": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13008": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13010": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13011": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13012": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "MUL",
      "path": "15"
    },
    "13013": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13014": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13015": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13016": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "ADD",
      "path": "15"
    },
    "13017": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "ADD",
      "path": "15"
    },
    "13018": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18689,
        18708
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13019": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13021": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13026": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13028": {
      "op": "SHL"
    },
    "13029": {
      "op": "SUB"
    },
    "13030": {
      "op": "NOT"
    },
    "13031": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "13033": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13034": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13035": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "SHL",
      "path": "15"
    },
    "13036": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "AND",
      "path": "15"
    },
    "13037": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13038": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13045": {
      "op": "SHL"
    },
    "13046": {
      "op": "SUB"
    },
    "13047": {
      "op": "SWAP4"
    },
    "13048": {
      "op": "DUP5"
    },
    "13049": {
      "op": "AND"
    },
    "13050": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13052": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13053": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "ADD",
      "path": "15"
    },
    "13054": {
      "op": "MSTORE"
    },
    "13055": {
      "op": "SWAP3"
    },
    "13056": {
      "op": "SWAP1"
    },
    "13057": {
      "op": "SWAP2"
    },
    "13058": {
      "op": "AND"
    },
    "13059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13061": {
      "op": "DUP4"
    },
    "13062": {
      "op": "ADD"
    },
    "13063": {
      "op": "MSTORE"
    },
    "13064": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13066": {
      "op": "DUP3"
    },
    "13067": {
      "op": "ADD"
    },
    "13068": {
      "op": "MSTORE"
    },
    "13069": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13071": {
      "op": "ADD"
    },
    "13072": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13074": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13076": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13077": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13078": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13079": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "SUB",
      "path": "15"
    },
    "13080": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13081": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13083": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP8",
      "path": "15"
    },
    "13084": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13085": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "13086": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13087": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13088": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13089": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3329"
    },
    "13092": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13093": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13095": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13096": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "REVERT",
      "path": "15"
    },
    "13097": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13098": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "POP",
      "path": "15"
    },
    "13099": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "GAS",
      "path": "15"
    },
    "13100": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "CALL",
      "path": "15"
    },
    "13101": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13102": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13103": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13104": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x333D"
    },
    "13107": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13108": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "13109": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13111": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13112": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "13113": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "13114": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13116": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "REVERT",
      "path": "15"
    },
    "13117": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13118": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "POP",
      "path": "15"
    },
    "13119": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "POP",
      "path": "15"
    },
    "13120": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "POP",
      "path": "15"
    },
    "13121": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18634,
        18709
      ],
      "op": "POP",
      "path": "15"
    },
    "13122": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18561,
        18840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44A"
    },
    "13125": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18561,
        18840
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13126": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18561,
        18840
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13127": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18762
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 98,
      "value": "0x60"
    },
    "13129": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18762
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13130": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18762
      ],
      "op": "ADD",
      "path": "15"
    },
    "13131": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18762
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13132": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18763,
        18770
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13133": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18763,
        18770
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13134": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13135": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13136": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13137": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "LT",
      "path": "15"
    },
    "13138": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x335D"
    },
    "13141": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13142": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x335D"
    },
    "13145": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "13148": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18749,
        18771
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13149": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13150": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13152": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "MUL",
      "path": "15"
    },
    "13153": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13155": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "ADD",
      "path": "15"
    },
    "13156": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "ADD",
      "path": "15"
    },
    "13157": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18749,
        18771
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13164": {
      "op": "SHL"
    },
    "13165": {
      "op": "SUB"
    },
    "13166": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18794
      ],
      "op": "AND",
      "path": "15"
    },
    "13167": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18794
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2EB2C2D6"
    },
    "13172": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18795,
        18799
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13173": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18801,
        18803
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13174": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18805,
        18812
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13175": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18814,
        18824
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13176": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13178": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13179": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13180": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "13185": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "AND",
      "path": "15"
    },
    "13186": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "13188": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "SHL",
      "path": "15"
    },
    "13189": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13190": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13191": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13193": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "ADD",
      "path": "15"
    },
    "13194": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3396"
    },
    "13197": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "13198": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "13199": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "13200": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13201": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13202": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x496F"
    },
    "13205": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18740,
        18829
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13206": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13207": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13209": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13211": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13212": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13213": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13214": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "SUB",
      "path": "15"
    },
    "13215": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13216": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13218": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP8",
      "path": "15"
    },
    "13219": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13220": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "13221": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13222": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13223": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13224": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33B0"
    },
    "13227": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13228": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13230": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13231": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "REVERT",
      "path": "15"
    },
    "13232": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13233": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "POP",
      "path": "15"
    },
    "13234": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "GAS",
      "path": "15"
    },
    "13235": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "CALL",
      "path": "15"
    },
    "13236": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13237": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13238": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13239": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x312B"
    },
    "13242": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13243": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "13244": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13246": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13247": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "13248": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "13249": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13251": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18740,
        18829
      ],
      "op": "REVERT",
      "path": "15"
    },
    "13252": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24824,
        25080
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13253": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24910,
        24931
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 99
    },
    "13254": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24910,
        24931
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13255": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24893,
        24932
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33CF"
    },
    "13258": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24893,
        24932
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13259": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24893,
        24909
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BE7"
    },
    "13262": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        24893,
        24932
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13263": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24893,
        24932
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13264": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24950,
        24970
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 100,
      "value": "0x20"
    },
    "13266": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24950,
        24970
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13267": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24950,
        24970
      ],
      "op": "ADD",
      "path": "15"
    },
    "13268": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24950,
        24970
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13269": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24950,
        24975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13271": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24950,
        24975
      ],
      "op": "AND",
      "path": "15"
    },
    "13272": {
      "branch": 166,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24950,
        24975
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13273": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x341F"
    },
    "13276": {
      "branch": 166,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13277": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13279": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13286": {
      "op": "SHL"
    },
    "13287": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13288": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13291": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13293": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13294": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "ADD",
      "path": "15"
    },
    "13295": {
      "op": "MSTORE"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13300": {
      "op": "DUP3"
    },
    "13301": {
      "op": "ADD"
    },
    "13302": {
      "op": "MSTORE"
    },
    "13303": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13330": {
      "op": "SHL"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13333": {
      "op": "DUP3"
    },
    "13334": {
      "op": "ADD"
    },
    "13335": {
      "op": "MSTORE"
    },
    "13336": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13338": {
      "op": "ADD"
    },
    "13339": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13342": {
      "op": "JUMP"
    },
    "13343": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24942,
        25004
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13344": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25022,
        25038
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 101,
      "value": "0x40"
    },
    "13346": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25022,
        25038
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13347": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25022,
        25038
      ],
      "op": "ADD",
      "path": "15"
    },
    "13348": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25022,
        25038
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13349": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25022,
        25043
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "13354": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25022,
        25043
      ],
      "op": "AND",
      "path": "15"
    },
    "13355": {
      "branch": 167,
      "fn": "Registry.ensureIsNull",
      "offset": [
        25022,
        25043
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13356": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CC"
    },
    "13359": {
      "branch": 167,
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13360": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13362": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13363": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13367": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13369": {
      "op": "SHL"
    },
    "13370": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13371": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13374": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13376": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13377": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "ADD",
      "path": "15"
    },
    "13378": {
      "op": "MSTORE"
    },
    "13379": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13383": {
      "op": "DUP3"
    },
    "13384": {
      "op": "ADD"
    },
    "13385": {
      "op": "MSTORE"
    },
    "13386": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000"
    },
    "13419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13421": {
      "op": "DUP3"
    },
    "13422": {
      "op": "ADD"
    },
    "13423": {
      "op": "MSTORE"
    },
    "13424": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13426": {
      "op": "ADD"
    },
    "13427": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        25014,
        25073
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13430": {
      "op": "JUMP"
    },
    "13431": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25810,
        26407
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13432": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25954,
        25961
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 102
    },
    "13433": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25954,
        25975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13435": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25954,
        25975
      ],
      "op": "ADD",
      "path": "15"
    },
    "13436": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25954,
        25975
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13443": {
      "op": "SHL"
    },
    "13444": {
      "op": "SUB"
    },
    "13445": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25941,
        25975
      ],
      "op": "AND",
      "path": "15"
    },
    "13446": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25941,
        25950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13453": {
      "op": "SHL"
    },
    "13454": {
      "op": "SUB"
    },
    "13455": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25941,
        25975
      ],
      "op": "AND",
      "path": "15"
    },
    "13456": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25941,
        25975
      ],
      "op": "EQ",
      "path": "15"
    },
    "13457": {
      "branch": 168,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25941,
        25975
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13458": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34DD"
    },
    "13461": {
      "branch": 168,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13462": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13464": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13471": {
      "op": "SHL"
    },
    "13472": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13473": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13476": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13478": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13479": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "ADD",
      "path": "15"
    },
    "13480": {
      "op": "MSTORE"
    },
    "13481": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13485": {
      "op": "DUP3"
    },
    "13486": {
      "op": "ADD"
    },
    "13487": {
      "op": "MSTORE"
    },
    "13488": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000"
    },
    "13521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13523": {
      "op": "DUP3"
    },
    "13524": {
      "op": "ADD"
    },
    "13525": {
      "op": "MSTORE"
    },
    "13526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13528": {
      "op": "ADD"
    },
    "13529": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13532": {
      "op": "JUMP"
    },
    "13533": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25933,
        26004
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13534": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26044,
        26059
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 103,
      "value": "0xFF"
    },
    "13536": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26059
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13537": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26059
      ],
      "op": "AND",
      "path": "15"
    },
    "13538": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26024
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13539": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26037
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13542": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26037
      ],
      "op": "ADD",
      "path": "15"
    },
    "13543": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26037
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13544": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26038,
        26039
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13545": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13546": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13547": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13548": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "LT",
      "path": "15"
    },
    "13549": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34F8"
    },
    "13552": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13553": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34F8"
    },
    "13556": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "13559": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        26022,
        26040
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13560": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13561": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13563": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "MUL",
      "path": "15"
    },
    "13564": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13566": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "ADD",
      "path": "15"
    },
    "13567": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "ADD",
      "path": "15"
    },
    "13568": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26040
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13569": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26059
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13571": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26059
      ],
      "op": "AND",
      "path": "15"
    },
    "13572": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26059
      ],
      "op": "GT",
      "path": "15"
    },
    "13573": {
      "branch": 169,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26022,
        26059
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13574": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3544"
    },
    "13577": {
      "branch": 169,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13578": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13580": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13587": {
      "op": "SHL"
    },
    "13588": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13589": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13592": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13594": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13595": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "ADD",
      "path": "15"
    },
    "13596": {
      "op": "MSTORE"
    },
    "13597": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13601": {
      "op": "DUP3"
    },
    "13602": {
      "op": "ADD"
    },
    "13603": {
      "op": "MSTORE"
    },
    "13604": {
      "op": "PUSH16",
      "value": "0xA4CA9C8CA87474DCDEE840EAD2DCE87"
    },
    "13621": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "13623": {
      "op": "SHL"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13626": {
      "op": "DUP3"
    },
    "13627": {
      "op": "ADD"
    },
    "13628": {
      "op": "MSTORE"
    },
    "13629": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13631": {
      "op": "ADD"
    },
    "13632": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13635": {
      "op": "JUMP"
    },
    "13636": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26014,
        26080
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13637": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26119,
        26120
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 104,
      "value": "0x0"
    },
    "13639": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26100
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13640": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26113
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13643": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26113
      ],
      "op": "ADD",
      "path": "15"
    },
    "13644": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26113
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13645": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26114,
        26115
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13646": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13647": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13648": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13649": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "LT",
      "path": "15"
    },
    "13650": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x355D"
    },
    "13653": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13654": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x355D"
    },
    "13657": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "13660": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        26098,
        26116
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13661": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13662": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13664": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "MUL",
      "path": "15"
    },
    "13665": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13667": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "ADD",
      "path": "15"
    },
    "13668": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "ADD",
      "path": "15"
    },
    "13669": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26116
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13670": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26120
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13672": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26120
      ],
      "op": "AND",
      "path": "15"
    },
    "13673": {
      "branch": 170,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26098,
        26120
      ],
      "op": "GT",
      "path": "15"
    },
    "13674": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3585"
    },
    "13677": {
      "branch": 170,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13678": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13680": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13687": {
      "op": "SHL"
    },
    "13688": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13689": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13690": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13692": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "ADD",
      "path": "15"
    },
    "13693": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13696": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13697": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A34"
    },
    "13700": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        26090,
        26148
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13701": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26090,
        26148
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13702": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26186,
        26202
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 105,
      "value": "0xFFFF"
    },
    "13705": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26202
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13706": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26202
      ],
      "op": "AND",
      "path": "15"
    },
    "13707": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26168
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13708": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "13711": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26179
      ],
      "op": "ADD",
      "path": "15"
    },
    "13712": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26179
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13713": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26180,
        26181
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13714": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13715": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13716": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13717": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "LT",
      "path": "15"
    },
    "13718": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35A1"
    },
    "13721": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13722": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35A1"
    },
    "13725": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "13728": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        26166,
        26182
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13729": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13730": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13732": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "MUL",
      "path": "15"
    },
    "13733": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13735": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "ADD",
      "path": "15"
    },
    "13736": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "ADD",
      "path": "15"
    },
    "13737": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26182
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13738": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26202
      ],
      "op": "GT",
      "path": "15"
    },
    "13739": {
      "branch": 171,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26166,
        26202
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13740": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35EB"
    },
    "13743": {
      "branch": 171,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13744": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13746": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13753": {
      "op": "SHL"
    },
    "13754": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13755": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13758": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13760": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13761": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "ADD",
      "path": "15"
    },
    "13762": {
      "op": "MSTORE"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13767": {
      "op": "DUP3"
    },
    "13768": {
      "op": "ADD"
    },
    "13769": {
      "op": "MSTORE"
    },
    "13770": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103AB4B73A189B"
    },
    "13788": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "13790": {
      "op": "SHL"
    },
    "13791": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13793": {
      "op": "DUP3"
    },
    "13794": {
      "op": "ADD"
    },
    "13795": {
      "op": "MSTORE"
    },
    "13796": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13798": {
      "op": "ADD"
    },
    "13799": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13802": {
      "op": "JUMP"
    },
    "13803": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26158,
        26224
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13804": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26261,
        26262
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 106,
      "value": "0x0"
    },
    "13806": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26244
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13807": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "13810": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26255
      ],
      "op": "ADD",
      "path": "15"
    },
    "13811": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26255
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13812": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26256,
        26257
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13813": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13814": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13815": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13816": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "LT",
      "path": "15"
    },
    "13817": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3604"
    },
    "13820": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13821": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3604"
    },
    "13824": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "13827": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        26242,
        26258
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13828": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13829": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13831": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "MUL",
      "path": "15"
    },
    "13832": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13834": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "ADD",
      "path": "15"
    },
    "13835": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "ADD",
      "path": "15"
    },
    "13836": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26258
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13837": {
      "branch": 172,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26242,
        26262
      ],
      "op": "GT",
      "path": "15"
    },
    "13838": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3659"
    },
    "13841": {
      "branch": 172,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13842": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13844": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13851": {
      "op": "SHL"
    },
    "13852": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13853": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13856": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13858": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13859": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "ADD",
      "path": "15"
    },
    "13860": {
      "op": "MSTORE"
    },
    "13861": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "13863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13865": {
      "op": "DUP3"
    },
    "13866": {
      "op": "ADD"
    },
    "13867": {
      "op": "MSTORE"
    },
    "13868": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74416D6F756E74206973207A65726F00000000000000"
    },
    "13901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13903": {
      "op": "DUP3"
    },
    "13904": {
      "op": "ADD"
    },
    "13905": {
      "op": "MSTORE"
    },
    "13906": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13908": {
      "op": "ADD"
    },
    "13909": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13912": {
      "op": "JUMP"
    },
    "13913": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26234,
        26292
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13914": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26332,
        26339
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 107
    },
    "13915": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26332,
        26355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13917": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26332,
        26355
      ],
      "op": "ADD",
      "path": "15"
    },
    "13918": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26332,
        26355
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13919": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13921": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26355
      ],
      "op": "AND",
      "path": "15"
    },
    "13922": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26312
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13923": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26325
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13926": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26325
      ],
      "op": "ADD",
      "path": "15"
    },
    "13927": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26325
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13928": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26326,
        26327
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13929": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13930": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13931": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13932": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "LT",
      "path": "15"
    },
    "13933": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3678"
    },
    "13936": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13937": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3678"
    },
    "13940": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "13943": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        26310,
        26328
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13944": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13945": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13947": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "MUL",
      "path": "15"
    },
    "13948": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13950": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "ADD",
      "path": "15"
    },
    "13951": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "ADD",
      "path": "15"
    },
    "13952": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26328
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13953": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26355
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13955": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26355
      ],
      "op": "AND",
      "path": "15"
    },
    "13956": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26355
      ],
      "op": "GT",
      "path": "15"
    },
    "13957": {
      "branch": 173,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26310,
        26355
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13958": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6AA"
    },
    "13961": {
      "branch": 173,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13962": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13964": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13971": {
      "op": "SHL"
    },
    "13972": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13973": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13976": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13978": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13979": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "ADD",
      "path": "15"
    },
    "13980": {
      "op": "MSTORE"
    },
    "13981": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "13983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13985": {
      "op": "DUP3"
    },
    "13986": {
      "op": "ADD"
    },
    "13987": {
      "op": "MSTORE"
    },
    "13988": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C"
    },
    "14021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14023": {
      "op": "DUP3"
    },
    "14024": {
      "op": "ADD"
    },
    "14025": {
      "op": "MSTORE"
    },
    "14026": {
      "op": "PUSH8",
      "value": "0xDEEECAC840DAC2F"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "14037": {
      "op": "SHL"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14040": {
      "op": "DUP3"
    },
    "14041": {
      "op": "ADD"
    },
    "14042": {
      "op": "MSTORE"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14045": {
      "op": "ADD"
    },
    "14046": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        26302,
        26400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14049": {
      "op": "JUMP"
    },
    "14050": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22955,
        23508
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14051": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23027,
        23034
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14053": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23046,
        23083
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 108,
      "value": "0x36EE"
    },
    "14056": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23070,
        23075
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14057": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23077,
        23082
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14058": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23046,
        23069
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C3E"
    },
    "14061": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23046,
        23083
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14062": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23046,
        23083
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14063": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23108,
        23129
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF0"
    },
    "14065": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23108,
        23129
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14066": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23108,
        23129
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14067": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23108,
        23129
      ],
      "op": "SHR",
      "path": "15"
    },
    "14068": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23156,
        23183
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "14071": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23156,
        23183
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "14073": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23156,
        23183
      ],
      "op": "DUP6",
      "path": "15"
    },
    "14074": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23156,
        23183
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14075": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23156,
        23183
      ],
      "op": "SHR",
      "path": "15"
    },
    "14076": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23156,
        23183
      ],
      "op": "AND",
      "path": "15"
    },
    "14077": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23093,
        23105
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14079": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23216,
        23229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x370A"
    },
    "14082": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23224,
        23229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "14085": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23216,
        23221
      ],
      "op": "DUP7",
      "path": "15"
    },
    "14086": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23216,
        23229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B84"
    },
    "14089": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23216,
        23229
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14090": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23216,
        23229
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14091": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23193,
        23229
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14092": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23193,
        23229
      ],
      "op": "POP",
      "path": "15"
    },
    "14093": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23251,
        23255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x270F"
    },
    "14096": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23243,
        23248
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14097": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23243,
        23255
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "14100": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23243,
        23255
      ],
      "op": "AND",
      "path": "15"
    },
    "14101": {
      "branch": 174,
      "fn": "Registry.unpackPrice",
      "offset": [
        23243,
        23255
      ],
      "op": "GT",
      "path": "15"
    },
    "14102": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23239,
        23294
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14103": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23239,
        23294
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3720"
    },
    "14106": {
      "branch": 174,
      "fn": "Registry.unpackPrice",
      "offset": [
        23239,
        23294
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14107": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23279,
        23283
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 109,
      "value": "0x270F"
    },
    "14110": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23271,
        23283
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "14111": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23271,
        23283
      ],
      "op": "POP",
      "path": "15"
    },
    "14112": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23239,
        23294
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14113": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23317,
        23321
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x270F"
    },
    "14116": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23307,
        23314
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14117": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23307,
        23321
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "14120": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23307,
        23321
      ],
      "op": "AND",
      "path": "15"
    },
    "14121": {
      "branch": 175,
      "fn": "Registry.unpackPrice",
      "offset": [
        23307,
        23321
      ],
      "op": "GT",
      "path": "15"
    },
    "14122": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23303,
        23362
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14123": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23303,
        23362
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3734"
    },
    "14126": {
      "branch": 175,
      "fn": "Registry.unpackPrice",
      "offset": [
        23303,
        23362
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14127": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23347,
        23351
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 110,
      "value": "0x270F"
    },
    "14130": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23337,
        23351
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14131": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23337,
        23351
      ],
      "op": "POP",
      "path": "15"
    },
    "14132": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23303,
        23362
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14133": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23371,
        23380
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14135": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23383,
        23396
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3744"
    },
    "14138": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23391,
        23396
      ],
      "op": "DUP7",
      "path": "15"
    },
    "14139": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23383,
        23396
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "14142": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23383,
        23396
      ],
      "op": "DUP7",
      "path": "15"
    },
    "14143": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23383,
        23396
      ],
      "op": "AND",
      "path": "15"
    },
    "14144": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23383,
        23396
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "14147": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23383,
        23396
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14148": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23383,
        23396
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14149": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23371,
        23396
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14150": {
      "op": "POP"
    },
    "14151": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23406,
        23415
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14153": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23418,
        23440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3756"
    },
    "14156": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23428,
        23440
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14157": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23418,
        23440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "14160": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23418,
        23440
      ],
      "op": "DUP7",
      "path": "15"
    },
    "14161": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23418,
        23440
      ],
      "op": "AND",
      "path": "15"
    },
    "14162": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23418,
        23440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "14165": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23418,
        23440
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14166": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23418,
        23440
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14167": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23406,
        23440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14168": {
      "op": "POP"
    },
    "14169": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23450,
        23467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14171": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23470,
        23475
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3764"
    },
    "14174": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23406,
        23440
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14175": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23470,
        23471
      ],
      "op": "DUP5",
      "path": "15"
    },
    "14176": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23470,
        23475
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B6C"
    },
    "14179": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23470,
        23475
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14180": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23470,
        23475
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14181": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23450,
        23475
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "14182": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22955,
        23508
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "14183": {
      "op": "POP"
    },
    "14184": {
      "op": "POP"
    },
    "14185": {
      "op": "POP"
    },
    "14186": {
      "op": "POP"
    },
    "14187": {
      "op": "POP"
    },
    "14188": {
      "op": "POP"
    },
    "14189": {
      "op": "POP"
    },
    "14190": {
      "op": "POP"
    },
    "14191": {
      "op": "POP"
    },
    "14192": {
      "fn": "Registry.unpackPrice",
      "jump": "o",
      "offset": [
        22955,
        23508
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14193": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14194": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 111,
      "value": "0x40"
    },
    "14196": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14203": {
      "op": "SHL"
    },
    "14204": {
      "op": "SUB"
    },
    "14205": {
      "op": "DUP1"
    },
    "14206": {
      "op": "DUP6"
    },
    "14207": {
      "op": "AND"
    },
    "14208": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "14210": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "7"
    },
    "14211": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "14212": {
      "op": "MSTORE"
    },
    "14213": {
      "op": "DUP4"
    },
    "14214": {
      "op": "AND"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14217": {
      "op": "DUP3"
    },
    "14218": {
      "op": "ADD"
    },
    "14219": {
      "op": "MSTORE"
    },
    "14220": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14222": {
      "op": "DUP2"
    },
    "14223": {
      "op": "ADD"
    },
    "14224": {
      "op": "DUP3"
    },
    "14225": {
      "op": "SWAP1"
    },
    "14226": {
      "op": "MSTORE"
    },
    "14227": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6AA"
    },
    "14230": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14231": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "7"
    },
    "14232": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14233": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "14238": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14240": {
      "op": "SHL"
    },
    "14241": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14242": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14244": {
      "op": "ADD"
    },
    "14245": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14246": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14248": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14249": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14252": {
      "op": "NOT"
    },
    "14253": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14254": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP5",
      "path": "7"
    },
    "14255": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SUB",
      "path": "7"
    },
    "14256": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "14257": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14258": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14259": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14260": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14261": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14262": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14264": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14265": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "14266": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14267": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14274": {
      "op": "SHL"
    },
    "14275": {
      "op": "SUB"
    },
    "14276": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "14277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14283": {
      "op": "SHL"
    },
    "14284": {
      "op": "SUB"
    },
    "14285": {
      "op": "NOT"
    },
    "14286": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14287": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "14288": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "14289": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "14290": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14291": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "14292": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "OR",
      "path": "7"
    },
    "14293": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14294": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14295": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14296": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CCF"
    },
    "14299": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        983,
        1079
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14300": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25352,
        25804
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14301": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25459,
        25460
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 112,
      "value": "0x0"
    },
    "14303": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25442
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14304": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25453
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "14306": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25453
      ],
      "op": "ADD",
      "path": "15"
    },
    "14307": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25453
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14308": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25454,
        25455
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14309": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14310": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14311": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14312": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "LT",
      "path": "15"
    },
    "14313": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37F4"
    },
    "14316": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14317": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37F4"
    },
    "14320": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "14323": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25440,
        25456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14324": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14325": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14327": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "MUL",
      "path": "15"
    },
    "14328": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14330": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "ADD",
      "path": "15"
    },
    "14331": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "ADD",
      "path": "15"
    },
    "14332": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14333": {
      "branch": 176,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25440,
        25460
      ],
      "op": "GT",
      "path": "15"
    },
    "14334": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3849"
    },
    "14337": {
      "branch": 176,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14338": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14340": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14347": {
      "op": "SHL"
    },
    "14348": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14349": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14352": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14354": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14355": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "ADD",
      "path": "15"
    },
    "14356": {
      "op": "MSTORE"
    },
    "14357": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "14359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14361": {
      "op": "DUP3"
    },
    "14362": {
      "op": "ADD"
    },
    "14363": {
      "op": "MSTORE"
    },
    "14364": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000"
    },
    "14397": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14399": {
      "op": "DUP3"
    },
    "14400": {
      "op": "ADD"
    },
    "14401": {
      "op": "MSTORE"
    },
    "14402": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14404": {
      "op": "ADD"
    },
    "14405": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14408": {
      "op": "JUMP"
    },
    "14409": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25432,
        25491
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14410": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25529,
        25545
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 113,
      "value": "0xFFFF"
    },
    "14413": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25545
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14414": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25545
      ],
      "op": "AND",
      "path": "15"
    },
    "14415": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25511
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14416": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25522
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "14418": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25522
      ],
      "op": "ADD",
      "path": "15"
    },
    "14419": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25522
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14420": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25523,
        25524
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14421": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14422": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14423": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14424": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "LT",
      "path": "15"
    },
    "14425": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3864"
    },
    "14428": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14429": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3864"
    },
    "14432": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "14435": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25509,
        25525
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14436": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14437": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14439": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "MUL",
      "path": "15"
    },
    "14440": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14442": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "ADD",
      "path": "15"
    },
    "14443": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "ADD",
      "path": "15"
    },
    "14444": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25525
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14445": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25545
      ],
      "op": "GT",
      "path": "15"
    },
    "14446": {
      "branch": 177,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25509,
        25545
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14447": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38AE"
    },
    "14450": {
      "branch": 177,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14451": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14453": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14454": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14458": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14460": {
      "op": "SHL"
    },
    "14461": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14462": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14465": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14467": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14468": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "ADD",
      "path": "15"
    },
    "14469": {
      "op": "MSTORE"
    },
    "14470": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14472": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14474": {
      "op": "DUP3"
    },
    "14475": {
      "op": "ADD"
    },
    "14476": {
      "op": "MSTORE"
    },
    "14477": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103AB4B73A189B"
    },
    "14495": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "14497": {
      "op": "SHL"
    },
    "14498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14500": {
      "op": "DUP3"
    },
    "14501": {
      "op": "ADD"
    },
    "14502": {
      "op": "MSTORE"
    },
    "14503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14505": {
      "op": "ADD"
    },
    "14506": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14509": {
      "op": "JUMP"
    },
    "14510": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25501,
        25567
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14511": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25609,
        25610
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 114,
      "value": "0x0"
    },
    "14513": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25587
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14514": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25603
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "14516": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25603
      ],
      "op": "ADD",
      "path": "15"
    },
    "14517": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25603
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14518": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25604,
        25605
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14519": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14520": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14521": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14522": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "LT",
      "path": "15"
    },
    "14523": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38C6"
    },
    "14526": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14527": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38C6"
    },
    "14530": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "14533": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25585,
        25606
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14534": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14535": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14537": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "MUL",
      "path": "15"
    },
    "14538": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14540": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "ADD",
      "path": "15"
    },
    "14541": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "ADD",
      "path": "15"
    },
    "14542": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25606
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14543": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25610
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "14545": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25610
      ],
      "op": "AND",
      "path": "15"
    },
    "14546": {
      "branch": 178,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25585,
        25610
      ],
      "op": "GT",
      "path": "15"
    },
    "14547": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38EE"
    },
    "14550": {
      "branch": 178,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14551": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14553": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14560": {
      "op": "SHL"
    },
    "14561": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14562": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14563": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14565": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "ADD",
      "path": "15"
    },
    "14566": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14569": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14570": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A34"
    },
    "14573": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25577,
        25638
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14574": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25577,
        25638
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14575": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25681,
        25696
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 115,
      "value": "0xFF"
    },
    "14577": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25696
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14578": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25696
      ],
      "op": "AND",
      "path": "15"
    },
    "14579": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25658
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14580": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "14582": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25674
      ],
      "op": "ADD",
      "path": "15"
    },
    "14583": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25674
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14584": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25675,
        25676
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14585": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14586": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14587": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14588": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "LT",
      "path": "15"
    },
    "14589": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3908"
    },
    "14592": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14593": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3908"
    },
    "14596": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "14599": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25656,
        25677
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14600": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14601": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14603": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "MUL",
      "path": "15"
    },
    "14604": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14606": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "ADD",
      "path": "15"
    },
    "14607": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "ADD",
      "path": "15"
    },
    "14608": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25677
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14609": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25696
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "14611": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25696
      ],
      "op": "AND",
      "path": "15"
    },
    "14612": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25696
      ],
      "op": "GT",
      "path": "15"
    },
    "14613": {
      "branch": 179,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25656,
        25696
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14614": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3954"
    },
    "14617": {
      "branch": 179,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14618": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14620": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14627": {
      "op": "SHL"
    },
    "14628": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14629": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14632": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14634": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14635": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "ADD",
      "path": "15"
    },
    "14636": {
      "op": "MSTORE"
    },
    "14637": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "14639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14641": {
      "op": "DUP3"
    },
    "14642": {
      "op": "ADD"
    },
    "14643": {
      "op": "MSTORE"
    },
    "14644": {
      "op": "PUSH16",
      "value": "0xA4CA9C8CA87474DCDEE840EAD2DCE87"
    },
    "14661": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "14663": {
      "op": "SHL"
    },
    "14664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14666": {
      "op": "DUP3"
    },
    "14667": {
      "op": "ADD"
    },
    "14668": {
      "op": "MSTORE"
    },
    "14669": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14671": {
      "op": "ADD"
    },
    "14672": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14675": {
      "op": "JUMP"
    },
    "14676": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25648,
        25717
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14677": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25766,
        25767
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 116,
      "value": "0x0"
    },
    "14679": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25744
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14680": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25759
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "14682": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25759
      ],
      "op": "ADD",
      "path": "15"
    },
    "14683": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25759
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14684": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25760,
        25761
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14685": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14686": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14687": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14688": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "LT",
      "path": "15"
    },
    "14689": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x396C"
    },
    "14692": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14693": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x396C"
    },
    "14696": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4D5D"
    },
    "14699": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25742,
        25762
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14700": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14701": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14703": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "MUL",
      "path": "15"
    },
    "14704": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14706": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "ADD",
      "path": "15"
    },
    "14707": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "ADD",
      "path": "15"
    },
    "14708": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25742,
        25762
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14709": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25735,
        25763
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "14711": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25735,
        25763
      ],
      "op": "SHR",
      "path": "15"
    },
    "14712": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25735,
        25767
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "14717": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25735,
        25767
      ],
      "op": "AND",
      "path": "15"
    },
    "14718": {
      "branch": 180,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25735,
        25767
      ],
      "op": "GT",
      "path": "15"
    },
    "14719": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD72"
    },
    "14722": {
      "branch": 180,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14723": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14725": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14732": {
      "op": "SHL"
    },
    "14733": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14734": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14735": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14737": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "ADD",
      "path": "15"
    },
    "14738": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14741": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14742": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25727,
        25797
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A6B"
    },
    "14745": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25727,
        25797
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14746": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24279,
        24545
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14747": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24348,
        24387
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 117,
      "value": "0x39A7"
    },
    "14750": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24365,
        24372
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14751": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24365,
        24386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14753": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24365,
        24386
      ],
      "op": "ADD",
      "path": "15"
    },
    "14754": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24365,
        24386
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14755": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24348,
        24364
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BE7"
    },
    "14758": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        24348,
        24387
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14759": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24348,
        24387
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14760": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24405,
        24428
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 118,
      "value": "0x40"
    },
    "14762": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24405,
        24428
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14763": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24405,
        24428
      ],
      "op": "ADD",
      "path": "15"
    },
    "14764": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24405,
        24428
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14765": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24405,
        24433
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "14767": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24405,
        24433
      ],
      "op": "AND",
      "path": "15"
    },
    "14768": {
      "branch": 181,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24405,
        24433
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14769": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x39F7"
    },
    "14772": {
      "branch": 181,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14773": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14775": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14782": {
      "op": "SHL"
    },
    "14783": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14784": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14787": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14789": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14790": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "ADD",
      "path": "15"
    },
    "14791": {
      "op": "MSTORE"
    },
    "14792": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "14794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14796": {
      "op": "DUP3"
    },
    "14797": {
      "op": "ADD"
    },
    "14798": {
      "op": "MSTORE"
    },
    "14799": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "14824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14826": {
      "op": "SHL"
    },
    "14827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14829": {
      "op": "DUP3"
    },
    "14830": {
      "op": "ADD"
    },
    "14831": {
      "op": "MSTORE"
    },
    "14832": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14834": {
      "op": "ADD"
    },
    "14835": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14838": {
      "op": "JUMP"
    },
    "14839": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24397,
        24462
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14840": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24480,
        24502
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 119,
      "value": "0x60"
    },
    "14842": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24480,
        24502
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14843": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24480,
        24502
      ],
      "op": "ADD",
      "path": "15"
    },
    "14844": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24480,
        24502
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14849": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14851": {
      "op": "SHL"
    },
    "14852": {
      "op": "SUB"
    },
    "14853": {
      "op": "NOT"
    },
    "14854": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24480,
        24507
      ],
      "op": "AND",
      "path": "15"
    },
    "14855": {
      "branch": 182,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24480,
        24507
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14856": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CC"
    },
    "14859": {
      "branch": 182,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14860": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14862": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14869": {
      "op": "SHL"
    },
    "14870": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14871": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14874": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14876": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14877": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "ADD",
      "path": "15"
    },
    "14878": {
      "op": "MSTORE"
    },
    "14879": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "14881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14883": {
      "op": "DUP3"
    },
    "14884": {
      "op": "ADD"
    },
    "14885": {
      "op": "MSTORE"
    },
    "14886": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000"
    },
    "14919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14921": {
      "op": "DUP3"
    },
    "14922": {
      "op": "ADD"
    },
    "14923": {
      "op": "MSTORE"
    },
    "14924": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14926": {
      "op": "ADD"
    },
    "14927": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24472,
        24538
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14930": {
      "op": "JUMP"
    },
    "14931": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27071,
        27200
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14932": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27163,
        27164
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 120,
      "value": "0x0"
    },
    "14934": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27151,
        27160
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14935": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27151,
        27164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "14937": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27151,
        27164
      ],
      "op": "AND",
      "path": "15"
    },
    "14938": {
      "branch": 183,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27151,
        27164
      ],
      "op": "GT",
      "path": "15"
    },
    "14939": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CC"
    },
    "14942": {
      "branch": 183,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14943": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14945": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14952": {
      "op": "SHL"
    },
    "14953": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14954": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14957": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14959": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14960": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "ADD",
      "path": "15"
    },
    "14961": {
      "op": "MSTORE"
    },
    "14962": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "14964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14966": {
      "op": "DUP3"
    },
    "14967": {
      "op": "ADD"
    },
    "14968": {
      "op": "MSTORE"
    },
    "14969": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000"
    },
    "15002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15004": {
      "op": "DUP3"
    },
    "15005": {
      "op": "ADD"
    },
    "15006": {
      "op": "MSTORE"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15009": {
      "op": "ADD"
    },
    "15010": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        27143,
        27193
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "15013": {
      "op": "JUMP"
    },
    "15014": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24018,
        24141
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15021": {
      "op": "SHL"
    },
    "15022": {
      "op": "SUB"
    },
    "15023": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24092,
        24110
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 121
    },
    "15024": {
      "branch": 184,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24092,
        24110
      ],
      "op": "AND",
      "path": "15"
    },
    "15025": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CC"
    },
    "15028": {
      "branch": 184,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "15029": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "15031": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15038": {
      "op": "SHL"
    },
    "15039": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "DUP2",
      "path": "15"
    },
    "15040": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "15041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15043": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "15045": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15046": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "ADD",
      "path": "15"
    },
    "15047": {
      "op": "MSTORE"
    },
    "15048": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "15050": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15052": {
      "op": "DUP3"
    },
    "15053": {
      "op": "ADD"
    },
    "15054": {
      "op": "MSTORE"
    },
    "15055": {
      "op": "PUSH19",
      "value": "0x52654E46543A3A7A65726F2061646472657373"
    },
    "15075": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "15077": {
      "op": "SHL"
    },
    "15078": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15080": {
      "op": "DUP3"
    },
    "15081": {
      "op": "ADD"
    },
    "15082": {
      "op": "MSTORE"
    },
    "15083": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15085": {
      "op": "ADD"
    },
    "15086": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        24084,
        24134
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "15089": {
      "op": "JUMP"
    },
    "15090": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27410,
        27668
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15091": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27499,
        27503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15093": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27533,
        27540
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 122
    },
    "15094": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27533,
        27549
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "15096": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27533,
        27549
      ],
      "op": "ADD",
      "path": "15"
    },
    "15097": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27533,
        27549
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15098": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27523,
        27549
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "15103": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27523,
        27549
      ],
      "op": "AND",
      "path": "15"
    },
    "15104": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27523,
        27530
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15105": {
      "branch": 185,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27523,
        27549
      ],
      "op": "GT",
      "path": "15"
    },
    "15106": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B4D"
    },
    "15109": {
      "branch": 185,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "15110": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "15112": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15119": {
      "op": "SHL"
    },
    "15120": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "DUP2",
      "path": "15"
    },
    "15121": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "15122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15124": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "15126": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15127": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "ADD",
      "path": "15"
    },
    "15128": {
      "op": "MSTORE"
    },
    "15129": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "15131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15133": {
      "op": "DUP3"
    },
    "15134": {
      "op": "ADD"
    },
    "15135": {
      "op": "MSTORE"
    },
    "15136": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000"
    },
    "15169": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15171": {
      "op": "DUP3"
    },
    "15172": {
      "op": "ADD"
    },
    "15173": {
      "op": "MSTORE"
    },
    "15174": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15176": {
      "op": "ADD"
    },
    "15177": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "15180": {
      "op": "JUMP"
    },
    "15181": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27515,
        27578
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15182": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x15180"
    },
    "15186": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27631
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 123
    },
    "15187": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27644
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "15189": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27644
      ],
      "op": "ADD",
      "path": "15"
    },
    "15190": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27644
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15191": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27661
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "15193": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27661
      ],
      "op": "AND",
      "path": "15"
    },
    "15194": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B63"
    },
    "15197": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27661
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "15198": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27661
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "15199": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27661
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "15202": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27624,
        27661
      ],
      "op": "JUMP",
      "path": "15"
    },
    "15203": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27624,
        27661
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15204": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27605,
        27621
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "15206": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27605,
        27621
      ],
      "op": "DUP5",
      "path": "15"
    },
    "15207": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27605,
        27621
      ],
      "op": "ADD",
      "path": "15"
    },
    "15208": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27605,
        27621
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15209": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27621
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B78"
    },
    "15212": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27621
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "15213": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27621
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "15218": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27621
      ],
      "op": "AND",
      "path": "15"
    },
    "15219": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27602
      ],
      "op": "DUP5",
      "path": "15"
    },
    "15220": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27621
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4CD3"
    },
    "15223": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27595,
        27621
      ],
      "op": "JUMP",
      "path": "15"
    },
    "15224": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27621
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15225": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27661
      ],
      "op": "GT",
      "path": "15"
    },
    "15226": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27595,
        27661
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "15227": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27410,
        27668
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "15228": {
      "op": "POP"
    },
    "15229": {
      "op": "POP"
    },
    "15230": {
      "op": "POP"
    },
    "15231": {
      "fn": "Registry.isPastReturnDate",
      "jump": "o",
      "offset": [
        27410,
        27668
      ],
      "op": "JUMP",
      "path": "15"
    },
    "15232": {
      "fn": "Registry.takeFee",
      "offset": [
        16273,
        16458
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15233": {
      "fn": "Registry.takeFee",
      "offset": [
        16337,
        16348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15235": {
      "fn": "Registry.takeFee",
      "offset": [
        16376,
        16383
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 124,
      "value": "0x6"
    },
    "15237": {
      "fn": "Registry.takeFee",
      "offset": [
        16376,
        16383
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "15238": {
      "fn": "Registry.takeFee",
      "offset": [
        16366,
        16373
      ],
      "op": "DUP4",
      "path": "15"
    },
    "15239": {
      "fn": "Registry.takeFee",
      "offset": [
        16366,
        16383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3B90"
    },
    "15242": {
      "fn": "Registry.takeFee",
      "offset": [
        16366,
        16383
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "15243": {
      "fn": "Registry.takeFee",
      "offset": [
        16366,
        16383
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "15244": {
      "fn": "Registry.takeFee",
      "offset": [
        16366,
        16383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4C91"
    },
    "15247": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        16366,
        16383
      ],
      "op": "JUMP",
      "path": "15"
    },
    "15248": {
      "fn": "Registry.takeFee",
      "offset": [
        16366,
        16383
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15249": {
      "fn": "Registry.takeFee",
      "offset": [
        16360,
        16383
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "15250": {
      "op": "POP"
    },
    "15251": {
      "fn": "Registry.takeFee",
      "offset": [
        16393,
        16405
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 125,
      "value": "0x3B9E"
    },
    "15254": {
      "fn": "Registry.takeFee",
      "offset": [
        16400,
        16405
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "15257": {
      "fn": "Registry.takeFee",
      "offset": [
        16360,
        16383
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15258": {
      "fn": "Registry.takeFee",
      "offset": [
        16393,
        16405
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B84"
    },
    "15261": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        16393,
        16405
      ],
      "op": "JUMP",
      "path": "15"
    },
    "15262": {
      "fn": "Registry.takeFee",
      "offset": [
        16393,
        16405
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15263": {
      "fn": "Registry.takeFee",
      "offset": [
        16434,
        16445
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 126,
      "value": "0x2"
    },
    "15265": {
      "fn": "Registry.takeFee",
      "offset": [
        16434,
        16445
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "15266": {
      "fn": "Registry.takeFee",
      "offset": [
        16393,
        16405
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "15267": {
      "fn": "Registry.takeFee",
      "offset": [
        16393,
        16405
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "15268": {
      "op": "POP"
    },
    "15269": {
      "fn": "Registry.takeFee",
      "offset": [
        16415,
        16451
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x400"
    },
    "15272": {
      "fn": "Registry.takeFee",
      "offset": [
        16415,
        16451
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "15273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15279": {
      "op": "SHL"
    },
    "15280": {
      "op": "SUB"
    },
    "15281": {
      "fn": "Registry.takeFee",
      "offset": [
        16415,
        16433
      ],
      "op": "DUP5",
      "path": "15"
    },
    "15282": {
      "fn": "Registry.takeFee",
      "offset": [
        16415,
        16433
      ],
      "op": "DUP2",
      "path": "15"
    },
    "15283": {
      "fn": "Registry.takeFee",
      "offset": [
        16415,
        16433
      ],
      "op": "AND",
      "path": "15"
    },
    "15284": {
      "fn": "Registry.takeFee",
      "offset": [
        16415,
        16433
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "15285": {
      "fn": "Registry.takeFee",
      "offset": [
        16434,
        16445
      ],
      "op": "AND",
      "path": "15"
    },
    "15286": {
      "fn": "Registry.takeFee",
      "offset": [
        16393,
        16405
      ],
      "op": "DUP4",
      "path": "15"
    },
    "15287": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "15288": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 127,
      "value": "0x40"
    },
    "15290": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "15291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15297": {
      "op": "SHL"
    },
    "15298": {
      "op": "SUB"
    },
    "15299": {
      "op": "DUP4"
    },
    "15300": {
      "op": "AND"
    },
    "15301": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "15303": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "7"
    },
    "15304": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "15305": {
      "op": "MSTORE"
    },
    "15306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15308": {
      "op": "DUP2"
    },
    "15309": {
      "op": "ADD"
    },
    "15310": {
      "op": "DUP3"
    },
    "15311": {
      "op": "SWAP1"
    },
    "15312": {
      "op": "MSTORE"
    },
    "15313": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29C1"
    },
    "15316": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15317": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "7"
    },
    "15318": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15319": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "15324": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15326": {
      "op": "SHL"
    },
    "15327": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15330": {
      "op": "ADD"
    },
    "15331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x37A5"
    },
    "15334": {
      "op": "JUMP"
    },
    "15335": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24147,
        24273
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15342": {
      "op": "SHL"
    },
    "15343": {
      "op": "SUB"
    },
    "15344": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24218,
        24236
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 128
    },
    "15345": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24218,
        24236
      ],
      "op": "AND",
      "path": "15"
    },
    "15346": {
      "branch": 186,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24218,
        24236
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "15347": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26CC"
    },
    "15350": {
      "branch": 186,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "15351": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "15353": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15360": {
      "op": "SHL"
    },
    "15361": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "DUP2",
      "path": "15"
    },
    "15362": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "15363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15365": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "15367": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15368": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "ADD",
      "path": "15"
    },
    "15369": {
      "op": "MSTORE"
    },
    "15370": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "15372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15374": {
      "op": "DUP3"
    },
    "15375": {
      "op": "ADD"
    },
    "15376": {
      "op": "MSTORE"
    },
    "15377": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000"
    },
    "15410": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15412": {
      "op": "DUP3"
    },
    "15413": {
      "op": "ADD"
    },
    "15414": {
      "op": "MSTORE"
    },
    "15415": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15417": {
      "op": "ADD"
    },
    "15418": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        24210,
        24266
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "15421": {
      "op": "JUMP"
    },
    "15422": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26866,
        27065
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15423": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26959,
        26972
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 129,
      "value": "0xE0"
    },
    "15425": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26959,
        26972
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15426": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26959,
        26972
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "15427": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26959,
        26972
      ],
      "op": "SHR",
      "path": "15"
    },
    "15428": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C86"
    },
    "15431": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "15432": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "15434": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15435": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15439": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15441": {
      "op": "SHL"
    },
    "15442": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "DUP2",
      "path": "15"
    },
    "15443": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "15444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15446": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "15448": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15449": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "ADD",
      "path": "15"
    },
    "15450": {
      "op": "MSTORE"
    },
    "15451": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "15453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15455": {
      "op": "DUP3"
    },
    "15456": {
      "op": "ADD"
    },
    "15457": {
      "op": "MSTORE"
    },
    "15458": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207072696365"
    },
    "15479": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15481": {
      "op": "SHL"
    },
    "15482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15484": {
      "op": "DUP3"
    },
    "15485": {
      "op": "ADD"
    },
    "15486": {
      "op": "MSTORE"
    },
    "15487": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15489": {
      "op": "ADD"
    },
    "15490": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "15493": {
      "op": "JUMP"
    },
    "15494": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26951,
        27001
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "15495": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27028,
        27033
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 130,
      "value": "0x2710"
    },
    "15498": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27019,
        27024
      ],
      "op": "DUP2",
      "path": "15"
    },
    "15499": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27019,
        27033
      ],
      "op": "LT",
      "path": "15"
    },
    "15500": {
      "branch": 187,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27019,
        27033
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "15501": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD72"
    },
    "15504": {
      "branch": 187,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "15505": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "15507": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "15508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15514": {
      "op": "SHL"
    },
    "15515": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "DUP2",
      "path": "15"
    },
    "15516": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15519": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "15521": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "DUP3",
      "path": "15"
    },
    "15522": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "ADD",
      "path": "15"
    },
    "15523": {
      "op": "MSTORE"
    },
    "15524": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "15526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15528": {
      "op": "DUP3"
    },
    "15529": {
      "op": "ADD"
    },
    "15530": {
      "op": "MSTORE"
    },
    "15531": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207363616C65"
    },
    "15552": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15554": {
      "op": "SHL"
    },
    "15555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15557": {
      "op": "DUP3"
    },
    "15558": {
      "op": "ADD"
    },
    "15559": {
      "op": "MSTORE"
    },
    "15560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15562": {
      "op": "ADD"
    },
    "15563": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        27011,
        27058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "15566": {
      "op": "JUMP"
    },
    "15567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "15568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D24"
    },
    "15573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "7"
    },
    "15574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "15576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "15577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "15580": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "15581": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "15583": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15584": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15585": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "15587": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "15588": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15589": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "15591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "15592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "15625": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "15626": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15627": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "7"
    },
    "15628": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "7"
    },
    "15629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15635": {
      "op": "SHL"
    },
    "15636": {
      "op": "SUB"
    },
    "15637": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "7"
    },
    "15638": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DA1"
    },
    "15641": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15642": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "15643": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "15644": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15645": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "15650": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "7"
    },
    "15651": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "7"
    },
    "15652": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "15653": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15654": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "15655": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15656": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "15657": {
      "op": "POP"
    },
    "15658": {
      "branch": 191,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "15659": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29C1"
    },
    "15662": {
      "branch": 191,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "15663": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 131
    },
    "15664": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15665": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "15667": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "15668": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15669": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "15670": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "15671": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "15672": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15673": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D42"
    },
    "15676": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "15677": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15678": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4848"
    },
    "15681": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "7"
    },
    "15682": {
      "branch": 192,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "15683": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29C1"
    },
    "15686": {
      "branch": 192,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "15687": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "15689": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "15690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15696": {
      "op": "SHL"
    },
    "15697": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "15698": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15701": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "15703": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "7"
    },
    "15704": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "7"
    },
    "15705": {
      "op": "MSTORE"
    },
    "15706": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "15708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15710": {
      "op": "DUP3"
    },
    "15711": {
      "op": "ADD"
    },
    "15712": {
      "op": "MSTORE"
    },
    "15713": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "15746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15748": {
      "op": "DUP3"
    },
    "15749": {
      "op": "ADD"
    },
    "15750": {
      "op": "MSTORE"
    },
    "15751": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "15762": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "15764": {
      "op": "SHL"
    },
    "15765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15767": {
      "op": "DUP3"
    },
    "15768": {
      "op": "ADD"
    },
    "15769": {
      "op": "MSTORE"
    },
    "15770": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15772": {
      "op": "ADD"
    },
    "15773": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x429"
    },
    "15776": {
      "op": "JUMP"
    },
    "15777": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15778": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15780": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 132,
      "value": "0x3DB0"
    },
    "15783": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15784": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15785": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15787": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "11"
    },
    "15788": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3DBA"
    },
    "15791": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15792": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15793": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "15794": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "11"
    },
    "15795": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15796": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "15797": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "15798": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "15799": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "15800": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "15801": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15805": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 133
    },
    "15806": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "15807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "11"
    },
    "15808": {
      "branch": 188,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "15809": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E1B"
    },
    "15812": {
      "branch": 188,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15816": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15820": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15822": {
      "op": "SHL"
    },
    "15823": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15827": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "15829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "11"
    },
    "15831": {
      "op": "MSTORE"
    },
    "15832": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "15834": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15836": {
      "op": "DUP3"
    },
    "15837": {
      "op": "ADD"
    },
    "15838": {
      "op": "MSTORE"
    },
    "15839": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "15872": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15874": {
      "op": "DUP3"
    },
    "15875": {
      "op": "ADD"
    },
    "15876": {
      "op": "MSTORE"
    },
    "15877": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "15884": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "15886": {
      "op": "SHL"
    },
    "15887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15889": {
      "op": "DUP3"
    },
    "15890": {
      "op": "ADD"
    },
    "15891": {
      "op": "MSTORE"
    },
    "15892": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15894": {
      "op": "ADD"
    },
    "15895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "15898": {
      "op": "JUMP"
    },
    "15899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15900": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15901": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "15902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 134,
      "value": "0x3E69"
    },
    "15905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15915": {
      "op": "SHL"
    },
    "15916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "15922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "11"
    },
    "15924": {
      "op": "MSTORE"
    },
    "15925": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "15927": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15929": {
      "op": "DUP3"
    },
    "15930": {
      "op": "ADD"
    },
    "15931": {
      "op": "MSTORE"
    },
    "15932": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "15965": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15967": {
      "op": "DUP3"
    },
    "15968": {
      "op": "ADD"
    },
    "15969": {
      "op": "MSTORE"
    },
    "15970": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15972": {
      "op": "ADD"
    },
    "15973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "15976": {
      "op": "JUMP"
    },
    "15977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "11"
    },
    "15982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15988": {
      "op": "SHL"
    },
    "15989": {
      "op": "SUB"
    },
    "15990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "11"
    },
    "15991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "11"
    },
    "15992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "11"
    },
    "15993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E85"
    },
    "15999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x491B"
    },
    "16004": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "16010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "16011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "11"
    },
    "16012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "11"
    },
    "16013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "11"
    },
    "16014": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "11"
    },
    "16016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "11"
    },
    "16017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "11"
    },
    "16018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "11"
    },
    "16019": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "16020": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16021": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16022": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "16024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "11"
    },
    "16025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "11"
    },
    "16029": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EC2"
    },
    "16032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "16033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "16035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "16036": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "16040": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "11"
    },
    "16041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "16043": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "16044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "16045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "11"
    },
    "16046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "16048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "16050": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "16052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "16055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16057": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "16059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "16061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "16062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EC7"
    },
    "16065": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "16069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16071": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "16077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 135,
      "value": "0x3ED7"
    },
    "16080": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "11"
    },
    "16083": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EE2"
    },
    "16086": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "16089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "16090": {
      "op": "POP"
    },
    "16091": {
      "op": "POP"
    },
    "16092": {
      "op": "POP"
    },
    "16093": {
      "op": "POP"
    },
    "16094": {
      "op": "POP"
    },
    "16095": {
      "op": "POP"
    },
    "16096": {
      "op": "POP"
    },
    "16097": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16098": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16099": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "16101": {
      "branch": 189,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "11"
    },
    "16102": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "16103": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EF1"
    },
    "16106": {
      "branch": 189,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "16107": {
      "op": "POP"
    },
    "16108": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 136
    },
    "16109": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3DB3"
    },
    "16112": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16113": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16114": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16115": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "16116": {
      "branch": 190,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "16117": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F01"
    },
    "16120": {
      "branch": 190,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "16121": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "11"
    },
    "16122": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "16123": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "16124": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16125": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "16127": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "11"
    },
    "16128": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16129": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16130": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 137
    },
    "16131": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "16133": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "16134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16140": {
      "op": "SHL"
    },
    "16141": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16142": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "16143": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "16145": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "11"
    },
    "16146": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "16149": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "16150": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16151": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x49CA"
    },
    "16154": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16155": {
      "op": "JUMPDEST"
    },
    "16156": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16158": {
      "op": "MLOAD"
    },
    "16159": {
      "op": "DUP1"
    },
    "16160": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "16163": {
      "op": "ADD"
    },
    "16164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16166": {
      "op": "MSTORE"
    },
    "16167": {
      "op": "DUP1"
    },
    "16168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16170": {
      "op": "DUP2"
    },
    "16171": {
      "op": "MSTORE"
    },
    "16172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16174": {
      "op": "ADD"
    },
    "16175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16177": {
      "op": "DUP2"
    },
    "16178": {
      "op": "MSTORE"
    },
    "16179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16181": {
      "op": "ADD"
    },
    "16182": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16184": {
      "op": "DUP2"
    },
    "16185": {
      "op": "MSTORE"
    },
    "16186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16188": {
      "op": "ADD"
    },
    "16189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16191": {
      "op": "DUP2"
    },
    "16192": {
      "op": "MSTORE"
    },
    "16193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16195": {
      "op": "ADD"
    },
    "16196": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16198": {
      "op": "DUP2"
    },
    "16199": {
      "op": "MSTORE"
    },
    "16200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16202": {
      "op": "ADD"
    },
    "16203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16205": {
      "op": "DUP2"
    },
    "16206": {
      "op": "MSTORE"
    },
    "16207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16209": {
      "op": "ADD"
    },
    "16210": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16212": {
      "op": "DUP2"
    },
    "16213": {
      "op": "MSTORE"
    },
    "16214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16216": {
      "op": "ADD"
    },
    "16217": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16219": {
      "op": "DUP2"
    },
    "16220": {
      "op": "MSTORE"
    },
    "16221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16223": {
      "op": "ADD"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16226": {
      "op": "DUP2"
    },
    "16227": {
      "op": "MSTORE"
    },
    "16228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16230": {
      "op": "ADD"
    },
    "16231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16233": {
      "op": "DUP2"
    },
    "16234": {
      "op": "MSTORE"
    },
    "16235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16237": {
      "op": "ADD"
    },
    "16238": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16240": {
      "op": "DUP2"
    },
    "16241": {
      "op": "MSTORE"
    },
    "16242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16244": {
      "op": "ADD"
    },
    "16245": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16247": {
      "op": "DUP2"
    },
    "16248": {
      "op": "MSTORE"
    },
    "16249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16251": {
      "op": "ADD"
    },
    "16252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16254": {
      "op": "DUP2"
    },
    "16255": {
      "op": "MSTORE"
    },
    "16256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16258": {
      "op": "ADD"
    },
    "16259": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16261": {
      "op": "DUP2"
    },
    "16262": {
      "op": "MSTORE"
    },
    "16263": {
      "op": "POP"
    },
    "16264": {
      "op": "SWAP1"
    },
    "16265": {
      "jump": "o",
      "op": "JUMP"
    },
    "16266": {
      "op": "JUMPDEST"
    },
    "16267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16269": {
      "op": "DUP3"
    },
    "16270": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16272": {
      "op": "DUP4"
    },
    "16273": {
      "op": "ADD"
    },
    "16274": {
      "op": "SLT"
    },
    "16275": {
      "op": "PUSH2",
      "value": "0x3F9B"
    },
    "16278": {
      "op": "JUMPI"
    },
    "16279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16281": {
      "op": "DUP1"
    },
    "16282": {
      "op": "REVERT"
    },
    "16283": {
      "op": "JUMPDEST"
    },
    "16284": {
      "op": "DUP2"
    },
    "16285": {
      "op": "CALLDATALOAD"
    },
    "16286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16288": {
      "op": "PUSH2",
      "value": "0x3FB0"
    },
    "16291": {
      "op": "PUSH2",
      "value": "0x3FAB"
    },
    "16294": {
      "op": "DUP4"
    },
    "16295": {
      "op": "PUSH2",
      "value": "0x4B23"
    },
    "16298": {
      "jump": "i",
      "op": "JUMP"
    },
    "16299": {
      "op": "JUMPDEST"
    },
    "16300": {
      "op": "PUSH2",
      "value": "0x4AF3"
    },
    "16303": {
      "jump": "i",
      "op": "JUMP"
    },
    "16304": {
      "op": "JUMPDEST"
    },
    "16305": {
      "op": "DUP1"
    },
    "16306": {
      "op": "DUP4"
    },
    "16307": {
      "op": "DUP3"
    },
    "16308": {
      "op": "MSTORE"
    },
    "16309": {
      "op": "DUP3"
    },
    "16310": {
      "op": "DUP3"
    },
    "16311": {
      "op": "ADD"
    },
    "16312": {
      "op": "SWAP2"
    },
    "16313": {
      "op": "POP"
    },
    "16314": {
      "op": "DUP3"
    },
    "16315": {
      "op": "DUP7"
    },
    "16316": {
      "op": "ADD"
    },
    "16317": {
      "op": "DUP8"
    },
    "16318": {
      "op": "DUP5"
    },
    "16319": {
      "op": "DUP7"
    },
    "16320": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16322": {
      "op": "SHL"
    },
    "16323": {
      "op": "DUP10"
    },
    "16324": {
      "op": "ADD"
    },
    "16325": {
      "op": "ADD"
    },
    "16326": {
      "op": "GT"
    },
    "16327": {
      "op": "ISZERO"
    },
    "16328": {
      "op": "PUSH2",
      "value": "0x3FD0"
    },
    "16331": {
      "op": "JUMPI"
    },
    "16332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16334": {
      "op": "DUP1"
    },
    "16335": {
      "op": "REVERT"
    },
    "16336": {
      "op": "JUMPDEST"
    },
    "16337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16339": {
      "op": "JUMPDEST"
    },
    "16340": {
      "op": "DUP6"
    },
    "16341": {
      "op": "DUP2"
    },
    "16342": {
      "op": "LT"
    },
    "16343": {
      "op": "ISZERO"
    },
    "16344": {
      "op": "PUSH2",
      "value": "0x3FF8"
    },
    "16347": {
      "op": "JUMPI"
    },
    "16348": {
      "op": "DUP2"
    },
    "16349": {
      "op": "CALLDATALOAD"
    },
    "16350": {
      "op": "PUSH2",
      "value": "0x3FE6"
    },
    "16353": {
      "op": "DUP2"
    },
    "16354": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "16357": {
      "jump": "i",
      "op": "JUMP"
    },
    "16358": {
      "op": "JUMPDEST"
    },
    "16359": {
      "op": "DUP5"
    },
    "16360": {
      "op": "MSTORE"
    },
    "16361": {
      "op": "SWAP3"
    },
    "16362": {
      "op": "DUP5"
    },
    "16363": {
      "op": "ADD"
    },
    "16364": {
      "op": "SWAP3"
    },
    "16365": {
      "op": "SWAP1"
    },
    "16366": {
      "op": "DUP5"
    },
    "16367": {
      "op": "ADD"
    },
    "16368": {
      "op": "SWAP1"
    },
    "16369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16371": {
      "op": "ADD"
    },
    "16372": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16375": {
      "op": "JUMP"
    },
    "16376": {
      "op": "JUMPDEST"
    },
    "16377": {
      "op": "POP"
    },
    "16378": {
      "op": "SWAP1"
    },
    "16379": {
      "op": "SWAP8"
    },
    "16380": {
      "op": "SWAP7"
    },
    "16381": {
      "op": "POP"
    },
    "16382": {
      "op": "POP"
    },
    "16383": {
      "op": "POP"
    },
    "16384": {
      "op": "POP"
    },
    "16385": {
      "op": "POP"
    },
    "16386": {
      "op": "POP"
    },
    "16387": {
      "op": "POP"
    },
    "16388": {
      "jump": "o",
      "op": "JUMP"
    },
    "16389": {
      "op": "JUMPDEST"
    },
    "16390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16392": {
      "op": "DUP3"
    },
    "16393": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16395": {
      "op": "DUP4"
    },
    "16396": {
      "op": "ADD"
    },
    "16397": {
      "op": "SLT"
    },
    "16398": {
      "op": "PUSH2",
      "value": "0x4016"
    },
    "16401": {
      "op": "JUMPI"
    },
    "16402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16404": {
      "op": "DUP1"
    },
    "16405": {
      "op": "REVERT"
    },
    "16406": {
      "op": "JUMPDEST"
    },
    "16407": {
      "op": "DUP2"
    },
    "16408": {
      "op": "CALLDATALOAD"
    },
    "16409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16411": {
      "op": "PUSH2",
      "value": "0x4026"
    },
    "16414": {
      "op": "PUSH2",
      "value": "0x3FAB"
    },
    "16417": {
      "op": "DUP4"
    },
    "16418": {
      "op": "PUSH2",
      "value": "0x4B23"
    },
    "16421": {
      "jump": "i",
      "op": "JUMP"
    },
    "16422": {
      "op": "JUMPDEST"
    },
    "16423": {
      "op": "DUP1"
    },
    "16424": {
      "op": "DUP4"
    },
    "16425": {
      "op": "DUP3"
    },
    "16426": {
      "op": "MSTORE"
    },
    "16427": {
      "op": "DUP3"
    },
    "16428": {
      "op": "DUP3"
    },
    "16429": {
      "op": "ADD"
    },
    "16430": {
      "op": "SWAP2"
    },
    "16431": {
      "op": "POP"
    },
    "16432": {
      "op": "DUP3"
    },
    "16433": {
      "op": "DUP7"
    },
    "16434": {
      "op": "ADD"
    },
    "16435": {
      "op": "DUP8"
    },
    "16436": {
      "op": "DUP5"
    },
    "16437": {
      "op": "DUP7"
    },
    "16438": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16440": {
      "op": "SHL"
    },
    "16441": {
      "op": "DUP10"
    },
    "16442": {
      "op": "ADD"
    },
    "16443": {
      "op": "ADD"
    },
    "16444": {
      "op": "GT"
    },
    "16445": {
      "op": "ISZERO"
    },
    "16446": {
      "op": "PUSH2",
      "value": "0x4046"
    },
    "16449": {
      "op": "JUMPI"
    },
    "16450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16452": {
      "op": "DUP1"
    },
    "16453": {
      "op": "REVERT"
    },
    "16454": {
      "op": "JUMPDEST"
    },
    "16455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16457": {
      "op": "JUMPDEST"
    },
    "16458": {
      "op": "DUP6"
    },
    "16459": {
      "op": "DUP2"
    },
    "16460": {
      "op": "LT"
    },
    "16461": {
      "op": "ISZERO"
    },
    "16462": {
      "op": "PUSH2",
      "value": "0x3FF8"
    },
    "16465": {
      "op": "JUMPI"
    },
    "16466": {
      "op": "DUP2"
    },
    "16467": {
      "op": "CALLDATALOAD"
    },
    "16468": {
      "op": "PUSH2",
      "value": "0x405C"
    },
    "16471": {
      "op": "DUP2"
    },
    "16472": {
      "op": "PUSH2",
      "value": "0x4D9E"
    },
    "16475": {
      "jump": "i",
      "op": "JUMP"
    },
    "16476": {
      "op": "JUMPDEST"
    },
    "16477": {
      "op": "DUP5"
    },
    "16478": {
      "op": "MSTORE"
    },
    "16479": {
      "op": "SWAP3"
    },
    "16480": {
      "op": "DUP5"
    },
    "16481": {
      "op": "ADD"
    },
    "16482": {
      "op": "SWAP3"
    },
    "16483": {
      "op": "SWAP1"
    },
    "16484": {
      "op": "DUP5"
    },
    "16485": {
      "op": "ADD"
    },
    "16486": {
      "op": "SWAP1"
    },
    "16487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16489": {
      "op": "ADD"
    },
    "16490": {
      "op": "PUSH2",
      "value": "0x4049"
    },
    "16493": {
      "op": "JUMP"
    },
    "16494": {
      "op": "JUMPDEST"
    },
    "16495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16497": {
      "op": "DUP3"
    },
    "16498": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16500": {
      "op": "DUP4"
    },
    "16501": {
      "op": "ADD"
    },
    "16502": {
      "op": "SLT"
    },
    "16503": {
      "op": "PUSH2",
      "value": "0x407F"
    },
    "16506": {
      "op": "JUMPI"
    },
    "16507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16509": {
      "op": "DUP1"
    },
    "16510": {
      "op": "REVERT"
    },
    "16511": {
      "op": "JUMPDEST"
    },
    "16512": {
      "op": "DUP2"
    },
    "16513": {
      "op": "CALLDATALOAD"
    },
    "16514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16516": {
      "op": "PUSH2",
      "value": "0x408F"
    },
    "16519": {
      "op": "PUSH2",
      "value": "0x3FAB"
    },
    "16522": {
      "op": "DUP4"
    },
    "16523": {
      "op": "PUSH2",
      "value": "0x4B23"
    },
    "16526": {
      "jump": "i",
      "op": "JUMP"
    },
    "16527": {
      "op": "JUMPDEST"
    },
    "16528": {
      "op": "DUP1"
    },
    "16529": {
      "op": "DUP4"
    },
    "16530": {
      "op": "DUP3"
    },
    "16531": {
      "op": "MSTORE"
    },
    "16532": {
      "op": "DUP3"
    },
    "16533": {
      "op": "DUP3"
    },
    "16534": {
      "op": "ADD"
    },
    "16535": {
      "op": "SWAP2"
    },
    "16536": {
      "op": "POP"
    },
    "16537": {
      "op": "DUP3"
    },
    "16538": {
      "op": "DUP7"
    },
    "16539": {
      "op": "ADD"
    },
    "16540": {
      "op": "DUP8"
    },
    "16541": {
      "op": "DUP5"
    },
    "16542": {
      "op": "DUP7"
    },
    "16543": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16545": {
      "op": "SHL"
    },
    "16546": {
      "op": "DUP10"
    },
    "16547": {
      "op": "ADD"
    },
    "16548": {
      "op": "ADD"
    },
    "16549": {
      "op": "GT"
    },
    "16550": {
      "op": "ISZERO"
    },
    "16551": {
      "op": "PUSH2",
      "value": "0x40AF"
    },
    "16554": {
      "op": "JUMPI"
    },
    "16555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16557": {
      "op": "DUP1"
    },
    "16558": {
      "op": "REVERT"
    },
    "16559": {
      "op": "JUMPDEST"
    },
    "16560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16562": {
      "op": "JUMPDEST"
    },
    "16563": {
      "op": "DUP6"
    },
    "16564": {
      "op": "DUP2"
    },
    "16565": {
      "op": "LT"
    },
    "16566": {
      "op": "ISZERO"
    },
    "16567": {
      "op": "PUSH2",
      "value": "0x3FF8"
    },
    "16570": {
      "op": "JUMPI"
    },
    "16571": {
      "op": "PUSH2",
      "value": "0x40C3"
    },
    "16574": {
      "op": "DUP3"
    },
    "16575": {
      "op": "PUSH2",
      "value": "0x4219"
    },
    "16578": {
      "jump": "i",
      "op": "JUMP"
    },
    "16579": {
      "op": "JUMPDEST"
    },
    "16580": {
      "op": "DUP5"
    },
    "16581": {
      "op": "MSTORE"
    },
    "16582": {
      "op": "SWAP3"
    },
    "16583": {
      "op": "DUP5"
    },
    "16584": {
      "op": "ADD"
    },
    "16585": {
      "op": "SWAP3"
    },
    "16586": {
      "op": "SWAP1"
    },
    "16587": {
      "op": "DUP5"
    },
    "16588": {
      "op": "ADD"
    },
    "16589": {
      "op": "SWAP1"
    },
    "16590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16592": {
      "op": "ADD"
    },
    "16593": {
      "op": "PUSH2",
      "value": "0x40B2"
    },
    "16596": {
      "op": "JUMP"
    },
    "16597": {
      "op": "JUMPDEST"
    },
    "16598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16600": {
      "op": "DUP3"
    },
    "16601": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16603": {
      "op": "DUP4"
    },
    "16604": {
      "op": "ADD"
    },
    "16605": {
      "op": "SLT"
    },
    "16606": {
      "op": "PUSH2",
      "value": "0x40E6"
    },
    "16609": {
      "op": "JUMPI"
    },
    "16610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16612": {
      "op": "DUP1"
    },
    "16613": {
      "op": "REVERT"
    },
    "16614": {
      "op": "JUMPDEST"
    },
    "16615": {
      "op": "DUP2"
    },
    "16616": {
      "op": "CALLDATALOAD"
    },
    "16617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16619": {
      "op": "PUSH2",
      "value": "0x40F6"
    },
    "16622": {
      "op": "PUSH2",
      "value": "0x3FAB"
    },
    "16625": {
      "op": "DUP4"
    },
    "16626": {
      "op": "PUSH2",
      "value": "0x4B23"
    },
    "16629": {
      "jump": "i",
      "op": "JUMP"
    },
    "16630": {
      "op": "JUMPDEST"
    },
    "16631": {
      "op": "DUP1"
    },
    "16632": {
      "op": "DUP4"
    },
    "16633": {
      "op": "DUP3"
    },
    "16634": {
      "op": "MSTORE"
    },
    "16635": {
      "op": "DUP3"
    },
    "16636": {
      "op": "DUP3"
    },
    "16637": {
      "op": "ADD"
    },
    "16638": {
      "op": "SWAP2"
    },
    "16639": {
      "op": "POP"
    },
    "16640": {
      "op": "DUP3"
    },
    "16641": {
      "op": "DUP7"
    },
    "16642": {
      "op": "ADD"
    },
    "16643": {
      "op": "DUP8"
    },
    "16644": {
      "op": "DUP5"
    },
    "16645": {
      "op": "DUP7"
    },
    "16646": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16648": {
      "op": "SHL"
    },
    "16649": {
      "op": "DUP10"
    },
    "16650": {
      "op": "ADD"
    },
    "16651": {
      "op": "ADD"
    },
    "16652": {
      "op": "GT"
    },
    "16653": {
      "op": "ISZERO"
    },
    "16654": {
      "op": "PUSH2",
      "value": "0x4116"
    },
    "16657": {
      "op": "JUMPI"
    },
    "16658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16660": {
      "op": "DUP1"
    },
    "16661": {
      "op": "REVERT"
    },
    "16662": {
      "op": "JUMPDEST"
    },
    "16663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16665": {
      "op": "DUP1"
    },
    "16666": {
      "op": "JUMPDEST"
    },
    "16667": {
      "op": "DUP7"
    },
    "16668": {
      "op": "DUP2"
    },
    "16669": {
      "op": "LT"
    },
    "16670": {
      "op": "ISZERO"
    },
    "16671": {
      "op": "PUSH2",
      "value": "0x4142"
    },
    "16674": {
      "op": "JUMPI"
    },
    "16675": {
      "op": "DUP3"
    },
    "16676": {
      "op": "CALLDATALOAD"
    },
    "16677": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16679": {
      "op": "DUP2"
    },
    "16680": {
      "op": "LT"
    },
    "16681": {
      "op": "PUSH2",
      "value": "0x4130"
    },
    "16684": {
      "op": "JUMPI"
    },
    "16685": {
      "op": "DUP3"
    },
    "16686": {
      "op": "DUP4"
    },
    "16687": {
      "op": "REVERT"
    },
    "16688": {
      "op": "JUMPDEST"
    },
    "16689": {
      "op": "DUP6"
    },
    "16690": {
      "op": "MSTORE"
    },
    "16691": {
      "op": "SWAP4"
    },
    "16692": {
      "op": "DUP6"
    },
    "16693": {
      "op": "ADD"
    },
    "16694": {
      "op": "SWAP4"
    },
    "16695": {
      "op": "SWAP2"
    },
    "16696": {
      "op": "DUP6"
    },
    "16697": {
      "op": "ADD"
    },
    "16698": {
      "op": "SWAP2"
    },
    "16699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16701": {
      "op": "ADD"
    },
    "16702": {
      "op": "PUSH2",
      "value": "0x411A"
    },
    "16705": {
      "op": "JUMP"
    },
    "16706": {
      "op": "JUMPDEST"
    },
    "16707": {
      "op": "POP"
    },
    "16708": {
      "op": "SWAP2"
    },
    "16709": {
      "op": "SWAP9"
    },
    "16710": {
      "op": "SWAP8"
    },
    "16711": {
      "op": "POP"
    },
    "16712": {
      "op": "POP"
    },
    "16713": {
      "op": "POP"
    },
    "16714": {
      "op": "POP"
    },
    "16715": {
      "op": "POP"
    },
    "16716": {
      "op": "POP"
    },
    "16717": {
      "op": "POP"
    },
    "16718": {
      "op": "POP"
    },
    "16719": {
      "jump": "o",
      "op": "JUMP"
    },
    "16720": {
      "op": "JUMPDEST"
    },
    "16721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16723": {
      "op": "DUP3"
    },
    "16724": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16726": {
      "op": "DUP4"
    },
    "16727": {
      "op": "ADD"
    },
    "16728": {
      "op": "SLT"
    },
    "16729": {
      "op": "PUSH2",
      "value": "0x4161"
    },
    "16732": {
      "op": "JUMPI"
    },
    "16733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16735": {
      "op": "DUP1"
    },
    "16736": {
      "op": "REVERT"
    },
    "16737": {
      "op": "JUMPDEST"
    },
    "16738": {
      "op": "DUP2"
    },
    "16739": {
      "op": "CALLDATALOAD"
    },
    "16740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16742": {
      "op": "PUSH2",
      "value": "0x4171"
    },
    "16745": {
      "op": "PUSH2",
      "value": "0x3FAB"
    },
    "16748": {
      "op": "DUP4"
    },
    "16749": {
      "op": "PUSH2",
      "value": "0x4B23"
    },
    "16752": {
      "jump": "i",
      "op": "JUMP"
    },
    "16753": {
      "op": "JUMPDEST"
    },
    "16754": {
      "op": "DUP1"
    },
    "16755": {
      "op": "DUP4"
    },
    "16756": {
      "op": "DUP3"
    },
    "16757": {
      "op": "MSTORE"
    },
    "16758": {
      "op": "DUP3"
    },
    "16759": {
      "op": "DUP3"
    },
    "16760": {
      "op": "ADD"
    },
    "16761": {
      "op": "SWAP2"
    },
    "16762": {
      "op": "POP"
    },
    "16763": {
      "op": "DUP3"
    },
    "16764": {
      "op": "DUP7"
    },
    "16765": {
      "op": "ADD"
    },
    "16766": {
      "op": "DUP8"
    },
    "16767": {
      "op": "DUP5"
    },
    "16768": {
      "op": "DUP7"
    },
    "16769": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16771": {
      "op": "SHL"
    },
    "16772": {
      "op": "DUP10"
    },
    "16773": {
      "op": "ADD"
    },
    "16774": {
      "op": "ADD"
    },
    "16775": {
      "op": "GT"
    },
    "16776": {
      "op": "ISZERO"
    },
    "16777": {
      "op": "PUSH2",
      "value": "0x4191"
    },
    "16780": {
      "op": "JUMPI"
    },
    "16781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16783": {
      "op": "DUP1"
    },
    "16784": {
      "op": "REVERT"
    },
    "16785": {
      "op": "JUMPDEST"
    },
    "16786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16788": {
      "op": "JUMPDEST"
    },
    "16789": {
      "op": "DUP6"
    },
    "16790": {
      "op": "DUP2"
    },
    "16791": {
      "op": "LT"
    },
    "16792": {
      "op": "ISZERO"
    },
    "16793": {
      "op": "PUSH2",
      "value": "0x3FF8"
    },
    "16796": {
      "op": "JUMPI"
    },
    "16797": {
      "op": "DUP2"
    },
    "16798": {
      "op": "CALLDATALOAD"
    },
    "16799": {
      "op": "DUP5"
    },
    "16800": {
      "op": "MSTORE"
    },
    "16801": {
      "op": "SWAP3"
    },
    "16802": {
      "op": "DUP5"
    },
    "16803": {
      "op": "ADD"
    },
    "16804": {
      "op": "SWAP3"
    },
    "16805": {
      "op": "SWAP1"
    },
    "16806": {
      "op": "DUP5"
    },
    "16807": {
      "op": "ADD"
    },
    "16808": {
      "op": "SWAP1"
    },
    "16809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16811": {
      "op": "ADD"
    },
    "16812": {
      "op": "PUSH2",
      "value": "0x4194"
    },
    "16815": {
      "op": "JUMP"
    },
    "16816": {
      "op": "JUMPDEST"
    },
    "16817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16819": {
      "op": "DUP3"
    },
    "16820": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16822": {
      "op": "DUP4"
    },
    "16823": {
      "op": "ADD"
    },
    "16824": {
      "op": "SLT"
    },
    "16825": {
      "op": "PUSH2",
      "value": "0x41C1"
    },
    "16828": {
      "op": "JUMPI"
    },
    "16829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16831": {
      "op": "DUP1"
    },
    "16832": {
      "op": "REVERT"
    },
    "16833": {
      "op": "JUMPDEST"
    },
    "16834": {
      "op": "DUP2"
    },
    "16835": {
      "op": "CALLDATALOAD"
    },
    "16836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16838": {
      "op": "PUSH2",
      "value": "0x41D1"
    },
    "16841": {
      "op": "PUSH2",
      "value": "0x3FAB"
    },
    "16844": {
      "op": "DUP4"
    },
    "16845": {
      "op": "PUSH2",
      "value": "0x4B23"
    },
    "16848": {
      "jump": "i",
      "op": "JUMP"
    },
    "16849": {
      "op": "JUMPDEST"
    },
    "16850": {
      "op": "DUP1"
    },
    "16851": {
      "op": "DUP4"
    },
    "16852": {
      "op": "DUP3"
    },
    "16853": {
      "op": "MSTORE"
    },
    "16854": {
      "op": "DUP3"
    },
    "16855": {
      "op": "DUP3"
    },
    "16856": {
      "op": "ADD"
    },
    "16857": {
      "op": "SWAP2"
    },
    "16858": {
      "op": "POP"
    },
    "16859": {
      "op": "DUP3"
    },
    "16860": {
      "op": "DUP7"
    },
    "16861": {
      "op": "ADD"
    },
    "16862": {
      "op": "DUP8"
    },
    "16863": {
      "op": "DUP5"
    },
    "16864": {
      "op": "DUP7"
    },
    "16865": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16867": {
      "op": "SHL"
    },
    "16868": {
      "op": "DUP10"
    },
    "16869": {
      "op": "ADD"
    },
    "16870": {
      "op": "ADD"
    },
    "16871": {
      "op": "GT"
    },
    "16872": {
      "op": "ISZERO"
    },
    "16873": {
      "op": "PUSH2",
      "value": "0x41F1"
    },
    "16876": {
      "op": "JUMPI"
    },
    "16877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16879": {
      "op": "DUP1"
    },
    "16880": {
      "op": "REVERT"
    },
    "16881": {
      "op": "JUMPDEST"
    },
    "16882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16884": {
      "op": "JUMPDEST"
    },
    "16885": {
      "op": "DUP6"
    },
    "16886": {
      "op": "DUP2"
    },
    "16887": {
      "op": "LT"
    },
    "16888": {
      "op": "ISZERO"
    },
    "16889": {
      "op": "PUSH2",
      "value": "0x3FF8"
    },
    "16892": {
      "op": "JUMPI"
    },
    "16893": {
      "op": "DUP2"
    },
    "16894": {
      "op": "CALLDATALOAD"
    },
    "16895": {
      "op": "PUSH2",
      "value": "0x4207"
    },
    "16898": {
      "op": "DUP2"
    },
    "16899": {
      "op": "PUSH2",
      "value": "0x4DAC"
    },
    "16902": {
      "jump": "i",
      "op": "JUMP"
    },
    "16903": {
      "op": "JUMPDEST"
    },
    "16904": {
      "op": "DUP5"
    },
    "16905": {
      "op": "MSTORE"
    },
    "16906": {
      "op": "SWAP3"
    },
    "16907": {
      "op": "DUP5"
    },
    "16908": {
      "op": "ADD"
    },
    "16909": {
      "op": "SWAP3"
    },
    "16910": {
      "op": "SWAP1"
    },
    "16911": {
      "op": "DUP5"
    },
    "16912": {
      "op": "ADD"
    },
    "16913": {
      "op": "SWAP1"
    },
    "16914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16916": {
      "op": "ADD"
    },
    "16917": {
      "op": "PUSH2",
      "value": "0x41F4"
    },
    "16920": {
      "op": "JUMP"
    },
    "16921": {
      "op": "JUMPDEST"
    },
    "16922": {
      "op": "DUP1"
    },
    "16923": {
      "op": "CALLDATALOAD"
    },
    "16924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16930": {
      "op": "SHL"
    },
    "16931": {
      "op": "SUB"
    },
    "16932": {
      "op": "NOT"
    },
    "16933": {
      "op": "DUP2"
    },
    "16934": {
      "op": "AND"
    },
    "16935": {
      "op": "DUP2"
    },
    "16936": {
      "op": "EQ"
    },
    "16937": {
      "op": "PUSH2",
      "value": "0x4231"
    },
    "16940": {
      "op": "JUMPI"
    },
    "16941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16943": {
      "op": "DUP1"
    },
    "16944": {
      "op": "REVERT"
    },
    "16945": {
      "op": "JUMPDEST"
    },
    "16946": {
      "op": "SWAP2"
    },
    "16947": {
      "op": "SWAP1"
    },
    "16948": {
      "op": "POP"
    },
    "16949": {
      "jump": "o",
      "op": "JUMP"
    },
    "16950": {
      "op": "JUMPDEST"
    },
    "16951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16953": {
      "op": "DUP3"
    },
    "16954": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16956": {
      "op": "DUP4"
    },
    "16957": {
      "op": "ADD"
    },
    "16958": {
      "op": "SLT"
    },
    "16959": {
      "op": "PUSH2",
      "value": "0x4247"
    },
    "16962": {
      "op": "JUMPI"
    },
    "16963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16965": {
      "op": "DUP1"
    },
    "16966": {
      "op": "REVERT"
    },
    "16967": {
      "op": "JUMPDEST"
    },
    "16968": {
      "op": "DUP2"
    },
    "16969": {
      "op": "CALLDATALOAD"
    },
    "16970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16974": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16976": {
      "op": "SHL"
    },
    "16977": {
      "op": "SUB"
    },
    "16978": {
      "op": "DUP2"
    },
    "16979": {
      "op": "GT"
    },
    "16980": {
      "op": "ISZERO"
    },
    "16981": {
      "op": "PUSH2",
      "value": "0x4260"
    },
    "16984": {
      "op": "JUMPI"
    },
    "16985": {
      "op": "PUSH2",
      "value": "0x4260"
    },
    "16988": {
      "op": "PUSH2",
      "value": "0x4D73"
    },
    "16991": {
      "jump": "i",
      "op": "JUMP"
    },
    "16992": {
      "op": "JUMPDEST"
    },
    "16993": {
      "op": "PUSH2",
      "value": "0x4273"
    },
    "16996": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16998": {
      "op": "DUP3"
    },
    "16999": {
      "op": "ADD"
    },
    "17000": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17002": {
      "op": "NOT"
    },
    "17003": {
      "op": "AND"
    },
    "17004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17006": {
      "op": "ADD"
    },
    "17007": {
      "op": "PUSH2",
      "value": "0x4AF3"
    },
    "17010": {
      "jump": "i",
      "op": "JUMP"
    },
    "17011": {
      "op": "JUMPDEST"
    },
    "17012": {
      "op": "DUP2"
    },
    "17013": {
      "op": "DUP2"
    },
    "17014": {
      "op": "MSTORE"
    },
    "17015": {
      "op": "DUP5"
    },
    "17016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17018": {
      "op": "DUP4"
    },
    "17019": {
      "op": "DUP7"
    },
    "17020": {
      "op": "ADD"
    },
    "17021": {
      "op": "ADD"
    },
    "17022": {
      "op": "GT"
    },
    "17023": {
      "op": "ISZERO"
    },
    "17024": {
      "op": "PUSH2",
      "value": "0x4288"
    },
    "17027": {
      "op": "JUMPI"
    },
    "17028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17030": {
      "op": "DUP1"
    },
    "17031": {
      "op": "REVERT"
    },
    "17032": {
      "op": "JUMPDEST"
    },
    "17033": {
      "op": "DUP2"
    },
    "17034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17036": {
      "op": "DUP6"
    },
    "17037": {
      "op": "ADD"
    },
    "17038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17040": {
      "op": "DUP4"
    },
    "17041": {
      "op": "ADD"
    },
    "17042": {
      "op": "CALLDATACOPY"
    },
    "17043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17045": {
      "op": "SWAP2"
    },
    "17046": {
      "op": "DUP2"
    },
    "17047": {
      "op": "ADD"
    },
    "17048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17050": {
      "op": "ADD"
    },
    "17051": {
      "op": "SWAP2"
    },
    "17052": {
      "op": "SWAP1"
    },
    "17053": {
      "op": "SWAP2"
    },
    "17054": {
      "op": "MSTORE"
    },
    "17055": {
      "op": "SWAP4"
    },
    "17056": {
      "op": "SWAP3"
    },
    "17057": {
      "op": "POP"
    },
    "17058": {
      "op": "POP"
    },
    "17059": {
      "op": "POP"
    },
    "17060": {
      "jump": "o",
      "op": "JUMP"
    },
    "17061": {
      "op": "JUMPDEST"
    },
    "17062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17066": {
      "op": "DUP3"
    },
    "17067": {
      "op": "DUP5"
    },
    "17068": {
      "op": "SUB"
    },
    "17069": {
      "op": "SLT"
    },
    "17070": {
      "op": "ISZERO"
    },
    "17071": {
      "op": "PUSH2",
      "value": "0x42B7"
    },
    "17074": {
      "op": "JUMPI"
    },
    "17075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17077": {
      "op": "DUP1"
    },
    "17078": {
      "op": "REVERT"
    },
    "17079": {
      "op": "JUMPDEST"
    },
    "17080": {
      "op": "DUP2"
    },
    "17081": {
      "op": "MLOAD"
    },
    "17082": {
      "op": "PUSH2",
      "value": "0x3DB3"
    },
    "17085": {
      "op": "DUP2"
    },
    "17086": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17089": {
      "jump": "i",
      "op": "JUMP"
    },
    "17090": {
      "op": "JUMPDEST"
    },
    "17091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17095": {
      "op": "DUP3"
    },
    "17096": {
      "op": "DUP5"
    },
    "17097": {
      "op": "SUB"
    },
    "17098": {
      "op": "SLT"
    },
    "17099": {
      "op": "ISZERO"
    },
    "17100": {
      "op": "PUSH2",
      "value": "0x42D4"
    },
    "17103": {
      "op": "JUMPI"
    },
    "17104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17106": {
      "op": "DUP1"
    },
    "17107": {
      "op": "REVERT"
    },
    "17108": {
      "op": "JUMPDEST"
    },
    "17109": {
      "op": "DUP2"
    },
    "17110": {
      "op": "CALLDATALOAD"
    },
    "17111": {
      "op": "PUSH2",
      "value": "0x3DB3"
    },
    "17114": {
      "op": "DUP2"
    },
    "17115": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17118": {
      "jump": "i",
      "op": "JUMP"
    },
    "17119": {
      "op": "JUMPDEST"
    },
    "17120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17122": {
      "op": "DUP1"
    },
    "17123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17125": {
      "op": "DUP1"
    },
    "17126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17130": {
      "op": "DUP7"
    },
    "17131": {
      "op": "DUP9"
    },
    "17132": {
      "op": "SUB"
    },
    "17133": {
      "op": "SLT"
    },
    "17134": {
      "op": "ISZERO"
    },
    "17135": {
      "op": "PUSH2",
      "value": "0x42F7"
    },
    "17138": {
      "op": "JUMPI"
    },
    "17139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17141": {
      "op": "DUP1"
    },
    "17142": {
      "op": "REVERT"
    },
    "17143": {
      "op": "JUMPDEST"
    },
    "17144": {
      "op": "DUP6"
    },
    "17145": {
      "op": "CALLDATALOAD"
    },
    "17146": {
      "op": "PUSH2",
      "value": "0x4302"
    },
    "17149": {
      "op": "DUP2"
    },
    "17150": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17153": {
      "jump": "i",
      "op": "JUMP"
    },
    "17154": {
      "op": "JUMPDEST"
    },
    "17155": {
      "op": "SWAP5"
    },
    "17156": {
      "op": "POP"
    },
    "17157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17159": {
      "op": "DUP7"
    },
    "17160": {
      "op": "ADD"
    },
    "17161": {
      "op": "CALLDATALOAD"
    },
    "17162": {
      "op": "PUSH2",
      "value": "0x4312"
    },
    "17165": {
      "op": "DUP2"
    },
    "17166": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17169": {
      "jump": "i",
      "op": "JUMP"
    },
    "17170": {
      "op": "JUMPDEST"
    },
    "17171": {
      "op": "SWAP4"
    },
    "17172": {
      "op": "POP"
    },
    "17173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17175": {
      "op": "DUP7"
    },
    "17176": {
      "op": "ADD"
    },
    "17177": {
      "op": "CALLDATALOAD"
    },
    "17178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17184": {
      "op": "SHL"
    },
    "17185": {
      "op": "SUB"
    },
    "17186": {
      "op": "DUP1"
    },
    "17187": {
      "op": "DUP3"
    },
    "17188": {
      "op": "GT"
    },
    "17189": {
      "op": "ISZERO"
    },
    "17190": {
      "op": "PUSH2",
      "value": "0x432E"
    },
    "17193": {
      "op": "JUMPI"
    },
    "17194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17196": {
      "op": "DUP1"
    },
    "17197": {
      "op": "REVERT"
    },
    "17198": {
      "op": "JUMPDEST"
    },
    "17199": {
      "op": "PUSH2",
      "value": "0x433A"
    },
    "17202": {
      "op": "DUP10"
    },
    "17203": {
      "op": "DUP4"
    },
    "17204": {
      "op": "DUP11"
    },
    "17205": {
      "op": "ADD"
    },
    "17206": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "17209": {
      "jump": "i",
      "op": "JUMP"
    },
    "17210": {
      "op": "JUMPDEST"
    },
    "17211": {
      "op": "SWAP5"
    },
    "17212": {
      "op": "POP"
    },
    "17213": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17215": {
      "op": "DUP9"
    },
    "17216": {
      "op": "ADD"
    },
    "17217": {
      "op": "CALLDATALOAD"
    },
    "17218": {
      "op": "SWAP2"
    },
    "17219": {
      "op": "POP"
    },
    "17220": {
      "op": "DUP1"
    },
    "17221": {
      "op": "DUP3"
    },
    "17222": {
      "op": "GT"
    },
    "17223": {
      "op": "ISZERO"
    },
    "17224": {
      "op": "PUSH2",
      "value": "0x4350"
    },
    "17227": {
      "op": "JUMPI"
    },
    "17228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17230": {
      "op": "DUP1"
    },
    "17231": {
      "op": "REVERT"
    },
    "17232": {
      "op": "JUMPDEST"
    },
    "17233": {
      "op": "PUSH2",
      "value": "0x435C"
    },
    "17236": {
      "op": "DUP10"
    },
    "17237": {
      "op": "DUP4"
    },
    "17238": {
      "op": "DUP11"
    },
    "17239": {
      "op": "ADD"
    },
    "17240": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "17243": {
      "jump": "i",
      "op": "JUMP"
    },
    "17244": {
      "op": "JUMPDEST"
    },
    "17245": {
      "op": "SWAP4"
    },
    "17246": {
      "op": "POP"
    },
    "17247": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17249": {
      "op": "DUP9"
    },
    "17250": {
      "op": "ADD"
    },
    "17251": {
      "op": "CALLDATALOAD"
    },
    "17252": {
      "op": "SWAP2"
    },
    "17253": {
      "op": "POP"
    },
    "17254": {
      "op": "DUP1"
    },
    "17255": {
      "op": "DUP3"
    },
    "17256": {
      "op": "GT"
    },
    "17257": {
      "op": "ISZERO"
    },
    "17258": {
      "op": "PUSH2",
      "value": "0x4372"
    },
    "17261": {
      "op": "JUMPI"
    },
    "17262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17264": {
      "op": "DUP1"
    },
    "17265": {
      "op": "REVERT"
    },
    "17266": {
      "op": "JUMPDEST"
    },
    "17267": {
      "op": "POP"
    },
    "17268": {
      "op": "PUSH2",
      "value": "0x437F"
    },
    "17271": {
      "op": "DUP9"
    },
    "17272": {
      "op": "DUP3"
    },
    "17273": {
      "op": "DUP10"
    },
    "17274": {
      "op": "ADD"
    },
    "17275": {
      "op": "PUSH2",
      "value": "0x4236"
    },
    "17278": {
      "jump": "i",
      "op": "JUMP"
    },
    "17279": {
      "op": "JUMPDEST"
    },
    "17280": {
      "op": "SWAP2"
    },
    "17281": {
      "op": "POP"
    },
    "17282": {
      "op": "POP"
    },
    "17283": {
      "op": "SWAP3"
    },
    "17284": {
      "op": "SWAP6"
    },
    "17285": {
      "op": "POP"
    },
    "17286": {
      "op": "SWAP3"
    },
    "17287": {
      "op": "SWAP6"
    },
    "17288": {
      "op": "SWAP1"
    },
    "17289": {
      "op": "SWAP4"
    },
    "17290": {
      "op": "POP"
    },
    "17291": {
      "jump": "o",
      "op": "JUMP"
    },
    "17292": {
      "op": "JUMPDEST"
    },
    "17293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17295": {
      "op": "DUP1"
    },
    "17296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17298": {
      "op": "DUP1"
    },
    "17299": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17301": {
      "op": "DUP6"
    },
    "17302": {
      "op": "DUP8"
    },
    "17303": {
      "op": "SUB"
    },
    "17304": {
      "op": "SLT"
    },
    "17305": {
      "op": "ISZERO"
    },
    "17306": {
      "op": "PUSH2",
      "value": "0x43A2"
    },
    "17309": {
      "op": "JUMPI"
    },
    "17310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17312": {
      "op": "DUP1"
    },
    "17313": {
      "op": "REVERT"
    },
    "17314": {
      "op": "JUMPDEST"
    },
    "17315": {
      "op": "DUP5"
    },
    "17316": {
      "op": "CALLDATALOAD"
    },
    "17317": {
      "op": "PUSH2",
      "value": "0x43AD"
    },
    "17320": {
      "op": "DUP2"
    },
    "17321": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17324": {
      "jump": "i",
      "op": "JUMP"
    },
    "17325": {
      "op": "JUMPDEST"
    },
    "17326": {
      "op": "SWAP4"
    },
    "17327": {
      "op": "POP"
    },
    "17328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17330": {
      "op": "DUP6"
    },
    "17331": {
      "op": "ADD"
    },
    "17332": {
      "op": "CALLDATALOAD"
    },
    "17333": {
      "op": "PUSH2",
      "value": "0x43BD"
    },
    "17336": {
      "op": "DUP2"
    },
    "17337": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17340": {
      "jump": "i",
      "op": "JUMP"
    },
    "17341": {
      "op": "JUMPDEST"
    },
    "17342": {
      "op": "SWAP3"
    },
    "17343": {
      "op": "POP"
    },
    "17344": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17346": {
      "op": "DUP6"
    },
    "17347": {
      "op": "ADD"
    },
    "17348": {
      "op": "CALLDATALOAD"
    },
    "17349": {
      "op": "SWAP2"
    },
    "17350": {
      "op": "POP"
    },
    "17351": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17353": {
      "op": "DUP6"
    },
    "17354": {
      "op": "ADD"
    },
    "17355": {
      "op": "CALLDATALOAD"
    },
    "17356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17360": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17362": {
      "op": "SHL"
    },
    "17363": {
      "op": "SUB"
    },
    "17364": {
      "op": "DUP2"
    },
    "17365": {
      "op": "GT"
    },
    "17366": {
      "op": "ISZERO"
    },
    "17367": {
      "op": "PUSH2",
      "value": "0x43DF"
    },
    "17370": {
      "op": "JUMPI"
    },
    "17371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17373": {
      "op": "DUP1"
    },
    "17374": {
      "op": "REVERT"
    },
    "17375": {
      "op": "JUMPDEST"
    },
    "17376": {
      "op": "PUSH2",
      "value": "0x43EB"
    },
    "17379": {
      "op": "DUP8"
    },
    "17380": {
      "op": "DUP3"
    },
    "17381": {
      "op": "DUP9"
    },
    "17382": {
      "op": "ADD"
    },
    "17383": {
      "op": "PUSH2",
      "value": "0x4236"
    },
    "17386": {
      "jump": "i",
      "op": "JUMP"
    },
    "17387": {
      "op": "JUMPDEST"
    },
    "17388": {
      "op": "SWAP2"
    },
    "17389": {
      "op": "POP"
    },
    "17390": {
      "op": "POP"
    },
    "17391": {
      "op": "SWAP3"
    },
    "17392": {
      "op": "SWAP6"
    },
    "17393": {
      "op": "SWAP2"
    },
    "17394": {
      "op": "SWAP5"
    },
    "17395": {
      "op": "POP"
    },
    "17396": {
      "op": "SWAP3"
    },
    "17397": {
      "op": "POP"
    },
    "17398": {
      "jump": "o",
      "op": "JUMP"
    },
    "17399": {
      "op": "JUMPDEST"
    },
    "17400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17402": {
      "op": "DUP1"
    },
    "17403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17405": {
      "op": "DUP1"
    },
    "17406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17410": {
      "op": "DUP7"
    },
    "17411": {
      "op": "DUP9"
    },
    "17412": {
      "op": "SUB"
    },
    "17413": {
      "op": "SLT"
    },
    "17414": {
      "op": "ISZERO"
    },
    "17415": {
      "op": "PUSH2",
      "value": "0x440F"
    },
    "17418": {
      "op": "JUMPI"
    },
    "17419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17421": {
      "op": "DUP1"
    },
    "17422": {
      "op": "REVERT"
    },
    "17423": {
      "op": "JUMPDEST"
    },
    "17424": {
      "op": "DUP6"
    },
    "17425": {
      "op": "CALLDATALOAD"
    },
    "17426": {
      "op": "PUSH2",
      "value": "0x441A"
    },
    "17429": {
      "op": "DUP2"
    },
    "17430": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17433": {
      "jump": "i",
      "op": "JUMP"
    },
    "17434": {
      "op": "JUMPDEST"
    },
    "17435": {
      "op": "SWAP5"
    },
    "17436": {
      "op": "POP"
    },
    "17437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17439": {
      "op": "DUP7"
    },
    "17440": {
      "op": "ADD"
    },
    "17441": {
      "op": "CALLDATALOAD"
    },
    "17442": {
      "op": "PUSH2",
      "value": "0x442A"
    },
    "17445": {
      "op": "DUP2"
    },
    "17446": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17449": {
      "jump": "i",
      "op": "JUMP"
    },
    "17450": {
      "op": "JUMPDEST"
    },
    "17451": {
      "op": "SWAP4"
    },
    "17452": {
      "op": "POP"
    },
    "17453": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17455": {
      "op": "DUP7"
    },
    "17456": {
      "op": "ADD"
    },
    "17457": {
      "op": "CALLDATALOAD"
    },
    "17458": {
      "op": "SWAP3"
    },
    "17459": {
      "op": "POP"
    },
    "17460": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17462": {
      "op": "DUP7"
    },
    "17463": {
      "op": "ADD"
    },
    "17464": {
      "op": "CALLDATALOAD"
    },
    "17465": {
      "op": "SWAP2"
    },
    "17466": {
      "op": "POP"
    },
    "17467": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17469": {
      "op": "DUP7"
    },
    "17470": {
      "op": "ADD"
    },
    "17471": {
      "op": "CALLDATALOAD"
    },
    "17472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17478": {
      "op": "SHL"
    },
    "17479": {
      "op": "SUB"
    },
    "17480": {
      "op": "DUP2"
    },
    "17481": {
      "op": "GT"
    },
    "17482": {
      "op": "ISZERO"
    },
    "17483": {
      "op": "PUSH2",
      "value": "0x4453"
    },
    "17486": {
      "op": "JUMPI"
    },
    "17487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17489": {
      "op": "DUP1"
    },
    "17490": {
      "op": "REVERT"
    },
    "17491": {
      "op": "JUMPDEST"
    },
    "17492": {
      "op": "PUSH2",
      "value": "0x437F"
    },
    "17495": {
      "op": "DUP9"
    },
    "17496": {
      "op": "DUP3"
    },
    "17497": {
      "op": "DUP10"
    },
    "17498": {
      "op": "ADD"
    },
    "17499": {
      "op": "PUSH2",
      "value": "0x4236"
    },
    "17502": {
      "jump": "i",
      "op": "JUMP"
    },
    "17503": {
      "op": "JUMPDEST"
    },
    "17504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17506": {
      "op": "DUP1"
    },
    "17507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17509": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17511": {
      "op": "DUP5"
    },
    "17512": {
      "op": "DUP7"
    },
    "17513": {
      "op": "SUB"
    },
    "17514": {
      "op": "SLT"
    },
    "17515": {
      "op": "ISZERO"
    },
    "17516": {
      "op": "PUSH2",
      "value": "0x4474"
    },
    "17519": {
      "op": "JUMPI"
    },
    "17520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17522": {
      "op": "DUP1"
    },
    "17523": {
      "op": "REVERT"
    },
    "17524": {
      "op": "JUMPDEST"
    },
    "17525": {
      "op": "DUP4"
    },
    "17526": {
      "op": "CALLDATALOAD"
    },
    "17527": {
      "op": "PUSH2",
      "value": "0x447F"
    },
    "17530": {
      "op": "DUP2"
    },
    "17531": {
      "op": "PUSH2",
      "value": "0x4D89"
    },
    "17534": {
      "jump": "i",
      "op": "JUMP"
    },
    "17535": {
      "op": "JUMPDEST"
    },
    "17536": {
      "op": "SWAP6"
    },
    "17537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17539": {
      "op": "DUP6"
    },
    "17540": {
      "op": "ADD"
    },
    "17541": {
      "op": "CALLDATALOAD"
    },
    "17542": {
      "op": "SWAP6"
    },
    "17543": {
      "op": "POP"
    },
    "17544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17546": {
      "op": "SWAP1"
    },
    "17547": {
      "op": "SWAP5"
    },
    "17548": {
      "op": "ADD"
    },
    "17549": {
      "op": "CALLDATALOAD"
    },
    "17550": {
      "op": "SWAP4"
    },
    "17551": {
      "op": "SWAP3"
    },
    "17552": {
      "op": "POP"
    },
    "17553": {
      "op": "POP"
    },
    "17554": {
      "op": "POP"
    },
    "17555": {
      "jump": "o",
      "op": "JUMP"
    },
    "17556": {
      "op": "JUMPDEST"
    },
    "17557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17559": {
      "op": "DUP1"
    },
    "17560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17562": {
      "op": "DUP1"
    },
    "17563": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17565": {
      "op": "DUP6"
    },
    "17566": {
      "op": "DUP8"
    },
    "17567": {
      "op": "SUB"
    },
    "17568": {
      "op": "SLT"
    },
    "17569": {
      "op": "ISZERO"
    },
    "17570": {
      "op": "PUSH2",
      "value": "0x44AA"
    },
    "17573": {
      "op": "JUMPI"
    },
    "17574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17576": {
      "op": "DUP1"
    },
    "17577": {
      "op": "REVERT"
    },
    "17578": {
      "op": "JUMPDEST"
    },
    "17579": {
      "op": "DUP5"
    },
    "17580": {
      "op": "CALLDATALOAD"
    },
    "17581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17585": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17587": {
      "op": "SHL"
    },
    "17588": {
      "op": "SUB"
    },
    "17589": {
      "op": "DUP1"
    },
    "17590": {
      "op": "DUP3"
    },
    "17591": {
      "op": "GT"
    },
    "17592": {
      "op": "ISZERO"
    },
    "17593": {
      "op": "PUSH2",
      "value": "0x44C1"
    },
    "17596": {
      "op": "JUMPI"
    },
    "17597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17599": {
      "op": "DUP1"
    },
    "17600": {
      "op": "REVERT"
    },
    "17601": {
      "op": "JUMPDEST"
    },
    "17602": {
      "op": "PUSH2",
      "value": "0x44CD"
    },
    "17605": {
      "op": "DUP9"
    },
    "17606": {
      "op": "DUP4"
    },
    "17607": {
      "op": "DUP10"
    },
    "17608": {
      "op": "ADD"
    },
    "17609": {
      "op": "PUSH2",
      "value": "0x40D5"
    },
    "17612": {
      "jump": "i",
      "op": "JUMP"
    },
    "17613": {
      "op": "JUMPDEST"
    },
    "17614": {
      "op": "SWAP6"
    },
    "17615": {
      "op": "POP"
    },
    "17616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17618": {
      "op": "DUP8"
    },
    "17619": {
      "op": "ADD"
    },
    "17620": {
      "op": "CALLDATALOAD"
    },
    "17621": {
      "op": "SWAP2"
    },
    "17622": {
      "op": "POP"
    },
    "17623": {
      "op": "DUP1"
    },
    "17624": {
      "op": "DUP3"
    },
    "17625": {
      "op": "GT"
    },
    "17626": {
      "op": "ISZERO"
    },
    "17627": {
      "op": "PUSH2",
      "value": "0x44E3"
    },
    "17630": {
      "op": "JUMPI"
    },
    "17631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17633": {
      "op": "DUP1"
    },
    "17634": {
      "op": "REVERT"
    },
    "17635": {
      "op": "JUMPDEST"
    },
    "17636": {
      "op": "PUSH2",
      "value": "0x44EF"
    },
    "17639": {
      "op": "DUP9"
    },
    "17640": {
      "op": "DUP4"
    },
    "17641": {
      "op": "DUP10"
    },
    "17642": {
      "op": "ADD"
    },
    "17643": {
      "op": "PUSH2",
      "value": "0x3F8A"
    },
    "17646": {
      "jump": "i",
      "op": "JUMP"
    },
    "17647": {
      "op": "JUMPDEST"
    },
    "17648": {
      "op": "SWAP5"
    },
    "17649": {
      "op": "POP"
    },
    "17650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17652": {
      "op": "DUP8"
    },
    "17653": {
      "op": "ADD"
    },
    "17654": {
      "op": "CALLDATALOAD"
    },
    "17655": {
      "op": "SWAP2"
    },
    "17656": {
      "op": "POP"
    },
    "17657": {
      "op": "DUP1"
    },
    "17658": {
      "op": "DUP3"
    },
    "17659": {
      "op": "GT"
    },
    "17660": {
      "op": "ISZERO"
    },
    "17661": {
      "op": "PUSH2",
      "value": "0x4505"
    },
    "17664": {
      "op": "JUMPI"
    },
    "17665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17667": {
      "op": "DUP1"
    },
    "17668": {
      "op": "REVERT"
    },
    "17669": {
      "op": "JUMPDEST"
    },
    "17670": {
      "op": "PUSH2",
      "value": "0x4511"
    },
    "17673": {
      "op": "DUP9"
    },
    "17674": {
      "op": "DUP4"
    },
    "17675": {
      "op": "DUP10"
    },
    "17676": {
      "op": "ADD"
    },
    "17677": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "17680": {
      "jump": "i",
      "op": "JUMP"
    },
    "17681": {
      "op": "JUMPDEST"
    },
    "17682": {
      "op": "SWAP4"
    },
    "17683": {
      "op": "POP"
    },
    "17684": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17686": {
      "op": "DUP8"
    },
    "17687": {
      "op": "ADD"
    },
    "17688": {
      "op": "CALLDATALOAD"
    },
    "17689": {
      "op": "SWAP2"
    },
    "17690": {
      "op": "POP"
    },
    "17691": {
      "op": "DUP1"
    },
    "17692": {
      "op": "DUP3"
    },
    "17693": {
      "op": "GT"
    },
    "17694": {
      "op": "ISZERO"
    },
    "17695": {
      "op": "PUSH2",
      "value": "0x4527"
    },
    "17698": {
      "op": "JUMPI"
    },
    "17699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17701": {
      "op": "DUP1"
    },
    "17702": {
      "op": "REVERT"
    },
    "17703": {
      "op": "JUMPDEST"
    },
    "17704": {
      "op": "POP"
    },
    "17705": {
      "op": "PUSH2",
      "value": "0x43EB"
    },
    "17708": {
      "op": "DUP8"
    },
    "17709": {
      "op": "DUP3"
    },
    "17710": {
      "op": "DUP9"
    },
    "17711": {
      "op": "ADD"
    },
    "17712": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "17715": {
      "jump": "i",
      "op": "JUMP"
    },
    "17716": {
      "op": "JUMPDEST"
    },
    "17717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17719": {
      "op": "DUP1"
    },
    "17720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17722": {
      "op": "DUP1"
    },
    "17723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17727": {
      "op": "DUP7"
    },
    "17728": {
      "op": "DUP9"
    },
    "17729": {
      "op": "SUB"
    },
    "17730": {
      "op": "SLT"
    },
    "17731": {
      "op": "ISZERO"
    },
    "17732": {
      "op": "PUSH2",
      "value": "0x454C"
    },
    "17735": {
      "op": "JUMPI"
    },
    "17736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17738": {
      "op": "DUP1"
    },
    "17739": {
      "op": "REVERT"
    },
    "17740": {
      "op": "JUMPDEST"
    },
    "17741": {
      "op": "DUP6"
    },
    "17742": {
      "op": "CALLDATALOAD"
    },
    "17743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17749": {
      "op": "SHL"
    },
    "17750": {
      "op": "SUB"
    },
    "17751": {
      "op": "DUP1"
    },
    "17752": {
      "op": "DUP3"
    },
    "17753": {
      "op": "GT"
    },
    "17754": {
      "op": "ISZERO"
    },
    "17755": {
      "op": "PUSH2",
      "value": "0x4563"
    },
    "17758": {
      "op": "JUMPI"
    },
    "17759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17761": {
      "op": "DUP1"
    },
    "17762": {
      "op": "REVERT"
    },
    "17763": {
      "op": "JUMPDEST"
    },
    "17764": {
      "op": "PUSH2",
      "value": "0x456F"
    },
    "17767": {
      "op": "DUP10"
    },
    "17768": {
      "op": "DUP4"
    },
    "17769": {
      "op": "DUP11"
    },
    "17770": {
      "op": "ADD"
    },
    "17771": {
      "op": "PUSH2",
      "value": "0x40D5"
    },
    "17774": {
      "jump": "i",
      "op": "JUMP"
    },
    "17775": {
      "op": "JUMPDEST"
    },
    "17776": {
      "op": "SWAP7"
    },
    "17777": {
      "op": "POP"
    },
    "17778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17780": {
      "op": "DUP9"
    },
    "17781": {
      "op": "ADD"
    },
    "17782": {
      "op": "CALLDATALOAD"
    },
    "17783": {
      "op": "SWAP2"
    },
    "17784": {
      "op": "POP"
    },
    "17785": {
      "op": "DUP1"
    },
    "17786": {
      "op": "DUP3"
    },
    "17787": {
      "op": "GT"
    },
    "17788": {
      "op": "ISZERO"
    },
    "17789": {
      "op": "PUSH2",
      "value": "0x4585"
    },
    "17792": {
      "op": "JUMPI"
    },
    "17793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17795": {
      "op": "DUP1"
    },
    "17796": {
      "op": "REVERT"
    },
    "17797": {
      "op": "JUMPDEST"
    },
    "17798": {
      "op": "PUSH2",
      "value": "0x4591"
    },
    "17801": {
      "op": "DUP10"
    },
    "17802": {
      "op": "DUP4"
    },
    "17803": {
      "op": "DUP11"
    },
    "17804": {
      "op": "ADD"
    },
    "17805": {
      "op": "PUSH2",
      "value": "0x3F8A"
    },
    "17808": {
      "jump": "i",
      "op": "JUMP"
    },
    "17809": {
      "op": "JUMPDEST"
    },
    "17810": {
      "op": "SWAP6"
    },
    "17811": {
      "op": "POP"
    },
    "17812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17814": {
      "op": "DUP9"
    },
    "17815": {
      "op": "ADD"
    },
    "17816": {
      "op": "CALLDATALOAD"
    },
    "17817": {
      "op": "SWAP2"
    },
    "17818": {
      "op": "POP"
    },
    "17819": {
      "op": "DUP1"
    },
    "17820": {
      "op": "DUP3"
    },
    "17821": {
      "op": "GT"
    },
    "17822": {
      "op": "ISZERO"
    },
    "17823": {
      "op": "PUSH2",
      "value": "0x45A7"
    },
    "17826": {
      "op": "JUMPI"
    },
    "17827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17829": {
      "op": "DUP1"
    },
    "17830": {
      "op": "REVERT"
    },
    "17831": {
      "op": "JUMPDEST"
    },
    "17832": {
      "op": "PUSH2",
      "value": "0x45B3"
    },
    "17835": {
      "op": "DUP10"
    },
    "17836": {
      "op": "DUP4"
    },
    "17837": {
      "op": "DUP11"
    },
    "17838": {
      "op": "ADD"
    },
    "17839": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "17842": {
      "jump": "i",
      "op": "JUMP"
    },
    "17843": {
      "op": "JUMPDEST"
    },
    "17844": {
      "op": "SWAP5"
    },
    "17845": {
      "op": "POP"
    },
    "17846": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17848": {
      "op": "DUP9"
    },
    "17849": {
      "op": "ADD"
    },
    "17850": {
      "op": "CALLDATALOAD"
    },
    "17851": {
      "op": "SWAP2"
    },
    "17852": {
      "op": "POP"
    },
    "17853": {
      "op": "DUP1"
    },
    "17854": {
      "op": "DUP3"
    },
    "17855": {
      "op": "GT"
    },
    "17856": {
      "op": "ISZERO"
    },
    "17857": {
      "op": "PUSH2",
      "value": "0x45C9"
    },
    "17860": {
      "op": "JUMPI"
    },
    "17861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17863": {
      "op": "DUP1"
    },
    "17864": {
      "op": "REVERT"
    },
    "17865": {
      "op": "JUMPDEST"
    },
    "17866": {
      "op": "PUSH2",
      "value": "0x45D5"
    },
    "17869": {
      "op": "DUP10"
    },
    "17870": {
      "op": "DUP4"
    },
    "17871": {
      "op": "DUP11"
    },
    "17872": {
      "op": "ADD"
    },
    "17873": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "17876": {
      "jump": "i",
      "op": "JUMP"
    },
    "17877": {
      "op": "JUMPDEST"
    },
    "17878": {
      "op": "SWAP4"
    },
    "17879": {
      "op": "POP"
    },
    "17880": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17882": {
      "op": "DUP9"
    },
    "17883": {
      "op": "ADD"
    },
    "17884": {
      "op": "CALLDATALOAD"
    },
    "17885": {
      "op": "SWAP2"
    },
    "17886": {
      "op": "POP"
    },
    "17887": {
      "op": "DUP1"
    },
    "17888": {
      "op": "DUP3"
    },
    "17889": {
      "op": "GT"
    },
    "17890": {
      "op": "ISZERO"
    },
    "17891": {
      "op": "PUSH2",
      "value": "0x45EB"
    },
    "17894": {
      "op": "JUMPI"
    },
    "17895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17897": {
      "op": "DUP1"
    },
    "17898": {
      "op": "REVERT"
    },
    "17899": {
      "op": "JUMPDEST"
    },
    "17900": {
      "op": "POP"
    },
    "17901": {
      "op": "PUSH2",
      "value": "0x437F"
    },
    "17904": {
      "op": "DUP9"
    },
    "17905": {
      "op": "DUP3"
    },
    "17906": {
      "op": "DUP10"
    },
    "17907": {
      "op": "ADD"
    },
    "17908": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "17911": {
      "jump": "i",
      "op": "JUMP"
    },
    "17912": {
      "op": "JUMPDEST"
    },
    "17913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17915": {
      "op": "DUP1"
    },
    "17916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17918": {
      "op": "DUP1"
    },
    "17919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17921": {
      "op": "DUP1"
    },
    "17922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17924": {
      "op": "DUP1"
    },
    "17925": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17928": {
      "op": "DUP10"
    },
    "17929": {
      "op": "DUP12"
    },
    "17930": {
      "op": "SUB"
    },
    "17931": {
      "op": "SLT"
    },
    "17932": {
      "op": "ISZERO"
    },
    "17933": {
      "op": "PUSH2",
      "value": "0x4615"
    },
    "17936": {
      "op": "JUMPI"
    },
    "17937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17939": {
      "op": "DUP1"
    },
    "17940": {
      "op": "REVERT"
    },
    "17941": {
      "op": "JUMPDEST"
    },
    "17942": {
      "op": "DUP9"
    },
    "17943": {
      "op": "CALLDATALOAD"
    },
    "17944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17950": {
      "op": "SHL"
    },
    "17951": {
      "op": "SUB"
    },
    "17952": {
      "op": "DUP1"
    },
    "17953": {
      "op": "DUP3"
    },
    "17954": {
      "op": "GT"
    },
    "17955": {
      "op": "ISZERO"
    },
    "17956": {
      "op": "PUSH2",
      "value": "0x462C"
    },
    "17959": {
      "op": "JUMPI"
    },
    "17960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17962": {
      "op": "DUP1"
    },
    "17963": {
      "op": "REVERT"
    },
    "17964": {
      "op": "JUMPDEST"
    },
    "17965": {
      "op": "PUSH2",
      "value": "0x4638"
    },
    "17968": {
      "op": "DUP13"
    },
    "17969": {
      "op": "DUP4"
    },
    "17970": {
      "op": "DUP14"
    },
    "17971": {
      "op": "ADD"
    },
    "17972": {
      "op": "PUSH2",
      "value": "0x40D5"
    },
    "17975": {
      "jump": "i",
      "op": "JUMP"
    },
    "17976": {
      "op": "JUMPDEST"
    },
    "17977": {
      "op": "SWAP10"
    },
    "17978": {
      "op": "POP"
    },
    "17979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17981": {
      "op": "DUP12"
    },
    "17982": {
      "op": "ADD"
    },
    "17983": {
      "op": "CALLDATALOAD"
    },
    "17984": {
      "op": "SWAP2"
    },
    "17985": {
      "op": "POP"
    },
    "17986": {
      "op": "DUP1"
    },
    "17987": {
      "op": "DUP3"
    },
    "17988": {
      "op": "GT"
    },
    "17989": {
      "op": "ISZERO"
    },
    "17990": {
      "op": "PUSH2",
      "value": "0x464E"
    },
    "17993": {
      "op": "JUMPI"
    },
    "17994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17996": {
      "op": "DUP1"
    },
    "17997": {
      "op": "REVERT"
    },
    "17998": {
      "op": "JUMPDEST"
    },
    "17999": {
      "op": "PUSH2",
      "value": "0x465A"
    },
    "18002": {
      "op": "DUP13"
    },
    "18003": {
      "op": "DUP4"
    },
    "18004": {
      "op": "DUP14"
    },
    "18005": {
      "op": "ADD"
    },
    "18006": {
      "op": "PUSH2",
      "value": "0x3F8A"
    },
    "18009": {
      "jump": "i",
      "op": "JUMP"
    },
    "18010": {
      "op": "JUMPDEST"
    },
    "18011": {
      "op": "SWAP9"
    },
    "18012": {
      "op": "POP"
    },
    "18013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18015": {
      "op": "DUP12"
    },
    "18016": {
      "op": "ADD"
    },
    "18017": {
      "op": "CALLDATALOAD"
    },
    "18018": {
      "op": "SWAP2"
    },
    "18019": {
      "op": "POP"
    },
    "18020": {
      "op": "DUP1"
    },
    "18021": {
      "op": "DUP3"
    },
    "18022": {
      "op": "GT"
    },
    "18023": {
      "op": "ISZERO"
    },
    "18024": {
      "op": "PUSH2",
      "value": "0x4670"
    },
    "18027": {
      "op": "JUMPI"
    },
    "18028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18030": {
      "op": "DUP1"
    },
    "18031": {
      "op": "REVERT"
    },
    "18032": {
      "op": "JUMPDEST"
    },
    "18033": {
      "op": "PUSH2",
      "value": "0x467C"
    },
    "18036": {
      "op": "DUP13"
    },
    "18037": {
      "op": "DUP4"
    },
    "18038": {
      "op": "DUP14"
    },
    "18039": {
      "op": "ADD"
    },
    "18040": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "18043": {
      "jump": "i",
      "op": "JUMP"
    },
    "18044": {
      "op": "JUMPDEST"
    },
    "18045": {
      "op": "SWAP8"
    },
    "18046": {
      "op": "POP"
    },
    "18047": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18049": {
      "op": "DUP12"
    },
    "18050": {
      "op": "ADD"
    },
    "18051": {
      "op": "CALLDATALOAD"
    },
    "18052": {
      "op": "SWAP2"
    },
    "18053": {
      "op": "POP"
    },
    "18054": {
      "op": "DUP1"
    },
    "18055": {
      "op": "DUP3"
    },
    "18056": {
      "op": "GT"
    },
    "18057": {
      "op": "ISZERO"
    },
    "18058": {
      "op": "PUSH2",
      "value": "0x4692"
    },
    "18061": {
      "op": "JUMPI"
    },
    "18062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18064": {
      "op": "DUP1"
    },
    "18065": {
      "op": "REVERT"
    },
    "18066": {
      "op": "JUMPDEST"
    },
    "18067": {
      "op": "PUSH2",
      "value": "0x469E"
    },
    "18070": {
      "op": "DUP13"
    },
    "18071": {
      "op": "DUP4"
    },
    "18072": {
      "op": "DUP14"
    },
    "18073": {
      "op": "ADD"
    },
    "18074": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "18077": {
      "jump": "i",
      "op": "JUMP"
    },
    "18078": {
      "op": "JUMPDEST"
    },
    "18079": {
      "op": "SWAP7"
    },
    "18080": {
      "op": "POP"
    },
    "18081": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18083": {
      "op": "DUP12"
    },
    "18084": {
      "op": "ADD"
    },
    "18085": {
      "op": "CALLDATALOAD"
    },
    "18086": {
      "op": "SWAP2"
    },
    "18087": {
      "op": "POP"
    },
    "18088": {
      "op": "DUP1"
    },
    "18089": {
      "op": "DUP3"
    },
    "18090": {
      "op": "GT"
    },
    "18091": {
      "op": "ISZERO"
    },
    "18092": {
      "op": "PUSH2",
      "value": "0x46B4"
    },
    "18095": {
      "op": "JUMPI"
    },
    "18096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18098": {
      "op": "DUP1"
    },
    "18099": {
      "op": "REVERT"
    },
    "18100": {
      "op": "JUMPDEST"
    },
    "18101": {
      "op": "PUSH2",
      "value": "0x46C0"
    },
    "18104": {
      "op": "DUP13"
    },
    "18105": {
      "op": "DUP4"
    },
    "18106": {
      "op": "DUP14"
    },
    "18107": {
      "op": "ADD"
    },
    "18108": {
      "op": "PUSH2",
      "value": "0x41B0"
    },
    "18111": {
      "jump": "i",
      "op": "JUMP"
    },
    "18112": {
      "op": "JUMPDEST"
    },
    "18113": {
      "op": "SWAP6"
    },
    "18114": {
      "op": "POP"
    },
    "18115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18117": {
      "op": "DUP12"
    },
    "18118": {
      "op": "ADD"
    },
    "18119": {
      "op": "CALLDATALOAD"
    },
    "18120": {
      "op": "SWAP2"
    },
    "18121": {
      "op": "POP"
    },
    "18122": {
      "op": "DUP1"
    },
    "18123": {
      "op": "DUP3"
    },
    "18124": {
      "op": "GT"
    },
    "18125": {
      "op": "ISZERO"
    },
    "18126": {
      "op": "PUSH2",
      "value": "0x46D6"
    },
    "18129": {
      "op": "JUMPI"
    },
    "18130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18132": {
      "op": "DUP1"
    },
    "18133": {
      "op": "REVERT"
    },
    "18134": {
      "op": "JUMPDEST"
    },
    "18135": {
      "op": "PUSH2",
      "value": "0x46E2"
    },
    "18138": {
      "op": "DUP13"
    },
    "18139": {
      "op": "DUP4"
    },
    "18140": {
      "op": "DUP14"
    },
    "18141": {
      "op": "ADD"
    },
    "18142": {
      "op": "PUSH2",
      "value": "0x406E"
    },
    "18145": {
      "jump": "i",
      "op": "JUMP"
    },
    "18146": {
      "op": "JUMPDEST"
    },
    "18147": {
      "op": "SWAP5"
    },
    "18148": {
      "op": "POP"
    },
    "18149": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "18151": {
      "op": "DUP12"
    },
    "18152": {
      "op": "ADD"
    },
    "18153": {
      "op": "CALLDATALOAD"
    },
    "18154": {
      "op": "SWAP2"
    },
    "18155": {
      "op": "POP"
    },
    "18156": {
      "op": "DUP1"
    },
    "18157": {
      "op": "DUP3"
    },
    "18158": {
      "op": "GT"
    },
    "18159": {
      "op": "ISZERO"
    },
    "18160": {
      "op": "PUSH2",
      "value": "0x46F8"
    },
    "18163": {
      "op": "JUMPI"
    },
    "18164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18166": {
      "op": "DUP1"
    },
    "18167": {
      "op": "REVERT"
    },
    "18168": {
      "op": "JUMPDEST"
    },
    "18169": {
      "op": "PUSH2",
      "value": "0x4704"
    },
    "18172": {
      "op": "DUP13"
    },
    "18173": {
      "op": "DUP4"
    },
    "18174": {
      "op": "DUP14"
    },
    "18175": {
      "op": "ADD"
    },
    "18176": {
      "op": "PUSH2",
      "value": "0x41B0"
    },
    "18179": {
      "jump": "i",
      "op": "JUMP"
    },
    "18180": {
      "op": "JUMPDEST"
    },
    "18181": {
      "op": "SWAP4"
    },
    "18182": {
      "op": "POP"
    },
    "18183": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18185": {
      "op": "DUP12"
    },
    "18186": {
      "op": "ADD"
    },
    "18187": {
      "op": "CALLDATALOAD"
    },
    "18188": {
      "op": "SWAP2"
    },
    "18189": {
      "op": "POP"
    },
    "18190": {
      "op": "DUP1"
    },
    "18191": {
      "op": "DUP3"
    },
    "18192": {
      "op": "GT"
    },
    "18193": {
      "op": "ISZERO"
    },
    "18194": {
      "op": "PUSH2",
      "value": "0x471A"
    },
    "18197": {
      "op": "JUMPI"
    },
    "18198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18200": {
      "op": "DUP1"
    },
    "18201": {
      "op": "REVERT"
    },
    "18202": {
      "op": "JUMPDEST"
    },
    "18203": {
      "op": "POP"
    },
    "18204": {
      "op": "PUSH2",
      "value": "0x4727"
    },
    "18207": {
      "op": "DUP12"
    },
    "18208": {
      "op": "DUP3"
    },
    "18209": {
      "op": "DUP13"
    },
    "18210": {
      "op": "ADD"
    },
    "18211": {
      "op": "PUSH2",
      "value": "0x4005"
    },
    "18214": {
      "jump": "i",
      "op": "JUMP"
    },
    "18215": {
      "op": "JUMPDEST"
    },
    "18216": {
      "op": "SWAP2"
    },
    "18217": {
      "op": "POP"
    },
    "18218": {
      "op": "POP"
    },
    "18219": {
      "op": "SWAP3"
    },
    "18220": {
      "op": "SWAP6"
    },
    "18221": {
      "op": "SWAP9"
    },
    "18222": {
      "op": "POP"
    },
    "18223": {
      "op": "SWAP3"
    },
    "18224": {
      "op": "SWAP6"
    },
    "18225": {
      "op": "SWAP9"
    },
    "18226": {
      "op": "SWAP1"
    },
    "18227": {
      "op": "SWAP4"
    },
    "18228": {
      "op": "SWAP7"
    },
    "18229": {
      "op": "POP"
    },
    "18230": {
      "jump": "o",
      "op": "JUMP"
    },
    "18231": {
      "op": "JUMPDEST"
    },
    "18232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18234": {
      "op": "DUP1"
    },
    "18235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18237": {
      "op": "DUP1"
    },
    "18238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18240": {
      "op": "DUP1"
    },
    "18241": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "18243": {
      "op": "DUP8"
    },
    "18244": {
      "op": "DUP10"
    },
    "18245": {
      "op": "SUB"
    },
    "18246": {
      "op": "SLT"
    },
    "18247": {
      "op": "ISZERO"
    },
    "18248": {
      "op": "PUSH2",
      "value": "0x4750"
    },
    "18251": {
      "op": "JUMPI"
    },
    "18252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18254": {
      "op": "DUP1"
    },
    "18255": {
      "op": "REVERT"
    },
    "18256": {
      "op": "JUMPDEST"
    },
    "18257": {
      "op": "DUP7"
    },
    "18258": {
      "op": "CALLDATALOAD"
    },
    "18259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18265": {
      "op": "SHL"
    },
    "18266": {
      "op": "SUB"
    },
    "18267": {
      "op": "DUP1"
    },
    "18268": {
      "op": "DUP3"
    },
    "18269": {
      "op": "GT"
    },
    "18270": {
      "op": "ISZERO"
    },
    "18271": {
      "op": "PUSH2",
      "value": "0x4767"
    },
    "18274": {
      "op": "JUMPI"
    },
    "18275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18277": {
      "op": "DUP1"
    },
    "18278": {
      "op": "REVERT"
    },
    "18279": {
      "op": "JUMPDEST"
    },
    "18280": {
      "op": "PUSH2",
      "value": "0x4773"
    },
    "18283": {
      "op": "DUP11"
    },
    "18284": {
      "op": "DUP4"
    },
    "18285": {
      "op": "DUP12"
    },
    "18286": {
      "op": "ADD"
    },
    "18287": {
      "op": "PUSH2",
      "value": "0x40D5"
    },
    "18290": {
      "jump": "i",
      "op": "JUMP"
    },
    "18291": {
      "op": "JUMPDEST"
    },
    "18292": {
      "op": "SWAP8"
    },
    "18293": {
      "op": "POP"
    },
    "18294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18296": {
      "op": "DUP10"
    },
    "18297": {
      "op": "ADD"
    },
    "18298": {
      "op": "CALLDATALOAD"
    },
    "18299": {
      "op": "SWAP2"
    },
    "18300": {
      "op": "POP"
    },
    "18301": {
      "op": "DUP1"
    },
    "18302": {
      "op": "DUP3"
    },
    "18303": {
      "op": "GT"
    },
    "18304": {
      "op": "ISZERO"
    },
    "18305": {
      "op": "PUSH2",
      "value": "0x4789"
    },
    "18308": {
      "op": "JUMPI"
    },
    "18309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18311": {
      "op": "DUP1"
    },
    "18312": {
      "op": "REVERT"
    },
    "18313": {
      "op": "JUMPDEST"
    },
    "18314": {
      "op": "PUSH2",
      "value": "0x4795"
    },
    "18317": {
      "op": "DUP11"
    },
    "18318": {
      "op": "DUP4"
    },
    "18319": {
      "op": "DUP12"
    },
    "18320": {
      "op": "ADD"
    },
    "18321": {
      "op": "PUSH2",
      "value": "0x3F8A"
    },
    "18324": {
      "jump": "i",
      "op": "JUMP"
    },
    "18325": {
      "op": "JUMPDEST"
    },
    "18326": {
      "op": "SWAP7"
    },
    "18327": {
      "op": "POP"
    },
    "18328": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18330": {
      "op": "DUP10"
    },
    "18331": {
      "op": "ADD"
    },
    "18332": {
      "op": "CALLDATALOAD"
    },
    "18333": {
      "op": "SWAP2"
    },
    "18334": {
      "op": "POP"
    },
    "18335": {
      "op": "DUP1"
    },
    "18336": {
      "op": "DUP3"
    },
    "18337": {
      "op": "GT"
    },
    "18338": {
      "op": "ISZERO"
    },
    "18339": {
      "op": "PUSH2",
      "value": "0x47AB"
    },
    "18342": {
      "op": "JUMPI"
    },
    "18343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18345": {
      "op": "DUP1"
    },
    "18346": {
      "op": "REVERT"
    },
    "18347": {
      "op": "JUMPDEST"
    },
    "18348": {
      "op": "PUSH2",
      "value": "0x47B7"
    },
    "18351": {
      "op": "DUP11"
    },
    "18352": {
      "op": "DUP4"
    },
    "18353": {
      "op": "DUP12"
    },
    "18354": {
      "op": "ADD"
    },
    "18355": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "18358": {
      "jump": "i",
      "op": "JUMP"
    },
    "18359": {
      "op": "JUMPDEST"
    },
    "18360": {
      "op": "SWAP6"
    },
    "18361": {
      "op": "POP"
    },
    "18362": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18364": {
      "op": "DUP10"
    },
    "18365": {
      "op": "ADD"
    },
    "18366": {
      "op": "CALLDATALOAD"
    },
    "18367": {
      "op": "SWAP2"
    },
    "18368": {
      "op": "POP"
    },
    "18369": {
      "op": "DUP1"
    },
    "18370": {
      "op": "DUP3"
    },
    "18371": {
      "op": "GT"
    },
    "18372": {
      "op": "ISZERO"
    },
    "18373": {
      "op": "PUSH2",
      "value": "0x47CD"
    },
    "18376": {
      "op": "JUMPI"
    },
    "18377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18379": {
      "op": "DUP1"
    },
    "18380": {
      "op": "REVERT"
    },
    "18381": {
      "op": "JUMPDEST"
    },
    "18382": {
      "op": "PUSH2",
      "value": "0x47D9"
    },
    "18385": {
      "op": "DUP11"
    },
    "18386": {
      "op": "DUP4"
    },
    "18387": {
      "op": "DUP12"
    },
    "18388": {
      "op": "ADD"
    },
    "18389": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "18392": {
      "jump": "i",
      "op": "JUMP"
    },
    "18393": {
      "op": "JUMPDEST"
    },
    "18394": {
      "op": "SWAP5"
    },
    "18395": {
      "op": "POP"
    },
    "18396": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18398": {
      "op": "DUP10"
    },
    "18399": {
      "op": "ADD"
    },
    "18400": {
      "op": "CALLDATALOAD"
    },
    "18401": {
      "op": "SWAP2"
    },
    "18402": {
      "op": "POP"
    },
    "18403": {
      "op": "DUP1"
    },
    "18404": {
      "op": "DUP3"
    },
    "18405": {
      "op": "GT"
    },
    "18406": {
      "op": "ISZERO"
    },
    "18407": {
      "op": "PUSH2",
      "value": "0x47EF"
    },
    "18410": {
      "op": "JUMPI"
    },
    "18411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18413": {
      "op": "DUP1"
    },
    "18414": {
      "op": "REVERT"
    },
    "18415": {
      "op": "JUMPDEST"
    },
    "18416": {
      "op": "PUSH2",
      "value": "0x47FB"
    },
    "18419": {
      "op": "DUP11"
    },
    "18420": {
      "op": "DUP4"
    },
    "18421": {
      "op": "DUP12"
    },
    "18422": {
      "op": "ADD"
    },
    "18423": {
      "op": "PUSH2",
      "value": "0x41B0"
    },
    "18426": {
      "jump": "i",
      "op": "JUMP"
    },
    "18427": {
      "op": "JUMPDEST"
    },
    "18428": {
      "op": "SWAP4"
    },
    "18429": {
      "op": "POP"
    },
    "18430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18432": {
      "op": "DUP10"
    },
    "18433": {
      "op": "ADD"
    },
    "18434": {
      "op": "CALLDATALOAD"
    },
    "18435": {
      "op": "SWAP2"
    },
    "18436": {
      "op": "POP"
    },
    "18437": {
      "op": "DUP1"
    },
    "18438": {
      "op": "DUP3"
    },
    "18439": {
      "op": "GT"
    },
    "18440": {
      "op": "ISZERO"
    },
    "18441": {
      "op": "PUSH2",
      "value": "0x4811"
    },
    "18444": {
      "op": "JUMPI"
    },
    "18445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18447": {
      "op": "DUP1"
    },
    "18448": {
      "op": "REVERT"
    },
    "18449": {
      "op": "JUMPDEST"
    },
    "18450": {
      "op": "POP"
    },
    "18451": {
      "op": "PUSH2",
      "value": "0x481E"
    },
    "18454": {
      "op": "DUP10"
    },
    "18455": {
      "op": "DUP3"
    },
    "18456": {
      "op": "DUP11"
    },
    "18457": {
      "op": "ADD"
    },
    "18458": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "18461": {
      "jump": "i",
      "op": "JUMP"
    },
    "18462": {
      "op": "JUMPDEST"
    },
    "18463": {
      "op": "SWAP2"
    },
    "18464": {
      "op": "POP"
    },
    "18465": {
      "op": "POP"
    },
    "18466": {
      "op": "SWAP3"
    },
    "18467": {
      "op": "SWAP6"
    },
    "18468": {
      "op": "POP"
    },
    "18469": {
      "op": "SWAP3"
    },
    "18470": {
      "op": "SWAP6"
    },
    "18471": {
      "op": "POP"
    },
    "18472": {
      "op": "SWAP3"
    },
    "18473": {
      "op": "SWAP6"
    },
    "18474": {
      "jump": "o",
      "op": "JUMP"
    },
    "18475": {
      "op": "JUMPDEST"
    },
    "18476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18480": {
      "op": "DUP3"
    },
    "18481": {
      "op": "DUP5"
    },
    "18482": {
      "op": "SUB"
    },
    "18483": {
      "op": "SLT"
    },
    "18484": {
      "op": "ISZERO"
    },
    "18485": {
      "op": "PUSH2",
      "value": "0x483D"
    },
    "18488": {
      "op": "JUMPI"
    },
    "18489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18491": {
      "op": "DUP1"
    },
    "18492": {
      "op": "REVERT"
    },
    "18493": {
      "op": "JUMPDEST"
    },
    "18494": {
      "op": "DUP2"
    },
    "18495": {
      "op": "CALLDATALOAD"
    },
    "18496": {
      "op": "PUSH2",
      "value": "0x3DB3"
    },
    "18499": {
      "op": "DUP2"
    },
    "18500": {
      "op": "PUSH2",
      "value": "0x4D9E"
    },
    "18503": {
      "jump": "i",
      "op": "JUMP"
    },
    "18504": {
      "op": "JUMPDEST"
    },
    "18505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18509": {
      "op": "DUP3"
    },
    "18510": {
      "op": "DUP5"
    },
    "18511": {
      "op": "SUB"
    },
    "18512": {
      "op": "SLT"
    },
    "18513": {
      "op": "ISZERO"
    },
    "18514": {
      "op": "PUSH2",
      "value": "0x485A"
    },
    "18517": {
      "op": "JUMPI"
    },
    "18518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18520": {
      "op": "DUP1"
    },
    "18521": {
      "op": "REVERT"
    },
    "18522": {
      "op": "JUMPDEST"
    },
    "18523": {
      "op": "DUP2"
    },
    "18524": {
      "op": "MLOAD"
    },
    "18525": {
      "op": "PUSH2",
      "value": "0x3DB3"
    },
    "18528": {
      "op": "DUP2"
    },
    "18529": {
      "op": "PUSH2",
      "value": "0x4D9E"
    },
    "18532": {
      "jump": "i",
      "op": "JUMP"
    },
    "18533": {
      "op": "JUMPDEST"
    },
    "18534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18538": {
      "op": "DUP3"
    },
    "18539": {
      "op": "DUP5"
    },
    "18540": {
      "op": "SUB"
    },
    "18541": {
      "op": "SLT"
    },
    "18542": {
      "op": "ISZERO"
    },
    "18543": {
      "op": "PUSH2",
      "value": "0x4877"
    },
    "18546": {
      "op": "JUMPI"
    },
    "18547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18549": {
      "op": "DUP1"
    },
    "18550": {
      "op": "REVERT"
    },
    "18551": {
      "op": "JUMPDEST"
    },
    "18552": {
      "op": "PUSH2",
      "value": "0x3DB3"
    },
    "18555": {
      "op": "DUP3"
    },
    "18556": {
      "op": "PUSH2",
      "value": "0x4219"
    },
    "18559": {
      "jump": "i",
      "op": "JUMP"
    },
    "18560": {
      "op": "JUMPDEST"
    },
    "18561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18565": {
      "op": "DUP3"
    },
    "18566": {
      "op": "DUP5"
    },
    "18567": {
      "op": "SUB"
    },
    "18568": {
      "op": "SLT"
    },
    "18569": {
      "op": "ISZERO"
    },
    "18570": {
      "op": "PUSH2",
      "value": "0x4892"
    },
    "18573": {
      "op": "JUMPI"
    },
    "18574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18576": {
      "op": "DUP1"
    },
    "18577": {
      "op": "REVERT"
    },
    "18578": {
      "op": "JUMPDEST"
    },
    "18579": {
      "op": "POP"
    },
    "18580": {
      "op": "CALLDATALOAD"
    },
    "18581": {
      "op": "SWAP2"
    },
    "18582": {
      "op": "SWAP1"
    },
    "18583": {
      "op": "POP"
    },
    "18584": {
      "jump": "o",
      "op": "JUMP"
    },
    "18585": {
      "op": "JUMPDEST"
    },
    "18586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18590": {
      "op": "DUP3"
    },
    "18591": {
      "op": "DUP5"
    },
    "18592": {
      "op": "SUB"
    },
    "18593": {
      "op": "SLT"
    },
    "18594": {
      "op": "ISZERO"
    },
    "18595": {
      "op": "PUSH2",
      "value": "0x48AB"
    },
    "18598": {
      "op": "JUMPI"
    },
    "18599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18601": {
      "op": "DUP1"
    },
    "18602": {
      "op": "REVERT"
    },
    "18603": {
      "op": "JUMPDEST"
    },
    "18604": {
      "op": "DUP2"
    },
    "18605": {
      "op": "MLOAD"
    },
    "18606": {
      "op": "PUSH2",
      "value": "0x3DB3"
    },
    "18609": {
      "op": "DUP2"
    },
    "18610": {
      "op": "PUSH2",
      "value": "0x4DAC"
    },
    "18613": {
      "jump": "i",
      "op": "JUMP"
    },
    "18614": {
      "op": "JUMPDEST"
    },
    "18615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18617": {
      "op": "DUP2"
    },
    "18618": {
      "op": "MLOAD"
    },
    "18619": {
      "op": "DUP1"
    },
    "18620": {
      "op": "DUP5"
    },
    "18621": {
      "op": "MSTORE"
    },
    "18622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18624": {
      "op": "DUP1"
    },
    "18625": {
      "op": "DUP6"
    },
    "18626": {
      "op": "ADD"
    },
    "18627": {
      "op": "SWAP5"
    },
    "18628": {
      "op": "POP"
    },
    "18629": {
      "op": "DUP1"
    },
    "18630": {
      "op": "DUP5"
    },
    "18631": {
      "op": "ADD"
    },
    "18632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18634": {
      "op": "JUMPDEST"
    },
    "18635": {
      "op": "DUP4"
    },
    "18636": {
      "op": "DUP2"
    },
    "18637": {
      "op": "LT"
    },
    "18638": {
      "op": "ISZERO"
    },
    "18639": {
      "op": "PUSH2",
      "value": "0x48E6"
    },
    "18642": {
      "op": "JUMPI"
    },
    "18643": {
      "op": "DUP2"
    },
    "18644": {
      "op": "MLOAD"
    },
    "18645": {
      "op": "DUP8"
    },
    "18646": {
      "op": "MSTORE"
    },
    "18647": {
      "op": "SWAP6"
    },
    "18648": {
      "op": "DUP3"
    },
    "18649": {
      "op": "ADD"
    },
    "18650": {
      "op": "SWAP6"
    },
    "18651": {
      "op": "SWAP1"
    },
    "18652": {
      "op": "DUP3"
    },
    "18653": {
      "op": "ADD"
    },
    "18654": {
      "op": "SWAP1"
    },
    "18655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18657": {
      "op": "ADD"
    },
    "18658": {
      "op": "PUSH2",
      "value": "0x48CA"
    },
    "18661": {
      "op": "JUMP"
    },
    "18662": {
      "op": "JUMPDEST"
    },
    "18663": {
      "op": "POP"
    },
    "18664": {
      "op": "SWAP5"
    },
    "18665": {
      "op": "SWAP6"
    },
    "18666": {
      "op": "SWAP5"
    },
    "18667": {
      "op": "POP"
    },
    "18668": {
      "op": "POP"
    },
    "18669": {
      "op": "POP"
    },
    "18670": {
      "op": "POP"
    },
    "18671": {
      "op": "POP"
    },
    "18672": {
      "jump": "o",
      "op": "JUMP"
    },
    "18673": {
      "op": "JUMPDEST"
    },
    "18674": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18676": {
      "op": "SWAP4"
    },
    "18677": {
      "op": "SWAP1"
    },
    "18678": {
      "op": "SWAP4"
    },
    "18679": {
      "op": "SHL"
    },
    "18680": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "18693": {
      "op": "NOT"
    },
    "18694": {
      "op": "AND"
    },
    "18695": {
      "op": "DUP4"
    },
    "18696": {
      "op": "MSTORE"
    },
    "18697": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "18699": {
      "op": "DUP4"
    },
    "18700": {
      "op": "ADD"
    },
    "18701": {
      "op": "SWAP2"
    },
    "18702": {
      "op": "SWAP1"
    },
    "18703": {
      "op": "SWAP2"
    },
    "18704": {
      "op": "MSTORE"
    },
    "18705": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "18707": {
      "op": "DUP3"
    },
    "18708": {
      "op": "ADD"
    },
    "18709": {
      "op": "MSTORE"
    },
    "18710": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "18712": {
      "op": "ADD"
    },
    "18713": {
      "op": "SWAP1"
    },
    "18714": {
      "jump": "o",
      "op": "JUMP"
    },
    "18715": {
      "op": "JUMPDEST"
    },
    "18716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18718": {
      "op": "DUP3"
    },
    "18719": {
      "op": "MLOAD"
    },
    "18720": {
      "op": "PUSH2",
      "value": "0x492D"
    },
    "18723": {
      "op": "DUP2"
    },
    "18724": {
      "op": "DUP5"
    },
    "18725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18727": {
      "op": "DUP8"
    },
    "18728": {
      "op": "ADD"
    },
    "18729": {
      "op": "PUSH2",
      "value": "0x4CEA"
    },
    "18732": {
      "jump": "i",
      "op": "JUMP"
    },
    "18733": {
      "op": "JUMPDEST"
    },
    "18734": {
      "op": "SWAP2"
    },
    "18735": {
      "op": "SWAP1"
    },
    "18736": {
      "op": "SWAP2"
    },
    "18737": {
      "op": "ADD"
    },
    "18738": {
      "op": "SWAP3"
    },
    "18739": {
      "op": "SWAP2"
    },
    "18740": {
      "op": "POP"
    },
    "18741": {
      "op": "POP"
    },
    "18742": {
      "jump": "o",
      "op": "JUMP"
    },
    "18743": {
      "op": "JUMPDEST"
    },
    "18744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18750": {
      "op": "SHL"
    },
    "18751": {
      "op": "SUB"
    },
    "18752": {
      "op": "SWAP5"
    },
    "18753": {
      "op": "DUP6"
    },
    "18754": {
      "op": "AND"
    },
    "18755": {
      "op": "DUP2"
    },
    "18756": {
      "op": "MSTORE"
    },
    "18757": {
      "op": "SWAP3"
    },
    "18758": {
      "op": "SWAP1"
    },
    "18759": {
      "op": "SWAP4"
    },
    "18760": {
      "op": "AND"
    },
    "18761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18763": {
      "op": "DUP4"
    },
    "18764": {
      "op": "ADD"
    },
    "18765": {
      "op": "MSTORE"
    },
    "18766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18768": {
      "op": "DUP3"
    },
    "18769": {
      "op": "ADD"
    },
    "18770": {
      "op": "MSTORE"
    },
    "18771": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18773": {
      "op": "DUP2"
    },
    "18774": {
      "op": "ADD"
    },
    "18775": {
      "op": "SWAP2"
    },
    "18776": {
      "op": "SWAP1"
    },
    "18777": {
      "op": "SWAP2"
    },
    "18778": {
      "op": "MSTORE"
    },
    "18779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18781": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18783": {
      "op": "DUP3"
    },
    "18784": {
      "op": "ADD"
    },
    "18785": {
      "op": "DUP2"
    },
    "18786": {
      "op": "SWAP1"
    },
    "18787": {
      "op": "MSTORE"
    },
    "18788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18790": {
      "op": "SWAP1"
    },
    "18791": {
      "op": "DUP3"
    },
    "18792": {
      "op": "ADD"
    },
    "18793": {
      "op": "MSTORE"
    },
    "18794": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "18796": {
      "op": "ADD"
    },
    "18797": {
      "op": "SWAP1"
    },
    "18798": {
      "jump": "o",
      "op": "JUMP"
    },
    "18799": {
      "op": "JUMPDEST"
    },
    "18800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18806": {
      "op": "SHL"
    },
    "18807": {
      "op": "SUB"
    },
    "18808": {
      "op": "DUP6"
    },
    "18809": {
      "op": "DUP2"
    },
    "18810": {
      "op": "AND"
    },
    "18811": {
      "op": "DUP3"
    },
    "18812": {
      "op": "MSTORE"
    },
    "18813": {
      "op": "DUP5"
    },
    "18814": {
      "op": "AND"
    },
    "18815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18817": {
      "op": "DUP3"
    },
    "18818": {
      "op": "ADD"
    },
    "18819": {
      "op": "MSTORE"
    },
    "18820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18822": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18824": {
      "op": "DUP3"
    },
    "18825": {
      "op": "ADD"
    },
    "18826": {
      "op": "DUP2"
    },
    "18827": {
      "op": "SWAP1"
    },
    "18828": {
      "op": "MSTORE"
    },
    "18829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18831": {
      "op": "SWAP1"
    },
    "18832": {
      "op": "PUSH2",
      "value": "0x499B"
    },
    "18835": {
      "op": "SWAP1"
    },
    "18836": {
      "op": "DUP4"
    },
    "18837": {
      "op": "ADD"
    },
    "18838": {
      "op": "DUP6"
    },
    "18839": {
      "op": "PUSH2",
      "value": "0x48B6"
    },
    "18842": {
      "jump": "i",
      "op": "JUMP"
    },
    "18843": {
      "op": "JUMPDEST"
    },
    "18844": {
      "op": "DUP3"
    },
    "18845": {
      "op": "DUP2"
    },
    "18846": {
      "op": "SUB"
    },
    "18847": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18849": {
      "op": "DUP5"
    },
    "18850": {
      "op": "ADD"
    },
    "18851": {
      "op": "MSTORE"
    },
    "18852": {
      "op": "PUSH2",
      "value": "0x49AD"
    },
    "18855": {
      "op": "DUP2"
    },
    "18856": {
      "op": "DUP6"
    },
    "18857": {
      "op": "PUSH2",
      "value": "0x48B6"
    },
    "18860": {
      "jump": "i",
      "op": "JUMP"
    },
    "18861": {
      "op": "JUMPDEST"
    },
    "18862": {
      "op": "DUP4"
    },
    "18863": {
      "op": "DUP2"
    },
    "18864": {
      "op": "SUB"
    },
    "18865": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18867": {
      "op": "SWAP1"
    },
    "18868": {
      "op": "SWAP5"
    },
    "18869": {
      "op": "ADD"
    },
    "18870": {
      "op": "SWAP4"
    },
    "18871": {
      "op": "SWAP1"
    },
    "18872": {
      "op": "SWAP4"
    },
    "18873": {
      "op": "MSTORE"
    },
    "18874": {
      "op": "POP"
    },
    "18875": {
      "op": "POP"
    },
    "18876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18878": {
      "op": "DUP2"
    },
    "18879": {
      "op": "MSTORE"
    },
    "18880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18882": {
      "op": "ADD"
    },
    "18883": {
      "op": "SWAP5"
    },
    "18884": {
      "op": "SWAP4"
    },
    "18885": {
      "op": "POP"
    },
    "18886": {
      "op": "POP"
    },
    "18887": {
      "op": "POP"
    },
    "18888": {
      "op": "POP"
    },
    "18889": {
      "jump": "o",
      "op": "JUMP"
    },
    "18890": {
      "op": "JUMPDEST"
    },
    "18891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18893": {
      "op": "DUP2"
    },
    "18894": {
      "op": "MSTORE"
    },
    "18895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18897": {
      "op": "DUP3"
    },
    "18898": {
      "op": "MLOAD"
    },
    "18899": {
      "op": "DUP1"
    },
    "18900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18902": {
      "op": "DUP5"
    },
    "18903": {
      "op": "ADD"
    },
    "18904": {
      "op": "MSTORE"
    },
    "18905": {
      "op": "PUSH2",
      "value": "0x49E9"
    },
    "18908": {
      "op": "DUP2"
    },
    "18909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18911": {
      "op": "DUP6"
    },
    "18912": {
      "op": "ADD"
    },
    "18913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18915": {
      "op": "DUP8"
    },
    "18916": {
      "op": "ADD"
    },
    "18917": {
      "op": "PUSH2",
      "value": "0x4CEA"
    },
    "18920": {
      "jump": "i",
      "op": "JUMP"
    },
    "18921": {
      "op": "JUMPDEST"
    },
    "18922": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18924": {
      "op": "ADD"
    },
    "18925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18927": {
      "op": "NOT"
    },
    "18928": {
      "op": "AND"
    },
    "18929": {
      "op": "SWAP2"
    },
    "18930": {
      "op": "SWAP1"
    },
    "18931": {
      "op": "SWAP2"
    },
    "18932": {
      "op": "ADD"
    },
    "18933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18935": {
      "op": "ADD"
    },
    "18936": {
      "op": "SWAP3"
    },
    "18937": {
      "op": "SWAP2"
    },
    "18938": {
      "op": "POP"
    },
    "18939": {
      "op": "POP"
    },
    "18940": {
      "jump": "o",
      "op": "JUMP"
    },
    "18941": {
      "op": "JUMPDEST"
    },
    "18942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18944": {
      "op": "DUP1"
    },
    "18945": {
      "op": "DUP3"
    },
    "18946": {
      "op": "MSTORE"
    },
    "18947": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "18949": {
      "op": "SWAP1"
    },
    "18950": {
      "op": "DUP3"
    },
    "18951": {
      "op": "ADD"
    },
    "18952": {
      "op": "MSTORE"
    },
    "18953": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000"
    },
    "18986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18988": {
      "op": "DUP3"
    },
    "18989": {
      "op": "ADD"
    },
    "18990": {
      "op": "MSTORE"
    },
    "18991": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18993": {
      "op": "ADD"
    },
    "18994": {
      "op": "SWAP1"
    },
    "18995": {
      "jump": "o",
      "op": "JUMP"
    },
    "18996": {
      "op": "JUMPDEST"
    },
    "18997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18999": {
      "op": "DUP1"
    },
    "19000": {
      "op": "DUP3"
    },
    "19001": {
      "op": "MSTORE"
    },
    "19002": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "19004": {
      "op": "SWAP1"
    },
    "19005": {
      "op": "DUP3"
    },
    "19006": {
      "op": "ADD"
    },
    "19007": {
      "op": "MSTORE"
    },
    "19008": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000"
    },
    "19041": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19043": {
      "op": "DUP3"
    },
    "19044": {
      "op": "ADD"
    },
    "19045": {
      "op": "MSTORE"
    },
    "19046": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19048": {
      "op": "ADD"
    },
    "19049": {
      "op": "SWAP1"
    },
    "19050": {
      "jump": "o",
      "op": "JUMP"
    },
    "19051": {
      "op": "JUMPDEST"
    },
    "19052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19054": {
      "op": "DUP1"
    },
    "19055": {
      "op": "DUP3"
    },
    "19056": {
      "op": "MSTORE"
    },
    "19057": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "19059": {
      "op": "SWAP1"
    },
    "19060": {
      "op": "DUP3"
    },
    "19061": {
      "op": "ADD"
    },
    "19062": {
      "op": "MSTORE"
    },
    "19063": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000"
    },
    "19096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19098": {
      "op": "DUP3"
    },
    "19099": {
      "op": "ADD"
    },
    "19100": {
      "op": "MSTORE"
    },
    "19101": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19103": {
      "op": "ADD"
    },
    "19104": {
      "op": "SWAP1"
    },
    "19105": {
      "jump": "o",
      "op": "JUMP"
    },
    "19106": {
      "op": "JUMPDEST"
    },
    "19107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19109": {
      "op": "DUP1"
    },
    "19110": {
      "op": "DUP3"
    },
    "19111": {
      "op": "MSTORE"
    },
    "19112": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "19114": {
      "op": "SWAP1"
    },
    "19115": {
      "op": "DUP3"
    },
    "19116": {
      "op": "ADD"
    },
    "19117": {
      "op": "MSTORE"
    },
    "19118": {
      "op": "PUSH13",
      "value": "0x14995391950E8E9C185D5CD959"
    },
    "19132": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "19134": {
      "op": "SHL"
    },
    "19135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19137": {
      "op": "DUP3"
    },
    "19138": {
      "op": "ADD"
    },
    "19139": {
      "op": "MSTORE"
    },
    "19140": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19142": {
      "op": "ADD"
    },
    "19143": {
      "op": "SWAP1"
    },
    "19144": {
      "jump": "o",
      "op": "JUMP"
    },
    "19145": {
      "op": "JUMPDEST"
    },
    "19146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19148": {
      "op": "DUP1"
    },
    "19149": {
      "op": "DUP3"
    },
    "19150": {
      "op": "MSTORE"
    },
    "19151": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "19153": {
      "op": "SWAP1"
    },
    "19154": {
      "op": "DUP3"
    },
    "19155": {
      "op": "ADD"
    },
    "19156": {
      "op": "MSTORE"
    },
    "19157": {
      "op": "PUSH16",
      "value": "0x2932A7232A1D1D3737BA1030B236B4B7"
    },
    "19174": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "19176": {
      "op": "SHL"
    },
    "19177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19179": {
      "op": "DUP3"
    },
    "19180": {
      "op": "ADD"
    },
    "19181": {
      "op": "MSTORE"
    },
    "19182": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19184": {
      "op": "ADD"
    },
    "19185": {
      "op": "SWAP1"
    },
    "19186": {
      "jump": "o",
      "op": "JUMP"
    },
    "19187": {
      "op": "JUMPDEST"
    },
    "19188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19190": {
      "op": "MLOAD"
    },
    "19191": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19193": {
      "op": "DUP3"
    },
    "19194": {
      "op": "ADD"
    },
    "19195": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19197": {
      "op": "NOT"
    },
    "19198": {
      "op": "AND"
    },
    "19199": {
      "op": "DUP2"
    },
    "19200": {
      "op": "ADD"
    },
    "19201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19205": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19207": {
      "op": "SHL"
    },
    "19208": {
      "op": "SUB"
    },
    "19209": {
      "op": "DUP2"
    },
    "19210": {
      "op": "GT"
    },
    "19211": {
      "op": "DUP3"
    },
    "19212": {
      "op": "DUP3"
    },
    "19213": {
      "op": "LT"
    },
    "19214": {
      "op": "OR"
    },
    "19215": {
      "op": "ISZERO"
    },
    "19216": {
      "op": "PUSH2",
      "value": "0x4B1B"
    },
    "19219": {
      "op": "JUMPI"
    },
    "19220": {
      "op": "PUSH2",
      "value": "0x4B1B"
    },
    "19223": {
      "op": "PUSH2",
      "value": "0x4D73"
    },
    "19226": {
      "jump": "i",
      "op": "JUMP"
    },
    "19227": {
      "op": "JUMPDEST"
    },
    "19228": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19230": {
      "op": "MSTORE"
    },
    "19231": {
      "op": "SWAP2"
    },
    "19232": {
      "op": "SWAP1"
    },
    "19233": {
      "op": "POP"
    },
    "19234": {
      "jump": "o",
      "op": "JUMP"
    },
    "19235": {
      "op": "JUMPDEST"
    },
    "19236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19244": {
      "op": "SHL"
    },
    "19245": {
      "op": "SUB"
    },
    "19246": {
      "op": "DUP3"
    },
    "19247": {
      "op": "GT"
    },
    "19248": {
      "op": "ISZERO"
    },
    "19249": {
      "op": "PUSH2",
      "value": "0x4B3C"
    },
    "19252": {
      "op": "JUMPI"
    },
    "19253": {
      "op": "PUSH2",
      "value": "0x4B3C"
    },
    "19256": {
      "op": "PUSH2",
      "value": "0x4D73"
    },
    "19259": {
      "jump": "i",
      "op": "JUMP"
    },
    "19260": {
      "op": "JUMPDEST"
    },
    "19261": {
      "op": "POP"
    },
    "19262": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "19264": {
      "op": "SHL"
    },
    "19265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19267": {
      "op": "ADD"
    },
    "19268": {
      "op": "SWAP1"
    },
    "19269": {
      "jump": "o",
      "op": "JUMP"
    },
    "19270": {
      "op": "JUMPDEST"
    },
    "19271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19273": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19276": {
      "op": "DUP1"
    },
    "19277": {
      "op": "DUP4"
    },
    "19278": {
      "op": "AND"
    },
    "19279": {
      "op": "DUP2"
    },
    "19280": {
      "op": "DUP6"
    },
    "19281": {
      "op": "AND"
    },
    "19282": {
      "op": "DUP1"
    },
    "19283": {
      "op": "DUP4"
    },
    "19284": {
      "op": "SUB"
    },
    "19285": {
      "op": "DUP3"
    },
    "19286": {
      "op": "GT"
    },
    "19287": {
      "op": "ISZERO"
    },
    "19288": {
      "op": "PUSH2",
      "value": "0x4B63"
    },
    "19291": {
      "op": "JUMPI"
    },
    "19292": {
      "op": "PUSH2",
      "value": "0x4B63"
    },
    "19295": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19298": {
      "jump": "i",
      "op": "JUMP"
    },
    "19299": {
      "op": "JUMPDEST"
    },
    "19300": {
      "op": "ADD"
    },
    "19301": {
      "op": "SWAP5"
    },
    "19302": {
      "op": "SWAP4"
    },
    "19303": {
      "op": "POP"
    },
    "19304": {
      "op": "POP"
    },
    "19305": {
      "op": "POP"
    },
    "19306": {
      "op": "POP"
    },
    "19307": {
      "jump": "o",
      "op": "JUMP"
    },
    "19308": {
      "op": "JUMPDEST"
    },
    "19309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19311": {
      "op": "DUP3"
    },
    "19312": {
      "op": "NOT"
    },
    "19313": {
      "op": "DUP3"
    },
    "19314": {
      "op": "GT"
    },
    "19315": {
      "op": "ISZERO"
    },
    "19316": {
      "op": "PUSH2",
      "value": "0x4B7F"
    },
    "19319": {
      "op": "JUMPI"
    },
    "19320": {
      "op": "PUSH2",
      "value": "0x4B7F"
    },
    "19323": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19326": {
      "jump": "i",
      "op": "JUMP"
    },
    "19327": {
      "op": "JUMPDEST"
    },
    "19328": {
      "op": "POP"
    },
    "19329": {
      "op": "ADD"
    },
    "19330": {
      "op": "SWAP1"
    },
    "19331": {
      "jump": "o",
      "op": "JUMP"
    },
    "19332": {
      "op": "JUMPDEST"
    },
    "19333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19335": {
      "op": "DUP3"
    },
    "19336": {
      "op": "PUSH2",
      "value": "0x4BA1"
    },
    "19339": {
      "op": "JUMPI"
    },
    "19340": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19347": {
      "op": "SHL"
    },
    "19348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19350": {
      "op": "MSTORE"
    },
    "19351": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "19353": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19355": {
      "op": "MSTORE"
    },
    "19356": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19360": {
      "op": "REVERT"
    },
    "19361": {
      "op": "JUMPDEST"
    },
    "19362": {
      "op": "POP"
    },
    "19363": {
      "op": "DIV"
    },
    "19364": {
      "op": "SWAP1"
    },
    "19365": {
      "jump": "o",
      "op": "JUMP"
    },
    "19366": {
      "op": "JUMPDEST"
    },
    "19367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19369": {
      "op": "DUP2"
    },
    "19370": {
      "op": "DUP2"
    },
    "19371": {
      "op": "JUMPDEST"
    },
    "19372": {
      "op": "DUP1"
    },
    "19373": {
      "op": "DUP6"
    },
    "19374": {
      "op": "GT"
    },
    "19375": {
      "op": "ISZERO"
    },
    "19376": {
      "op": "PUSH2",
      "value": "0x4BE1"
    },
    "19379": {
      "op": "JUMPI"
    },
    "19380": {
      "op": "DUP2"
    },
    "19381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19383": {
      "op": "NOT"
    },
    "19384": {
      "op": "DIV"
    },
    "19385": {
      "op": "DUP3"
    },
    "19386": {
      "op": "GT"
    },
    "19387": {
      "op": "ISZERO"
    },
    "19388": {
      "op": "PUSH2",
      "value": "0x4BC7"
    },
    "19391": {
      "op": "JUMPI"
    },
    "19392": {
      "op": "PUSH2",
      "value": "0x4BC7"
    },
    "19395": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19398": {
      "jump": "i",
      "op": "JUMP"
    },
    "19399": {
      "op": "JUMPDEST"
    },
    "19400": {
      "op": "DUP1"
    },
    "19401": {
      "op": "DUP6"
    },
    "19402": {
      "op": "AND"
    },
    "19403": {
      "op": "ISZERO"
    },
    "19404": {
      "op": "PUSH2",
      "value": "0x4BD4"
    },
    "19407": {
      "op": "JUMPI"
    },
    "19408": {
      "op": "SWAP2"
    },
    "19409": {
      "op": "DUP2"
    },
    "19410": {
      "op": "MUL"
    },
    "19411": {
      "op": "SWAP2"
    },
    "19412": {
      "op": "JUMPDEST"
    },
    "19413": {
      "op": "SWAP4"
    },
    "19414": {
      "op": "DUP5"
    },
    "19415": {
      "op": "SHR"
    },
    "19416": {
      "op": "SWAP4"
    },
    "19417": {
      "op": "SWAP1"
    },
    "19418": {
      "op": "DUP1"
    },
    "19419": {
      "op": "MUL"
    },
    "19420": {
      "op": "SWAP1"
    },
    "19421": {
      "op": "PUSH2",
      "value": "0x4BAB"
    },
    "19424": {
      "op": "JUMP"
    },
    "19425": {
      "op": "JUMPDEST"
    },
    "19426": {
      "op": "POP"
    },
    "19427": {
      "op": "SWAP3"
    },
    "19428": {
      "op": "POP"
    },
    "19429": {
      "op": "SWAP3"
    },
    "19430": {
      "op": "SWAP1"
    },
    "19431": {
      "op": "POP"
    },
    "19432": {
      "jump": "o",
      "op": "JUMP"
    },
    "19433": {
      "op": "JUMPDEST"
    },
    "19434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19436": {
      "op": "PUSH2",
      "value": "0x3DB3"
    },
    "19439": {
      "op": "DUP4"
    },
    "19440": {
      "op": "DUP4"
    },
    "19441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19443": {
      "op": "DUP3"
    },
    "19444": {
      "op": "PUSH2",
      "value": "0x4BFF"
    },
    "19447": {
      "op": "JUMPI"
    },
    "19448": {
      "op": "POP"
    },
    "19449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19451": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "19454": {
      "op": "JUMP"
    },
    "19455": {
      "op": "JUMPDEST"
    },
    "19456": {
      "op": "DUP2"
    },
    "19457": {
      "op": "PUSH2",
      "value": "0x4C0C"
    },
    "19460": {
      "op": "JUMPI"
    },
    "19461": {
      "op": "POP"
    },
    "19462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19464": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "19467": {
      "op": "JUMP"
    },
    "19468": {
      "op": "JUMPDEST"
    },
    "19469": {
      "op": "DUP2"
    },
    "19470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19472": {
      "op": "DUP2"
    },
    "19473": {
      "op": "EQ"
    },
    "19474": {
      "op": "PUSH2",
      "value": "0x4C22"
    },
    "19477": {
      "op": "JUMPI"
    },
    "19478": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "19480": {
      "op": "DUP2"
    },
    "19481": {
      "op": "EQ"
    },
    "19482": {
      "op": "PUSH2",
      "value": "0x4C2C"
    },
    "19485": {
      "op": "JUMPI"
    },
    "19486": {
      "op": "PUSH2",
      "value": "0x4C48"
    },
    "19489": {
      "op": "JUMP"
    },
    "19490": {
      "op": "JUMPDEST"
    },
    "19491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19493": {
      "op": "SWAP2"
    },
    "19494": {
      "op": "POP"
    },
    "19495": {
      "op": "POP"
    },
    "19496": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "19499": {
      "op": "JUMP"
    },
    "19500": {
      "op": "JUMPDEST"
    },
    "19501": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19503": {
      "op": "DUP5"
    },
    "19504": {
      "op": "GT"
    },
    "19505": {
      "op": "ISZERO"
    },
    "19506": {
      "op": "PUSH2",
      "value": "0x4C3D"
    },
    "19509": {
      "op": "JUMPI"
    },
    "19510": {
      "op": "PUSH2",
      "value": "0x4C3D"
    },
    "19513": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19516": {
      "jump": "i",
      "op": "JUMP"
    },
    "19517": {
      "op": "JUMPDEST"
    },
    "19518": {
      "op": "POP"
    },
    "19519": {
      "op": "POP"
    },
    "19520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19522": {
      "op": "DUP3"
    },
    "19523": {
      "op": "SHL"
    },
    "19524": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "19527": {
      "op": "JUMP"
    },
    "19528": {
      "op": "JUMPDEST"
    },
    "19529": {
      "op": "POP"
    },
    "19530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19532": {
      "op": "DUP4"
    },
    "19533": {
      "op": "LT"
    },
    "19534": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "19537": {
      "op": "DUP4"
    },
    "19538": {
      "op": "LT"
    },
    "19539": {
      "op": "AND"
    },
    "19540": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "19542": {
      "op": "DUP5"
    },
    "19543": {
      "op": "LT"
    },
    "19544": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "19546": {
      "op": "DUP5"
    },
    "19547": {
      "op": "LT"
    },
    "19548": {
      "op": "AND"
    },
    "19549": {
      "op": "OR"
    },
    "19550": {
      "op": "ISZERO"
    },
    "19551": {
      "op": "PUSH2",
      "value": "0x4C6B"
    },
    "19554": {
      "op": "JUMPI"
    },
    "19555": {
      "op": "POP"
    },
    "19556": {
      "op": "DUP2"
    },
    "19557": {
      "op": "DUP2"
    },
    "19558": {
      "op": "EXP"
    },
    "19559": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "19562": {
      "op": "JUMP"
    },
    "19563": {
      "op": "JUMPDEST"
    },
    "19564": {
      "op": "PUSH2",
      "value": "0x4C75"
    },
    "19567": {
      "op": "DUP4"
    },
    "19568": {
      "op": "DUP4"
    },
    "19569": {
      "op": "PUSH2",
      "value": "0x4BA6"
    },
    "19572": {
      "jump": "i",
      "op": "JUMP"
    },
    "19573": {
      "op": "JUMPDEST"
    },
    "19574": {
      "op": "DUP1"
    },
    "19575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19577": {
      "op": "NOT"
    },
    "19578": {
      "op": "DIV"
    },
    "19579": {
      "op": "DUP3"
    },
    "19580": {
      "op": "GT"
    },
    "19581": {
      "op": "ISZERO"
    },
    "19582": {
      "op": "PUSH2",
      "value": "0x4C89"
    },
    "19585": {
      "op": "JUMPI"
    },
    "19586": {
      "op": "PUSH2",
      "value": "0x4C89"
    },
    "19589": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19592": {
      "jump": "i",
      "op": "JUMP"
    },
    "19593": {
      "op": "JUMPDEST"
    },
    "19594": {
      "op": "MUL"
    },
    "19595": {
      "op": "SWAP4"
    },
    "19596": {
      "op": "SWAP3"
    },
    "19597": {
      "op": "POP"
    },
    "19598": {
      "op": "POP"
    },
    "19599": {
      "op": "POP"
    },
    "19600": {
      "jump": "o",
      "op": "JUMP"
    },
    "19601": {
      "op": "JUMPDEST"
    },
    "19602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19604": {
      "op": "DUP2"
    },
    "19605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19607": {
      "op": "NOT"
    },
    "19608": {
      "op": "DIV"
    },
    "19609": {
      "op": "DUP4"
    },
    "19610": {
      "op": "GT"
    },
    "19611": {
      "op": "DUP3"
    },
    "19612": {
      "op": "ISZERO"
    },
    "19613": {
      "op": "ISZERO"
    },
    "19614": {
      "op": "AND"
    },
    "19615": {
      "op": "ISZERO"
    },
    "19616": {
      "op": "PUSH2",
      "value": "0x4CAB"
    },
    "19619": {
      "op": "JUMPI"
    },
    "19620": {
      "op": "PUSH2",
      "value": "0x4CAB"
    },
    "19623": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19626": {
      "jump": "i",
      "op": "JUMP"
    },
    "19627": {
      "op": "JUMPDEST"
    },
    "19628": {
      "op": "POP"
    },
    "19629": {
      "op": "MUL"
    },
    "19630": {
      "op": "SWAP1"
    },
    "19631": {
      "jump": "o",
      "op": "JUMP"
    },
    "19632": {
      "op": "JUMPDEST"
    },
    "19633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19635": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19638": {
      "op": "DUP4"
    },
    "19639": {
      "op": "DUP2"
    },
    "19640": {
      "op": "AND"
    },
    "19641": {
      "op": "SWAP1"
    },
    "19642": {
      "op": "DUP4"
    },
    "19643": {
      "op": "AND"
    },
    "19644": {
      "op": "DUP2"
    },
    "19645": {
      "op": "DUP2"
    },
    "19646": {
      "op": "LT"
    },
    "19647": {
      "op": "ISZERO"
    },
    "19648": {
      "op": "PUSH2",
      "value": "0x4CCB"
    },
    "19651": {
      "op": "JUMPI"
    },
    "19652": {
      "op": "PUSH2",
      "value": "0x4CCB"
    },
    "19655": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19658": {
      "jump": "i",
      "op": "JUMP"
    },
    "19659": {
      "op": "JUMPDEST"
    },
    "19660": {
      "op": "SUB"
    },
    "19661": {
      "op": "SWAP4"
    },
    "19662": {
      "op": "SWAP3"
    },
    "19663": {
      "op": "POP"
    },
    "19664": {
      "op": "POP"
    },
    "19665": {
      "op": "POP"
    },
    "19666": {
      "jump": "o",
      "op": "JUMP"
    },
    "19667": {
      "op": "JUMPDEST"
    },
    "19668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19670": {
      "op": "DUP3"
    },
    "19671": {
      "op": "DUP3"
    },
    "19672": {
      "op": "LT"
    },
    "19673": {
      "op": "ISZERO"
    },
    "19674": {
      "op": "PUSH2",
      "value": "0x4CE5"
    },
    "19677": {
      "op": "JUMPI"
    },
    "19678": {
      "op": "PUSH2",
      "value": "0x4CE5"
    },
    "19681": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19684": {
      "jump": "i",
      "op": "JUMP"
    },
    "19685": {
      "op": "JUMPDEST"
    },
    "19686": {
      "op": "POP"
    },
    "19687": {
      "op": "SUB"
    },
    "19688": {
      "op": "SWAP1"
    },
    "19689": {
      "jump": "o",
      "op": "JUMP"
    },
    "19690": {
      "op": "JUMPDEST"
    },
    "19691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19693": {
      "op": "JUMPDEST"
    },
    "19694": {
      "op": "DUP4"
    },
    "19695": {
      "op": "DUP2"
    },
    "19696": {
      "op": "LT"
    },
    "19697": {
      "op": "ISZERO"
    },
    "19698": {
      "op": "PUSH2",
      "value": "0x4D05"
    },
    "19701": {
      "op": "JUMPI"
    },
    "19702": {
      "op": "DUP2"
    },
    "19703": {
      "op": "DUP2"
    },
    "19704": {
      "op": "ADD"
    },
    "19705": {
      "op": "MLOAD"
    },
    "19706": {
      "op": "DUP4"
    },
    "19707": {
      "op": "DUP3"
    },
    "19708": {
      "op": "ADD"
    },
    "19709": {
      "op": "MSTORE"
    },
    "19710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19712": {
      "op": "ADD"
    },
    "19713": {
      "op": "PUSH2",
      "value": "0x4CED"
    },
    "19716": {
      "op": "JUMP"
    },
    "19717": {
      "op": "JUMPDEST"
    },
    "19718": {
      "op": "DUP4"
    },
    "19719": {
      "op": "DUP2"
    },
    "19720": {
      "op": "GT"
    },
    "19721": {
      "op": "ISZERO"
    },
    "19722": {
      "op": "PUSH2",
      "value": "0x6AA"
    },
    "19725": {
      "op": "JUMPI"
    },
    "19726": {
      "op": "POP"
    },
    "19727": {
      "op": "POP"
    },
    "19728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19730": {
      "op": "SWAP2"
    },
    "19731": {
      "op": "ADD"
    },
    "19732": {
      "op": "MSTORE"
    },
    "19733": {
      "jump": "o",
      "op": "JUMP"
    },
    "19734": {
      "op": "JUMPDEST"
    },
    "19735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19739": {
      "op": "NOT"
    },
    "19740": {
      "op": "DUP3"
    },
    "19741": {
      "op": "EQ"
    },
    "19742": {
      "op": "ISZERO"
    },
    "19743": {
      "op": "PUSH2",
      "value": "0x4D2A"
    },
    "19746": {
      "op": "JUMPI"
    },
    "19747": {
      "op": "PUSH2",
      "value": "0x4D2A"
    },
    "19750": {
      "op": "PUSH2",
      "value": "0x4D31"
    },
    "19753": {
      "jump": "i",
      "op": "JUMP"
    },
    "19754": {
      "op": "JUMPDEST"
    },
    "19755": {
      "op": "POP"
    },
    "19756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19758": {
      "op": "ADD"
    },
    "19759": {
      "op": "SWAP1"
    },
    "19760": {
      "jump": "o",
      "op": "JUMP"
    },
    "19761": {
      "op": "JUMPDEST"
    },
    "19762": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19769": {
      "op": "SHL"
    },
    "19770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19772": {
      "op": "MSTORE"
    },
    "19773": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "19775": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19777": {
      "op": "MSTORE"
    },
    "19778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19782": {
      "op": "REVERT"
    },
    "19783": {
      "op": "JUMPDEST"
    },
    "19784": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19791": {
      "op": "SHL"
    },
    "19792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19794": {
      "op": "MSTORE"
    },
    "19795": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "19797": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19799": {
      "op": "MSTORE"
    },
    "19800": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19804": {
      "op": "REVERT"
    },
    "19805": {
      "op": "JUMPDEST"
    },
    "19806": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19811": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19813": {
      "op": "SHL"
    },
    "19814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19816": {
      "op": "MSTORE"
    },
    "19817": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "19819": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19821": {
      "op": "MSTORE"
    },
    "19822": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19826": {
      "op": "REVERT"
    },
    "19827": {
      "op": "JUMPDEST"
    },
    "19828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19835": {
      "op": "SHL"
    },
    "19836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19838": {
      "op": "MSTORE"
    },
    "19839": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "19841": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19843": {
      "op": "MSTORE"
    },
    "19844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19848": {
      "op": "REVERT"
    },
    "19849": {
      "op": "JUMPDEST"
    },
    "19850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19856": {
      "op": "SHL"
    },
    "19857": {
      "op": "SUB"
    },
    "19858": {
      "op": "DUP2"
    },
    "19859": {
      "op": "AND"
    },
    "19860": {
      "op": "DUP2"
    },
    "19861": {
      "op": "EQ"
    },
    "19862": {
      "op": "PUSH2",
      "value": "0x26CC"
    },
    "19865": {
      "op": "JUMPI"
    },
    "19866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19868": {
      "op": "DUP1"
    },
    "19869": {
      "op": "REVERT"
    },
    "19870": {
      "op": "JUMPDEST"
    },
    "19871": {
      "op": "DUP1"
    },
    "19872": {
      "op": "ISZERO"
    },
    "19873": {
      "op": "ISZERO"
    },
    "19874": {
      "op": "DUP2"
    },
    "19875": {
      "op": "EQ"
    },
    "19876": {
      "op": "PUSH2",
      "value": "0x26CC"
    },
    "19879": {
      "op": "JUMPI"
    },
    "19880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19882": {
      "op": "DUP1"
    },
    "19883": {
      "op": "REVERT"
    },
    "19884": {
      "op": "JUMPDEST"
    },
    "19885": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19887": {
      "op": "DUP2"
    },
    "19888": {
      "op": "AND"
    },
    "19889": {
      "op": "DUP2"
    },
    "19890": {
      "op": "EQ"
    },
    "19891": {
      "op": "PUSH2",
      "value": "0x26CC"
    },
    "19894": {
      "op": "JUMPI"
    },
    "19895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19897": {
      "op": "DUP1"
    },
    "19898": {
      "op": "REVERT"
    }
  },
  "sha1": "ef2264e32977a3034e0c3ecad8897b5c25804676",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.7;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol\";\n\nimport \"./interfaces/IRegistry.sol\";\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n\ncontract Registry is IRegistry, ERC721Holder, ERC1155Receiver, ERC1155Holder {\n    using SafeERC20 for ERC20;\n\n    IResolver private resolver;\n    address private admin;\n    address payable private beneficiary;\n    uint256 private lendingID = 1;\n    uint256 private rentingID = 1;\n    bool public paused = false;\n    uint256 public rentFee = 0;\n    uint256 private constant SECONDS_IN_DAY = 86400;\n    mapping(bytes32 => Lending) private lendings;\n    mapping(bytes32 => Renting) private rentings;\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"ReNFT::not admin\");\n        _;\n    }\n\n    modifier notPaused() {\n        require(!paused, \"ReNFT::paused\");\n        _;\n    }\n\n    constructor(address newResolver, address payable newBeneficiary, address newAdmin) {\n        ensureIsNotZeroAddr(newResolver);\n        ensureIsNotZeroAddr(newBeneficiary);\n        ensureIsNotZeroAddr(newAdmin);\n        resolver = IResolver(newResolver);\n        beneficiary = newBeneficiary;\n        admin = newAdmin;\n    }\n\n    function lend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        uint8[] memory paymentToken,\n        bool[] memory willAutoRenew\n    ) external override notPaused {\n        bundleCall(\n            handleLend,\n            createLendCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                lendAmount,\n                maxRentDuration,\n                dailyRentPrice,\n                paymentToken,\n                willAutoRenew\n            )\n        );\n    }\n\n    function stopLend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID\n    ) external override notPaused {\n        bundleCall(handleStopLend, createActionCallData(nftStandard, nftAddress, tokenID, _lendingID, new uint256[](0)));\n    }\n\n    function rent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) external payable override notPaused {\n        bundleCall(\n            handleRent, createRentCallData(nftStandard, nftAddress, tokenID, _lendingID, rentDuration, rentAmount)\n        );\n    }\n\n    function stopRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(handleStopRent, createActionCallData(nftStandard, nftAddress, tokenID, _lendingID, _rentingID));\n    }\n\n    function claimRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(handleClaimRent, createActionCallData(nftStandard, nftAddress, tokenID, _lendingID, _rentingID));\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function handleLend(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            ensureIsLendable(cd, i);\n            bytes32 identifier = keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], lendingID));\n            IRegistry.Lending storage lending = lendings[identifier];\n            ensureIsNull(lending);\n            ensureTokenNotSentinel(uint8(cd.paymentToken[i]));\n            bool is721 = cd.nftStandard[i] == IRegistry.NFTStandard.E721;\n            uint16 _lendAmount = uint16(cd.lendAmount[i]);\n            if (is721) require(_lendAmount == 1, \"ReNFT::lendAmount should be equal to 1\");\n            lendings[identifier] = IRegistry.Lending({\n                nftStandard: cd.nftStandard[i],\n                lenderAddress: payable(msg.sender),\n                maxRentDuration: cd.maxRentDuration[i],\n                dailyRentPrice: cd.dailyRentPrice[i],\n                lendAmount: _lendAmount,\n                availableAmount: _lendAmount,\n                paymentToken: cd.paymentToken[i],\n                willAutoRenew: cd.willAutoRenew[i]\n            });\n            emit IRegistry.Lend(\n                is721,\n                msg.sender,\n                cd.nftAddress[cd.left],\n                cd.tokenID[i],\n                lendingID,\n                cd.maxRentDuration[i],\n                cd.dailyRentPrice[i],\n                _lendAmount,\n                cd.paymentToken[i],\n                cd.willAutoRenew[i]\n                );\n            lendingID++;\n        }\n        safeTransfer(\n            cd,\n            msg.sender,\n            address(this),\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(cd.lendAmount, cd.left, cd.right, 0)\n        );\n    }\n\n    function handleStopLend(IRegistry.CallData memory cd) private {\n        uint256[] memory lentAmounts = new uint256[](cd.right - cd.left);\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier =\n                keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], cd.lendingID[i]));\n            Lending storage lending = lendings[lendingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsStoppable(lending, msg.sender);\n            require(cd.nftStandard[i] == lending.nftStandard, \"ReNFT::invalid nft standard\");\n            require(lending.lendAmount == lending.availableAmount, \"ReNFT::actively rented\");\n            lentAmounts[i - cd.left] = lending.lendAmount;\n            emit IRegistry.StopLend(cd.lendingID[i], uint32(block.timestamp), lending.lendAmount);\n            delete lendings[lendingIdentifier];\n        }\n        safeTransfer(\n            cd,\n            address(this),\n            msg.sender,\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(lentAmounts, cd.left, cd.right, cd.left)\n        );\n    }\n\n    function handleRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier =\n                keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], cd.lendingID[i]));\n            bytes32 rentingIdentifier = keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], rentingID));\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNull(renting);\n            ensureIsRentable(lending, cd, i, msg.sender);\n            require(cd.nftStandard[i] == lending.nftStandard, \"ReNFT::invalid nft standard\");\n            require(cd.rentAmount[i] <= lending.availableAmount, \"ReNFT::invalid rent amount\");\n            uint8 paymentTokenIx = uint8(lending.paymentToken);\n            ERC20 paymentToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n            uint256 decimals = paymentToken.decimals();\n            {\n                uint256 scale = 10 ** decimals;\n                uint256 rentPrice = cd.rentAmount[i] * cd.rentDuration[i] * unpackPrice(lending.dailyRentPrice, scale);\n                require(rentPrice > 0, \"ReNFT::rent price is zero\");\n                paymentToken.safeTransferFrom(msg.sender, address(this), rentPrice);\n            }\n            rentings[rentingIdentifier] = IRegistry.Renting({\n                renterAddress: payable(msg.sender),\n                rentAmount: uint16(cd.rentAmount[i]),\n                rentDuration: cd.rentDuration[i],\n                rentedAt: uint32(block.timestamp)\n            });\n            lendings[lendingIdentifier].availableAmount -= uint16(cd.rentAmount[i]);\n            emit IRegistry.Rent(\n                msg.sender, cd.lendingID[i], rentingID, uint16(cd.rentAmount[i]), cd.rentDuration[i], renting.rentedAt\n                );\n            rentingID++;\n        }\n    }\n\n    function handleStopRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier =\n                keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], cd.lendingID[i]));\n            bytes32 rentingIdentifier =\n                keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], cd.rentingID[i]));\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNotNull(renting);\n            ensureIsReturnable(renting, msg.sender, block.timestamp);\n            require(cd.nftStandard[i] == lending.nftStandard, \"ReNFT::invalid nft standard\");\n            require(renting.rentAmount <= lending.lendAmount, \"ReNFT::critical error\");\n            uint256 secondsSinceRentStart = block.timestamp - renting.rentedAt;\n            distributePayments(lending, renting, secondsSinceRentStart);\n            manageWillAutoRenew(\n                lending, renting, cd.nftAddress[cd.left], cd.nftStandard[cd.left], cd.tokenID[i], cd.lendingID[i]\n            );\n            emit IRegistry.StopRent(cd.rentingID[i], uint32(block.timestamp));\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    function handleClaimRent(CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier =\n                keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], cd.lendingID[i]));\n            bytes32 rentingIdentifier =\n                keccak256(abi.encodePacked(cd.nftAddress[cd.left], cd.tokenID[i], cd.rentingID[i]));\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNotNull(renting);\n            ensureIsClaimable(renting, block.timestamp);\n            distributeClaimPayment(lending, renting);\n            manageWillAutoRenew(\n                lending, renting, cd.nftAddress[cd.left], cd.nftStandard[cd.left], cd.tokenID[i], cd.lendingID[i]\n            );\n            emit IRegistry.RentClaimed(cd.rentingID[i], uint32(block.timestamp));\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function manageWillAutoRenew(\n        IRegistry.Lending storage lending,\n        IRegistry.Renting storage renting,\n        address nftAddress,\n        IRegistry.NFTStandard nftStandard,\n        uint256 tokenID,\n        uint256 lendingID\n    ) private {\n        if (lending.willAutoRenew == false) {\n            // No automatic renewal, stop the lending (or a portion of it) completely!\n\n            // We must be careful here, because the lending might be for an ERC1155 token, which means\n            // that the renting.rentAmount might not be the same as the lending.lendAmount. In this case, we\n            // must NOT delete the lending, but only decrement the lending.lendAmount by the renting.rentAmount.\n            // Notice: this is only possible for an ERC1155 tokens!\n            if (lending.lendAmount > renting.rentAmount) {\n                // update lending lendAmount to reflect NOT renewing the lending\n                // Do not update lending.availableAmount, because the assets will not be lent out again\n                lending.lendAmount -= renting.rentAmount;\n                // return the assets to the lender\n                IERC1155(nftAddress).safeTransferFrom(\n                    address(this), lending.lenderAddress, tokenID, uint256(renting.rentAmount), \"\"\n                );\n            }\n            // If the lending is for an ERC721 token, then the renting.rentAmount is always the same as the\n            // lending.lendAmount, and we can delete the lending. If the lending is for an ERC1155 token and\n            // the renting.rentAmount is the same as the lending.lendAmount, then we can also delete the\n            // lending.\n            else if (lending.lendAmount == renting.rentAmount) {\n                // return the assets to the lender\n                if (nftStandard == IRegistry.NFTStandard.E721) {\n                    IERC721(nftAddress).transferFrom(address(this), lending.lenderAddress, tokenID);\n                } else {\n                    IERC1155(nftAddress).safeTransferFrom(\n                        address(this), lending.lenderAddress, tokenID, uint256(renting.rentAmount), \"\"\n                    );\n                }\n                delete lendings[keccak256(abi.encodePacked(nftAddress, tokenID, lendingID))];\n            }\n            // StopLend event but only the amount that was not renewed (or all of it)\n            emit IRegistry.StopLend(lendingID, uint32(block.timestamp), renting.rentAmount);\n        } else {\n            // automatic renewal, make the assets available to be lent out again\n            lending.availableAmount += renting.rentAmount;\n        }\n    }\n\n    function bundleCall(function(IRegistry.CallData memory) handler, IRegistry.CallData memory cd) private {\n        require(cd.nftAddress.length > 0, \"ReNFT::no nfts\");\n        while (cd.right != cd.nftAddress.length) {\n            if (\n                (cd.nftAddress[cd.left] == cd.nftAddress[cd.right])\n                    && (cd.nftStandard[cd.right] == IRegistry.NFTStandard.E1155)\n            ) {\n                cd.right++;\n            } else {\n                handler(cd);\n                cd.left = cd.right;\n                cd.right++;\n            }\n        }\n        handler(cd);\n    }\n\n    function takeFee(uint256 rentAmt, ERC20 token) private returns (uint256 fee) {\n        fee = rentAmt * rentFee;\n        fee /= 10000;\n        token.safeTransfer(beneficiary, fee);\n    }\n\n    function distributePayments(\n        IRegistry.Lending memory lending,\n        IRegistry.Renting memory renting,\n        uint256 secondsSinceRentStart\n    ) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        ERC20 paymentToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        uint256 decimals = paymentToken.decimals();\n        uint256 scale = 10 ** decimals;\n        uint256 rentPrice = renting.rentAmount * unpackPrice(lending.dailyRentPrice, scale);\n        uint256 totalRenterPmt = rentPrice * renting.rentDuration;\n        uint256 sendLenderAmt = (secondsSinceRentStart * rentPrice) / SECONDS_IN_DAY;\n        require(totalRenterPmt > 0, \"ReNFT::total renter payment is zero\");\n        require(sendLenderAmt > 0, \"ReNFT::lender payment is zero\");\n        uint256 sendRenterAmt = totalRenterPmt - sendLenderAmt;\n        if (rentFee != 0) {\n            uint256 takenFee = takeFee(sendLenderAmt, paymentToken);\n            sendLenderAmt -= takenFee;\n        }\n        paymentToken.safeTransfer(lending.lenderAddress, sendLenderAmt);\n        if (sendRenterAmt > 0) {\n            paymentToken.safeTransfer(renting.renterAddress, sendRenterAmt);\n        }\n    }\n\n    function distributeClaimPayment(IRegistry.Lending memory lending, IRegistry.Renting memory renting) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        ERC20 paymentToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        uint256 decimals = paymentToken.decimals();\n        uint256 scale = 10 ** decimals;\n        uint256 rentPrice = renting.rentAmount * unpackPrice(lending.dailyRentPrice, scale);\n        uint256 finalAmt = rentPrice * renting.rentDuration;\n        uint256 takenFee = 0;\n        if (rentFee != 0) {\n            takenFee = takeFee(finalAmt, paymentToken);\n        }\n        paymentToken.safeTransfer(lending.lenderAddress, finalAmt - takenFee);\n    }\n\n    function safeTransfer(\n        CallData memory cd,\n        address from,\n        address to,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount\n    ) private {\n        if (cd.nftStandard[cd.left] == IRegistry.NFTStandard.E721) {\n            IERC721(cd.nftAddress[cd.left]).transferFrom(from, to, cd.tokenID[cd.left]);\n        } else {\n            IERC1155(cd.nftAddress[cd.left]).safeBatchTransferFrom(from, to, tokenID, lendAmount, \"\");\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function getLending(address nftAddress, uint256 tokenID, uint256 _lendingID)\n        external\n        view\n        returns (uint8, address, uint8, bytes4, uint16, uint16, uint8)\n    {\n        bytes32 identifier = keccak256(abi.encodePacked(nftAddress, tokenID, _lendingID));\n        IRegistry.Lending storage lending = lendings[identifier];\n        return (\n            uint8(lending.nftStandard),\n            lending.lenderAddress,\n            lending.maxRentDuration,\n            lending.dailyRentPrice,\n            lending.lendAmount,\n            lending.availableAmount,\n            uint8(lending.paymentToken)\n        );\n    }\n\n    function getRenting(address nftAddress, uint256 tokenID, uint256 _rentingID)\n        external\n        view\n        returns (address, uint16, uint8, uint32)\n    {\n        bytes32 identifier = keccak256(abi.encodePacked(nftAddress, tokenID, _rentingID));\n        IRegistry.Renting storage renting = rentings[identifier];\n        return (renting.renterAddress, renting.rentAmount, renting.rentDuration, renting.rentedAt);\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function createLendCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        uint8[] memory paymentToken,\n        bool[] memory willAutoRenew\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: lendAmount,\n            lendingID: new uint256[](0),\n            rentingID: new uint256[](0),\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: maxRentDuration,\n            dailyRentPrice: dailyRentPrice,\n            paymentToken: paymentToken,\n            willAutoRenew: willAutoRenew\n        });\n    }\n\n    function createRentCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: new uint256[](0),\n            rentDuration: rentDuration,\n            rentAmount: rentAmount,\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new uint8[](0),\n            willAutoRenew: new bool[](0)\n        });\n    }\n\n    function createActionCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: _rentingID,\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new uint8[](0),\n            willAutoRenew: new bool[](0)\n        });\n    }\n\n    function unpackPrice(bytes4 price, uint256 scale) private pure returns (uint256) {\n        ensureIsUnpackablePrice(price, scale);\n        uint16 whole = uint16(bytes2(price));\n        uint16 decimal = uint16(bytes2(price << 16));\n        uint256 decimalScale = scale / 10000;\n        if (whole > 9999) {\n            whole = 9999;\n        }\n        if (decimal > 9999) {\n            decimal = 9999;\n        }\n        uint256 w = whole * scale;\n        uint256 d = decimal * decimalScale;\n        uint256 fullPrice = w + d;\n        return fullPrice;\n    }\n\n    function sliceArr(uint256[] memory arr, uint256 fromIx, uint256 toIx, uint256 arrOffset)\n        private\n        pure\n        returns (uint256[] memory r)\n    {\n        r = new uint256[](toIx - fromIx);\n        for (uint256 i = fromIx; i < toIx; i++) {\n            r[i - fromIx] = arr[i - arrOffset];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function ensureIsNotZeroAddr(address addr) private pure {\n        require(addr != address(0), \"ReNFT::zero address\");\n    }\n\n    function ensureIsZeroAddr(address addr) private pure {\n        require(addr == address(0), \"ReNFT::not a zero address\");\n    }\n\n    function ensureIsNull(Lending memory lending) private pure {\n        ensureIsZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration == 0, \"ReNFT::duration not zero\");\n        require(lending.dailyRentPrice == 0, \"ReNFT::rent price not zero\");\n    }\n\n    function ensureIsNotNull(Lending memory lending) private pure {\n        ensureIsNotZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration != 0, \"ReNFT::duration zero\");\n        require(lending.dailyRentPrice != 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsNull(Renting memory renting) private pure {\n        ensureIsZeroAddr(renting.renterAddress);\n        require(renting.rentDuration == 0, \"ReNFT::duration not zero\");\n        require(renting.rentedAt == 0, \"ReNFT::rented at not zero\");\n    }\n\n    function ensureIsNotNull(Renting memory renting) private pure {\n        ensureIsNotZeroAddr(renting.renterAddress);\n        require(renting.rentDuration != 0, \"ReNFT::duration is zero\");\n        require(renting.rentedAt != 0, \"ReNFT::rented at is zero\");\n    }\n\n    function ensureIsLendable(CallData memory cd, uint256 i) private pure {\n        require(cd.lendAmount[i] > 0, \"ReNFT::lend amount is zero\");\n        require(cd.lendAmount[i] <= type(uint16).max, \"ReNFT::not uint16\");\n        require(cd.maxRentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(cd.maxRentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(uint32(cd.dailyRentPrice[i]) > 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsRentable(Lending memory lending, CallData memory cd, uint256 i, address msgSender) private pure {\n        require(msgSender != lending.lenderAddress, \"ReNFT::cant rent own nft\");\n        require(cd.rentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(cd.rentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(cd.rentAmount[i] <= type(uint16).max, \"ReNFT::not uint16\");\n        require(cd.rentAmount[i] > 0, \"ReNFT::rentAmount is zero\");\n        require(cd.rentDuration[i] <= lending.maxRentDuration, \"ReNFT::rent duration exceeds allowed max\");\n    }\n\n    function ensureIsReturnable(Renting memory renting, address msgSender, uint256 blockTimestamp) private pure {\n        require(renting.renterAddress == msgSender, \"ReNFT::not renter\");\n        require(!isPastReturnDate(renting, blockTimestamp), \"ReNFT::past return date\");\n    }\n\n    function ensureIsStoppable(Lending memory lending, address msgSender) private pure {\n        require(lending.lenderAddress == msgSender, \"ReNFT::not lender\");\n    }\n\n    function ensureIsUnpackablePrice(bytes4 price, uint256 scale) private pure {\n        require(uint32(price) > 0, \"ReNFT::invalid price\");\n        require(scale >= 10000, \"ReNFT::invalid scale\");\n    }\n\n    function ensureTokenNotSentinel(uint8 paymentIx) private pure {\n        require(paymentIx > 0, \"ReNFT::token is sentinel\");\n    }\n\n    function ensureIsClaimable(IRegistry.Renting memory renting, uint256 blockTimestamp) private pure {\n        require(isPastReturnDate(renting, blockTimestamp), \"ReNFT::return date not passed\");\n    }\n\n    function isPastReturnDate(Renting memory renting, uint256 nowTime) private pure returns (bool) {\n        require(nowTime > renting.rentedAt, \"ReNFT::now before rented\");\n        return nowTime - renting.rentedAt > renting.rentDuration * SECONDS_IN_DAY;\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function setRentFee(uint256 newRentFee) external onlyAdmin {\n        require(newRentFee < 10000, \"ReNFT::fee exceeds 100pct\");\n        rentFee = newRentFee;\n    }\n\n    function setBeneficiary(address payable newBeneficiary) external onlyAdmin {\n        beneficiary = newBeneficiary;\n    }\n\n    function setPaused(bool newPaused) external onlyAdmin {\n        paused = newPaused;\n    }\n}\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n",
  "sourceMap": "2113:26128:15:-:0;;;2356:1;2328:29;;;;2363;;2398:26;;;-1:-1:-1;;2398:26:15;;;-1:-1:-1;2430:26:15;;2807:323;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2900:32;2920:11;2900:19;:32::i;:::-;2942:35;2962:14;2942:19;:35::i;:::-;2987:29;3007:8;2987:19;:29::i;:::-;3026:8;:33;;-1:-1:-1;;;;;3026:33:15;;;-1:-1:-1;;;;;;3026:33:15;;;;;;;3069:11;:28;;;;;;;;;;;;;;;3026:33;3107:16;;;;;;;;;;;2113:26128;;24018:123;-1:-1:-1;;;;;24092:18:15;;24084:50;;;;-1:-1:-1;;;24084:50:15;;748:2:21;24084:50:15;;;730:21:21;787:2;767:18;;;760:30;826:21;806:18;;;799:49;865:18;;24084:50:15;;;;;;;;24018:123;:::o;14:527:21:-;110:6;118;126;179:2;167:9;158:7;154:23;150:32;147:52;;;195:1;192;185:12;147:52;227:9;221:16;246:31;271:5;246:31;:::i;:::-;346:2;331:18;;325:25;296:5;;-1:-1:-1;359:33:21;325:25;359:33;:::i;:::-;463:2;448:18;;442:25;411:7;;-1:-1:-1;476:33:21;442:25;476:33;:::i;:::-;528:7;518:17;;;14:527;;;;;:::o;894:131::-;-1:-1:-1;;;;;969:31:21;;959:42;;949:70;;1015:1;1012;1005:12;894:131;2113:26128:15;;;;;;",
  "sourcePath": "contracts/Registry.sol",
  "type": "contract"
}